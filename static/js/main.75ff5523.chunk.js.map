{"version":3,"sources":["contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","config/constants/contracts.ts","utils/addressHelpers.ts","hooks/useActiveWeb3React.ts","components/Layout/Row.tsx","state/mint/actions.ts","state/swap/actions.ts","utils/bigNumber.ts","utils/formatBalance.ts","components/Layout/Column.tsx","utils/index.ts","config/constants/tokens.ts","config/constants/index.ts","utils/contractHelpers.ts","hooks/useContract.ts","components/Balance.tsx","config/constants/types.ts","state/user/hooks/index.tsx","utils/multicall.ts","utils/wrappedCurrency.ts","views/Pools/helpers.tsx","components/Logo/DoubleLogo.tsx","components/Logo/ListLogo.tsx","hooks/Tokens.ts","state/user/actions.ts","state/multicall/hooks.ts","hooks/useTokenAllowance.ts","hooks/useApproveCallback.ts","state/types.ts","state/application/reducer.ts","state/global/actions.ts","state/user/reducer.ts","state/transactions/reducer.ts","state/swap/reducer.ts","state/mint/reducer.ts","state/lists/reducer.ts","state/burn/reducer.ts","state/multicall/reducer.ts","state/index.ts","config/index.ts","config/constants/lists.ts","state/lists/hooks.ts","state/user/hooks/helpers.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/fetchVaultPublic.ts","state/pools/fetchVaultUser.ts","state/pools/index.ts","components/QuestionHelper/index.tsx","state/lists/actions.ts","utils/prices.ts","state/multicall/actions.ts","state/predictions/helpers.ts","state/predictions/queries.ts","hooks/useTheme.ts","config/constants/pools.ts","hooks/useToast.ts","utils/providers.ts","state/farms/hooks.ts","state/wallet/hooks.ts","config/constants/endpoints.ts","hooks/usePairs.ts","components/ConnectWalletButton.tsx","state/transactions/hooks.tsx","state/transactions/actions.ts","utils/getGasPrice.ts","components/Card/index.tsx","utils/compoundApyHelpers.ts","config/localization/languages.ts","state/swap/hooks.ts","hooks/useParsedQueryString.ts","hooks/useCallWithGasPrice.ts","state/lottery/helpers.ts","hooks/useRefresh.ts","state/profile/helpers.ts","state/profile/getProfile.ts","state/profile/index.tsx","config/constants/priceHelperLps.ts","state/farms/fetchPublicFarmData.ts","state/farms/fetchFarm.ts","state/farms/fetchFarms.ts","utils/farmsPriceHelpers.ts","state/farms/fetchFarmsPrices.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","hooks/useDebounce.ts","utils/getTokenLogoURL.ts","components/Logo/CurrencyLogo.tsx","config/constants/farms.ts","hooks/useTokenBalance.ts","utils/isZero.ts","contexts/Localization/helpers.ts","state/block/hooks.ts","config/constants/nfts.ts","components/RoiCalculatorModal/useRoiCalculatorReducer.ts","components/RoiCalculatorModal/RoiCalculatorFooter.tsx","components/RoiCalculatorModal/RoiCard.tsx","components/RoiCalculatorModal/AnimatedArrow.tsx","components/RoiCalculatorModal/index.tsx","hooks/useAuth.ts","utils/wallet.ts","utils/currencyId.ts","state/application/hooks.ts","utils/uriToHttp.ts","state/teams/index.tsx","config/constants/lottery.ts","components/TransactionConfirmationModal/index.tsx","hooks/ENS/useENS.ts","hooks/ENS/useENSName.ts","hooks/ENS/useENSAddress.ts","utils/trades.ts","hooks/Trades.ts","state/profile/hooks.ts","utils/calls/estimateGas.ts","utils/calls/farms.ts","utils/calls/pools.ts","components/Tags.tsx","utils/web3React.ts","components/App/Transactions/Transaction.tsx","components/App/Transactions/TransactionsModal.tsx","components/App/Transactions/index.tsx","components/App/AppHeader.tsx","components/App/AppBody.tsx","state/block/index.ts","utils/getRpcUrl.ts","utils/ENS/parseENSAddress.ts","components/Loader/CircleLoader.tsx","utils/getTokenList.ts","utils/ENS/resolveENSContentHash.ts","hooks/useFetchListCallback.ts","contexts/ToastsContext/Provider.tsx","contexts/ToastsContext/Listener.tsx","components/CurrencyInputPanel/NumericalInput.tsx","components/CurrencyInputPanel/index.tsx","components/SearchModal/filtering.ts","config/constants/campaigns.ts","hooks/usePersistState.ts","components/Loader/Dots.tsx","config/constants/teams.ts","hooks/useTotalSupply.ts","state/user/hooks/useUserAddedTokens.ts","state/teams/helpers.ts","components/Layout/Container.tsx","config/constants/meta.ts","components/Layout/Page.tsx","utils/collectibles.ts","hooks/usePreviousValue.ts","components/TokenImage/index.tsx","components/Menu/Footer.tsx","components/Menu/SubNav.tsx","views/Page.tsx","hooks/useLastUpdated.ts","config/constants/ifo.ts","hooks/useTransactionDeadline.ts","hooks/useCurrentBlockTimestamp.ts","state/application/actions.ts","config/abi/erc20.ts","utils/contenthashToUri.ts","state/pools/helpers.ts","contexts/RefreshContext.tsx","components/UnsupportedCurrencyFooter.tsx","components/Logo/Logo.tsx","components/SearchModal/ImportToken.tsx","utils/maxAmountSpend.ts","components/Menu/GlobalSettings/TransactionSettings.tsx","components/Menu/GlobalSettings/ExpertModal.tsx","components/Menu/GlobalSettings/GasSettings.tsx","components/Menu/GlobalSettings/SettingsModal.tsx","components/Menu/GlobalSettings/index.tsx","hooks/useHttpLocations.ts","hooks/ENS/useENSContentHash.ts","state/burn/actions.ts","utils/achievements.ts","utils/latinise.ts","state/mint/hooks.ts","views/AddLiquidity/ConfirmAddModalBottom.tsx","views/AddLiquidity/PoolPriceBar.tsx","views/AddLiquidity/index.tsx","state/predictions/index.ts","state/lottery/getLotteriesData.ts","state/lottery/getUserLotteryData.ts","state/lottery/index.ts","components/Loader/PageLoader.tsx","utils/getTimePeriods.ts","state/collectibles/index.ts","components/PositionCard/index.tsx","state/voting/helpers.ts","state/voting/index.tsx","state/lottery/getUserTicketsData.ts","routerHistory.ts","state/achievements/helpers.ts","state/achievements/index.ts","utils/farmHelpers.ts","utils/apr.ts","components/Layout/Flex.tsx","components/Select/Select.tsx","components/Loading.tsx","hooks/useDelayedUnmount.ts","components/SearchModal/CommonBases.tsx","components/SearchModal/ImportRow.tsx","components/SearchModal/CurrencyList.tsx","components/SearchModal/sorting.ts","components/SearchModal/CurrencySearch.tsx","components/SearchModal/types.ts","components/SearchModal/ManageLists.tsx","components/SearchModal/ManageTokens.tsx","components/SearchModal/Manage.tsx","components/SearchModal/ImportList.tsx","components/SearchModal/CurrencySearchModal.tsx","components/DatePicker/DatePicker.tsx","components/DatePicker/DatePickerPortal.tsx","components/DatePicker/TimePicker.tsx","components/PageHeader/PageHeader.tsx","components/SearchInput/SearchInput.tsx","hooks/useIsWindowVisible.ts","state/application/updater.ts","state/lists/updater.ts","hooks/useInterval.ts","state/multicall/retry.ts","state/multicall/updater.tsx","state/multicall/chunkArray.ts","state/transactions/updater.tsx","hooks/useEagerConnect.ts","style/Global.tsx","hooks/useBUSDPrice.ts","components/Menu/UserMenu/WalletModal.tsx","components/Menu/config.ts","components/Menu/UserMenu/CopyAddress.tsx","components/Menu/UserMenu/WalletInfo.tsx","components/Menu/UserMenu/TransactionRow.tsx","components/Menu/UserMenu/WalletTransactions.tsx","views/Pools/components/ToggleView/ToggleView.tsx","components/Menu/UserMenu/WalletUserMenuItem.tsx","components/Menu/UserMenu/index.tsx","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","state/pools/hooks.ts","views/Pools/components/PoolCard/AprRow.tsx","views/Pools/components/PoolCard/StyledCard.tsx","views/Pools/components/PoolCard/CardFooter/ExpandedFooter.tsx","views/Pools/components/PoolCard/CardFooter/index.tsx","views/Pools/components/CakeVaultCard/CakeVaultTokenPairImage.tsx","views/Pools/components/PoolCard/StyledCardHeader.tsx","views/Pools/hooks/useApprove.ts","views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx","views/Pools/components/PoolCard/Modals/NotEnoughTokensModal.tsx","views/Pools/components/PoolCard/Modals/PercentageButton.tsx","views/Pools/hooks/useStakePool.ts","views/Pools/hooks/useUnstakePool.ts","views/Pools/components/PoolCard/Modals/StakeModal.tsx","views/Pools/components/PoolCard/CardActions/StakeActions.tsx","views/Pools/hooks/useHarvestPool.ts","views/Pools/components/PoolCard/Modals/CollectModal.tsx","views/Pools/components/PoolCard/CardActions/HarvestActions.tsx","views/Pools/components/PoolCard/CardActions/index.tsx","views/Pools/components/PoolCard/index.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultApprovalAction.tsx","views/Pools/hooks/useWithdrawalFeeTimer.ts","views/Pools/components/CakeVaultCard/WithdrawalFeeTimer.tsx","views/Pools/components/CakeVaultCard/UnstakingFeeCountdownRow.tsx","views/Pools/components/CakeVaultCard/FeeSummary.tsx","views/Pools/components/CakeVaultCard/VaultStakeModal.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/HasSharesActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultStakeActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/index.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitBalance.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitRow.tsx","views/Pools/components/CakeVaultCard/index.tsx","views/Pools/components/PoolTabButtons.tsx","views/Pools/components/BountyModal.tsx","views/Pools/components/BountyCard.tsx","views/Pools/components/HelpButton.tsx","views/Pools/components/PoolsTable/Cells/BaseCell.tsx","views/Pools/components/PoolsTable/Cells/NameCell.tsx","views/Pools/components/PoolsTable/Cells/EarningsCell.tsx","views/Pools/components/PoolsTable/Apr.tsx","views/Pools/components/PoolsTable/Cells/AprCell.tsx","views/Pools/components/PoolsTable/Cells/TotalStakedCell.tsx","views/Pools/components/PoolsTable/Cells/EndsInCell.tsx","views/Pools/components/PoolsTable/Cells/ExpandActionCell.tsx","views/Pools/components/PoolsTable/ActionPanel/styles.ts","views/Pools/components/PoolsTable/ActionPanel/Harvest.tsx","views/Pools/components/PoolsTable/ActionPanel/Stake.tsx","views/Pools/components/PoolsTable/ActionPanel/ActionPanel.tsx","views/Pools/components/PoolsTable/PoolRow.tsx","views/Pools/components/PoolsTable/PoolsTable.tsx","views/Pools/index.tsx","config/constants/swapWarningTokens.ts","views/Swap/components/AddressInputPanel.tsx","views/Swap/components/styleds.tsx","views/Swap/components/FormattedPriceImpact.tsx","views/Swap/components/SwapModalFooter.tsx","views/Swap/components/SwapModalHeader.tsx","views/Swap/components/ConfirmSwapModal.tsx","hooks/useLast.ts","views/Swap/components/SwapRoute.tsx","views/Swap/components/AdvancedSwapDetails.tsx","views/Swap/components/AdvancedSwapDetailsDropdown.tsx","views/Swap/components/TradePrice.tsx","views/Swap/components/ImportTokenWarningModal.tsx","views/Swap/components/ProgressSteps.tsx","hooks/useSwapCallback.ts","hooks/useWrapCallback.ts","views/Swap/components/SwapWarningModal/SafemoonWarning.tsx","views/Swap/components/SwapWarningModal/BondlyWarning.tsx","views/Swap/components/SwapWarningModal/Acknowledgement.tsx","views/Swap/components/SwapWarningModal/index.tsx","views/Swap/index.tsx","views/Swap/components/confirmPriceImpactWithoutFee.ts","views/AddLiquidity/redirects.tsx","views/RemoveLiquidity/redirects.tsx","views/Swap/redirects.tsx","App.tsx","Providers.tsx","index.tsx"],"names":["initialState","isFetching","currentLanguage","EN","languageMap","Map","set","locale","translations","LanguageContext","createContext","undefined","LanguageProvider","children","useState","codeFromStorage","getLanguageCodeFromLS","languages","state","setState","useEffect","a","enLocale","get","fetchLocale","currentLocale","prevState","fetchInitialLocales","setLanguage","language","has","localStorage","setItem","LS_KEY","translate","useCallback","key","data","translatedText","match","interpolatedText","Object","keys","forEach","dataKey","templateKey","RegExp","replace","toString","Provider","value","t","useTranslation","languageContext","useContext","Error","getAddress","address","chainId","process","ChainId","MAINNET","getCakeAddress","tokens","hmochi","getMasterChefAddress","addresses","getUpgradeSwapAddress","getOldMochiAddress","getMulticallAddress","getWbnbAddress","wone","getLotteryV2Address","getPancakeProfileAddress","getPancakeRabbitsAddress","getBunnyFactoryAddress","getClaimRefundAddress","getPointCenterIfoAddress","getBunnySpecialAddress","getTradingCompetitionAddress","getEasterNftAddress","getCakeVaultAddress","getPredictionsAddress","getChainlinkOracleAddress","getBunnySpecialCakeVaultAddress","getBunnySpecialPredictionAddress","getFarmAuctionAddress","useActiveWeb3React","useWeb3React","library","web3React","refEth","useRef","simpleRpcProvider","provider","setprovider","current","parseInt","Row","styled","Box","width","align","justify","padding","border","borderRadius","RowBetween","AutoRow","div","gap","RowFixed","Field","typeInput","createAction","resetMintState","selectCurrency","switchCurrencies","replaceSwapState","setRecipient","BIG_ZERO","BigNumber","BIG_ONE","BIG_TEN","ethersToSerializedBigNumber","ethersBn","ethersToBigNumber","toJSON","getDecimalAmount","amount","decimals","times","pow","getBalanceAmount","dividedBy","getBalanceNumber","balance","toNumber","getFullDisplayBalance","displayDecimals","toFixed","formatNumber","number","minPrecision","maxPrecision","options","minimumFractionDigits","maximumFractionDigits","toLocaleString","formatBigNumber","remainder","mod","ethers","from","formatUnits","sub","formatBigNumberToFixed","formattedString","formatFixedNumber","split","leftSide","Column","ColumnCenter","AutoColumn","isAddress","getBscScanLink","type","BASE_BSC_SCAN_URLS","shortenAddress","chars","parsed","substring","calculateGasMargin","mul","add","basisPointsToPercent","num","Percent","JSBI","BigInt","calculateSlippageAmount","slippage","divide","multiply","raw","getContract","ABI","account","AddressZero","Contract","getSigner","connectUnchecked","getProviderOrSigner","getRouterContract","_","ROUTER_ADDRESS","IUniswapV2Router02ABI","escapeRegExp","string","isTokenOnList","defaultTokens","currency","ETHER","Boolean","Token","CAKE","BUSD","USDT","WONE","HMOCHI","USDC","symbol","projectLink","oldhmochi","xmochi","jewel","smug","bnb","bscbnb","kiba","sushi","one","busd","bmochi","apesox","eth","usdt","usdc","doge","bscbusd","onemoon","safemoon","freyala","rot","viper","dsla","btc","floki","ape","dai","BASES_TO_CHECK_TRADES_AGAINST","WETH","ADDITIONAL_BASES","CUSTOM_BASES","SUGGESTED_BASES","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","BIG_INT_ZERO","ONE_BIPS","BIPS_BASE","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","BLOCKED_PRICE_IMPACT_NON_EXPERT","MIN_BNB","exponentiate","BETTER_TRADE_LESS_HOPS_THRESHOLD","ZERO_PERCENT","ONE_HUNDRED_PERCENT","BLOCKED_ADDRESSES","abi","signer","signerOrProvider","getBep20Contract","bep20Abi","getErc721Contract","erc721Abi","getIfoV1Contract","ifoV1Abi","getIfoV2Contract","ifoV2Abi","getSouschefContract","id","config","poolsConfig","find","pool","sousId","poolCategory","PoolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","getSouschefV2Contract","sousChefV2","getPointCenterIfoContract","pointCenterIfo","getCakeContract","cakeAbi","getProfileContract","profileABI","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","getLotteryV2Contract","lotteryV2Abi","getMasterchefContract","masterChef","getUpgradeSwapContract","upgradeSwapAbi","getOldMochiContract","getClaimRefundContract","claimRefundAbi","getTradingCompetitionContract","tradingCompetitionAbi","getEasterNftContract","easterNftAbi","getCakeVaultContract","cakeVaultAbi","getPredictionsContract","predictionsAbi","getChainlinkOracleContract","chainlinkOracleAbi","getMulticallContract","MultiCallAbi","getBunnySpecialCakeVaultContract","bunnySpecialCakeVaultAbi","getBunnySpecialPredictionContract","bunnySpecialPredictionAbi","getFarmAuctionContract","farmAuctionAbi","useIfoV1Contract","useMemo","useIfoV2Contract","useERC20","useERC721","useCake","useOldMochi","useBunnyFactory","useProfile","useLotteryV2Contract","useMasterchef","useUpgradeSwapContract","useSousChef","usePointCenterIfoContract","useClaimRefundContract","useTradingCompetitionContract","useEasterNftContract","useCakeVaultContract","usePredictionsContract","useContract","withSignerIfPossible","error","console","useTokenContract","tokenAddress","ERC20_ABI","useWETHContract","WETH_ABI","useENSRegistrarContract","ENS_ABI","useENSResolverContract","ENS_PUBLIC_RESOLVER_ABI","useBytes32TokenContract","ERC20_BYTES32_ABI","usePairContract","pairAddress","IUniswapV2PairABI","useMulticallContract","multiCallAbi","Balance","color","isDisabled","unit","prefix","onClick","props","previousValue","start","end","suffix","duration","separator","PoolIds","NftType","LotteryStatus","AuctionStatus","useAudioModeManager","dispatch","useDispatch","audioPlay","useSelector","user","toggleSetAudioMode","muteAudio","unmuteAudio","useIsExpertMode","userExpertMode","useExpertModeManager","expertMode","toggleSetExpertMode","updateUserExpertMode","useThemeManager","isDark","toggleThemeAction","useUserSingleHopOnly","userSingleHopOnly","newSingleHopOnly","updateUserSingleHopOnly","useUserSlippageTolerance","userSlippageTolerance","updateUserSlippageTolerance","useUserFarmStakedOnly","isActive","userFarmStakedOnly","setUserFarmStakedOnly","stakedOnly","farmStakedOnly","FarmStakedOnly","TRUE","FALSE","updateUserFarmStakedOnly","ON_FINISHED","useUserTransactionTTL","userDeadline","deadline","updateUserDeadline","useAddUserToken","token","addSerializedToken","serializedToken","serializeToken","useRemoveUserAddedToken","removeSerializedToken","useGasPrice","userGas","gasPrice","GAS_PRICE_GWEI","testnet","useGasPriceManager","updateGasPrice","serializePair","pair","token0","token1","usePairAdder","addSerializedPair","serializedPair","toV2LiquidityToken","tokenA","tokenB","Pair","useTrackedTokenPairs","useAllTokens","pinnedPairs","generatedPairs","flatMap","map","base","filter","p","savedSerializedPairs","pairs","userPairs","forChain","pairId","deserializeToken","combinedList","concat","keyed","reduce","memo","sorted","sortsBefore","multicall","calls","multi","itf","utils","Interface","calldata","call","toLowerCase","encodeFunctionData","name","params","aggregate","returnData","res","i","decodeFunctionResult","multicallv2","requireSuccess","tryAggregate","result","wrappedCurrency","wrappedCurrencyAmount","currencyAmount","TokenAmount","unwrappedToken","equals","convertSharesToCake","shares","cakePerFullShare","decimalsToRound","sharePriceNumber","amountInCake","multipliedBy","cakeAsNumberBalance","cakeAsBigNumber","cakeAsDisplayBalance","convertCakeToShares","cake","amountInShares","sharesAsNumberBalance","sharesAsBigNumber","sharesAsDisplayBalance","getAprData","performanceFee","isAutoVault","apr","autoCompoundFrequency","getApy","getCakeVaultEarnings","cakeAtLastUserAction","userShares","pricePerFullShare","earningTokenPrice","hasAutoEarnings","gt","autoCakeProfit","minus","autoCakeToDisplay","gte","autoUsdProfit","autoUsdToDisplay","getPoolBlockInfo","currentBlock","startBlock","endBlock","isFinished","shouldShowBlockCountdown","blocksUntilStart","Math","max","blocksRemaining","hasPoolStarted","blocksToDisplay","Wrapper","margin","DoubleCurrencyLogo","currency0","currency1","size","CurrencyLogo","style","marginRight","StyledListLogo","Logo","ListLogo","logoURI","alt","srcs","useHttpLocations","useTokensFromMap","tokenMap","includeUserAdded","userAddedTokens","useUserAddedTokens","mapWithoutUrls","newMap","tokenMap_","useCombinedActiveList","useAllInactiveTokens","inactiveTokens","useCombinedInactiveList","activeTokensAddresses","includes","useUnsupportedTokens","useUnsupportedTokenList","useIsTokenActive","activeTokens","useFoundOnInactiveList","searchQuery","filterTokens","values","useIsUserAddedToken","currencyEquals","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","length","test","arrayify","parseBytes32String","useToken","tokenContract","tokenContractBytes32","tokenName","useSingleCallResult","NEVER_RELOAD","tokenNameBytes32","symbolBytes32","loading","useCurrency","currencyId","isBNB","toUpperCase","removeSerializedPair","toggleTheme","isMethodArg","x","indexOf","isValidMethodArgs","Array","isArray","every","xi","INVALID_RESULT","valid","blockNumber","blocksPerFetch","Infinity","useCallsData","callResults","serializedCallKeys","JSON","stringify","c","toCallKey","sort","callKeys","parse","parseCallKey","addMulticallListeners","removeMulticallListeners","INVALID_CALL_STATE","syncing","LOADING_CALL_STATE","toCallState","callResult","contractInterface","fragment","latestBlockNumber","success","debug","useSingleContractMultipleData","contract","methodName","callInputs","interface","getFunction","results","inputs","callData","useBlockNumber","useMultipleContractSingleData","useTokenAllowance","ApprovalState","owner","spender","allowance","useApproveCallback","amountToApprove","callWithGasPrice","useCallWithGasPrice","currentAllowance","pendingApproval","useHasPendingApproval","approvalState","APPROVED","lessThan","PENDING","NOT_APPROVED","UNKNOWN","addTransaction","useTransactionAdder","approve","useExact","estimateGas","MaxUint256","catch","estimatedGas","gasLimit","then","response","summary","approval","useApproveCallbackFromTrade","trade","allowedSlippage","computeSlippageAdjustedAmounts","INPUT","BetPosition","PredictionStatus","HistoryFilter","SnapshotCommand","ProposalType","ProposalState","VotingStateLoadingStatus","createReducer","builder","addCase","updateBlockNumber","action","payload","updateVersion","currentTimestamp","Date","getTime","pairKey","token0Address","token1Address","timestamp","default","lastUpdateVersionTimestamp","tokenAAddress","tokenBAddress","now","transactions","hash","claim","txs","addedTime","clearAllTransactions","checkedTransaction","tx","lastCheckedBlockNumber","finalizeTransaction","receipt","confirmedTime","independentField","typedValue","OUTPUT","recipient","field","inputCurrencyId","outputCurrencyId","otherField","CURRENCY_A","otherTypedValue","noLiquidity","NEW_LIST_STATE","loadingRequestId","pendingUpdate","lastInitializedDefaultListOfLists","DEFAULT_LIST_OF_LISTS","byUrl","UNSUPPORTED_LIST_URLS","listUrl","activeListUrls","DEFAULT_ACTIVE_LIST_URLS","fetchTokenList","pending","requestId","url","fulfilled","tokenList","getVersionUpgrade","version","VersionUpgrade","NONE","push","rejected","errorMessage","addList","removeList","u","enableList","disableList","acceptListUpdate","lastInitializedSet","s","l","Set","newListOfListsSet","LIQUIDITY_PERCENT","listeners","callListeners","callKey","fetchingMulticallResults","fetchingBlockNumber","errorFetchingMulticallResults","updateMulticallResults","PERSISTED_KEYS","store","configureStore","devTools","reducer","achievements","achievementsReducer","block","blockReducer","farms","farmsReducer","pools","poolsReducer","predictions","predictionsReducer","profile","profileReducer","teams","teamsReducer","collectibles","collectiblesReducer","voting","votingReducer","lottery","lotteryReducer","application","swap","mint","burn","lists","middleware","getDefaultMiddleware","thunk","save","states","preloadedState","load","useAppDispatch","EXPONENTIAL_AT","DECIMAL_PLACES","BSC_BLOCK_TIME","CAKE_PER_BLOCK","BLOCKS_PER_YEAR","CAKE_PER_YEAR","BASE_URL","BASE_ADD_LIQUIDITY_URL","BASE_BSC_SCAN_URL","DEFAULT_TOKEN_DECIMAL","DEFAULT_GAS_LIMIT","sortByListPriority","urlA","urlB","first","Number","MAX_SAFE_INTEGER","second","WrappedTokenInfo","tokenInfo","tags","this","EMPTY_LIST","listCache","WeakMap","listToTokenMap","list","tagId","useAllLists","combineMaps","map1","map2","useCombinedTokenMapFromUrls","urls","slice","allTokens","currentUrl","assign","useActiveListUrls","DEFAULT_TOKEN_LIST","allActiveListUrls","useInactiveListUrls","useDefaultTokenList","UNSUPPORTED_TOKEN_LIST","useIsListActive","GAS_PRICE","parseUnits","fast","instant","fetchPoolsBlockLimits","poolsWithEnd","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","index","fetchPoolsTotalStaking","nonBnbPools","stakingToken","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","totalStaked","fetchPoolStakingLimit","sousContract","poolLimitPerUser","stakingLimit","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","stakingLimitPromises","validPool","Promise","all","stakingLimits","accum","bnbPools","nonMasterPools","masterChefContract","fetchPoolsAllowance","erc20ABI","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","_hex","masterPoolAmount","fetchUserPendingRewards","pendingRewards","pendingMochi","pendingReward","fetchPublicVaultData","method","sharePrice","estimatedCakeBountyReward","totalPendingCakeHarvest","totalSharesAsBigNumber","sharePriceAsBigNumber","totalCakeInVaultEstimate","totalShares","totalCakeInVault","fetchVaultFees","callFee","withdrawalFee","withdrawalFeePeriod","cakeVaultContract","fetchVaultUser","userContractResponse","isLoading","lastDepositedTime","lastUserActionTime","userDataLoaded","cakeVault","fees","userData","fetchPoolsPublicDataAsync","getState","blockLimits","totalStakings","prices","getTokenPricesFromFarm","liveData","blockLimit","entry","totalStaking","isPoolEndBlockExceeded","isPoolFinished","stakingTokenAddress","stakingTokenPrice","earningTokenAddress","earningToken","getPoolApr","parseFloat","tokenPerBlock","setPoolsPublicData","fetchPoolsStakingLimitsAsync","stakingLimitData","fetchPoolsUserDataAsync","stakingTokenBalances","stakingTokenBalance","stakedBalance","setPoolsUserData","updateUserAllowance","updatePoolsUserData","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","fetchCakeVaultPublicData","createAsyncThunk","publicVaultInfo","fetchCakeVaultFees","vaultFees","fetchCakeVaultUserData","PoolsSlice","createSlice","reducers","livePoolsData","livePoolData","userPoolData","findIndex","extraReducers","actions","QuestionWrapper","QuestionHelper","text","useTooltip","placement","trigger","targetRef","tooltip","tooltipVisible","ref","BASE_FEE","INPUT_FRACTION_AFTER_FEE","subtract","computeTradePriceBreakdown","realizedLPFee","route","currentFee","priceImpactWithoutFeeFraction","priceImpact","priceImpactWithoutFee","numerator","denominator","inputAmount","quotient","CurrencyAmount","ether","pct","maximumAmountIn","minimumAmountOut","warningSeverity","formatExecutionPrice","inverted","executionPrice","invert","toSignificant","outputAmount","ADDRESS_REGEX","LOWER_HEX_REGEX","pcs","Result","numberOrNull","valueNum","isNaN","transformBetResponse","betResponse","bet","position","BULL","BEAR","claimed","claimedHash","totalBets","totalBNB","round","transformRoundResponse","roundResponse","positionResponse","epoch","failed","startAt","lockAt","lockBlock","lockPrice","closePrice","totalAmount","bullBets","bearBets","bearAmount","bullAmount","bets","getRoundResult","currentEpoch","CANCELED","LIVE","roundResultPosition","WIN","LOSE","getCanClaim","getUnclaimedWinningBets","getBetHistory","where","skip","request","GRAPH_API_PREDICTION","gql","getLedgerData","epochs","ledgerCalls","getClaimStatuses","claimableCalls","claimableResponses","ledgerResponses","claimableResponse","claimable","getPredictionData","staticCalls","intervalBlocks","minBetAmount","paused","bufferBlocks","rewardRate","status","PAUSED","getRoundsData","makeFutureRoundResponse","rewardBaseCalAmount","rewardAmount","oracleCalled","makeRoundData","rounds","makeLedgerData","ledgers","ledgerResponse","eq","serializePredictionsLedgerResponse","serializePredictionsRoundsResponse","parseBigNumberObj","useTheme","theme","StyledThemeContext","CORE","harvest","sortOrder","useToast","toastContext","ToastsContext","RPC_URL","getRpcUrl","providers","JsonRpcProvider","usePollFarmsData","includeArchive","useRefresh","slowRefresh","pids","farmsConfig","nonArchivedFarms","farmToFetch","pid","fetchFarmsPublicDataAsync","fetchFarmUserDataAsync","usePollCoreFarmData","fastRefresh","useFarms","useFarmFromPid","f","useFarmUser","farm","tokenBalance","earnings","useLpTokenPrice","lpSymbol","farmTokenPriceInUsd","busdPrice","useBusdPriceFromPid","lpTokenPrice","lpTotalSupply","lpTotalInQuoteToken","overallValueOfAllTokensInFarm","tokenAmountTotal","totalLpTokens","usePriceBnbBusd","bnbBusdFarm","quoteToken","usePriceCakeBusd","cakePriceBusdAsString","useTokenBalancesWithLoadingIndicator","validatedTokens","validatedTokenAddresses","vt","balances","ERC20_INTERFACE","anyLoading","some","callState","useTokenBalances","useTokenBalance","useCurrencyBalances","currencies","ethBalance","uncheckedAddresses","multicallContract","useBNBBalances","useCurrencyBalance","useAllTokenBalances","GRAPH_API_PROFILE","REACT_APP_GRAPH_API_PROFILE","REACT_APP_GRAPH_API_PREDICTION","GRAPH_API_LOTTERY","REACT_APP_GRAPH_API_LOTTERY","SNAPSHOT_VOTING_API","REACT_APP_SNAPSHOT_VOTING_API","SNAPSHOT_BASE_URL","REACT_APP_SNAPSHOT_BASE_URL","SNAPSHOT_API","SNAPSHOT_HUB_API","PairState","PAIR_INTERFACE","usePairs","currencyA","currencyB","pairAddresses","reserves","LOADING","INVALID","NOT_EXISTS","reserve0","reserve1","EXISTS","usePair","ConnectWalletButton","useAuth","login","logout","onPresentConnectModal","useWalletModal","useAllTransactions","isTransactionRecent","allTransactions","getGasPrice","Card","colors","background","LightCard","backgroundAlt","LightGreyCard","cardBorder","GreyCard","dropdown","DAYS_TO_CALCULATE_AGAINST","getInterestBreakdown","principalInUSD","compoundFrequency","timesCompounded","aprAsDecimal","roundingDecimalsNew","days","daysAsDecimalOfYear","principal","interestEarned","getPrincipalForInterest","interest","compoundingFrequency","apyAsDecimal","performanceFeeAsDecimal","takenAsPerformanceFee","getRoi","amountEarned","amountInvested","code","languageList","useSwapState","useSwapActionHandlers","onCurrencySelection","onSwitchTokens","onUserInput","onChangeRecipient","tryParseAmount","typedValueParsed","BAD_RECIPIENT_ADDRESSES","involvesAddress","checksummedAddress","path","liquidityToken","useDerivedSwapInfo","inputError","inputCurrency","outputCurrency","recipientLookup","useENS","to","relevantTokenBalances","isExactIn","parsedAmount","bestTradeExactIn","useTradeExactIn","bestTradeExactOut","useTradeExactOut","v2Trade","currencyBalances","formattedTo","slippageAdjustedAmounts","balanceIn","amountIn","parseCurrencyFromURLParameter","urlParam","ENS_NAME_REGEX","queryParametersToSwapState","parsedQs","validatedRecipient","exactAmount","parseIndependentFieldURLParameter","exactField","useDefaultsFromURLSearch","search","useLocation","parseArrays","ignoreQueryPrefix","useParsedQueryString","setResult","methodArgs","overrides","contractMethod","hasManualGasPriceOverride","lotteryContract","processViewLotterySuccessResponse","lotteryId","startTime","endTime","priceTicketInCake","discountDivisor","treasuryFee","firstTicketId","lastTicketId","amountCollectedInCake","finalNumber","cakePerBracket","countWinnersPerBracket","rewardsBreakdown","statusKey","serializedCakePerBracket","cakeInBracket","serializedCountWinnersPerBracket","winnersInBracket","serializedRewardsBreakdown","reward","processViewLotteryErrorResponse","fetchLottery","viewLottery","lotteryData","fetchMultipleLotteries","lotteryIds","multicallRes","processedResponses","fetchCurrentLotteryIdAndMaxBuy","currentLotteryId","maxNumberTicketsPerBuyOrClaim","getRoundIdsArray","currentIdAsInt","roundIds","NUM_ROUNDS_TO_FETCH_FROM_NODES","roundId","useProcessLotteryResponse","priceTicketInCakeAsString","discountDivisorAsString","amountCollectedInCakeAsString","userTickets","hasRoundBeenClaimed","tickets","ticket","RefreshContext","slow","transformProfileResponse","profileResponse","userId","numberPoints","teamId","nftAddress","tokenId","points","profileContract","profileApi","REACT_APP_API_PROFILE","getUsername","fetch","ok","json","username","getProfile","hasRegistered","getUserProfile","getTeam","team","getNftByTokenId","nft","Cookies","avatar","images","sm","domain","secure","expires","isInitialized","profileSlice","profileFetchStart","profileFetchSucceeded","_state","profileFetchFailed","profileClear","addPoints","fetchProfile","priceHelperLps","fetchFarm","lpAddresses","lpAddress","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","tokenDecimals","quoteTokenDecimals","lpTokenRatio","quoteTokenAmountTotal","tokenAmountMc","quoteTokenAmountMc","masterchefABI","info","totalAllocPoint","allocPoint","poolWeight","tokenPriceVsQuote","multiplier","fetchPublicFarmData","farmPublicData","fetchFarms","farmsToFetch","farmConfig","filterFarmsByQuoteToken","preferredQuoteTokens","preferredFarm","getFarmFromTokenSymbol","tokenSymbol","farmsWithTokenSymbol","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceBusd","hasTokenPriceVsQuote","quoteTokenInBusd","getFarmQuoteTokenPrice","fetchFarmsPrices","log","farmsWithPrices","baseTokenPrice","quoteTokenPrice","fetchFarmUserAllowances","masterChefAddress","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","fetchFarmUserLastDeposit","rawUserInfos","parsedUserInfos","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","fetchFarmUserEarnings","rawEarnings","parsedEarnings","lastWithdraw","loadArchivedFarmsData","isArchivedPid","farmsWithPriceHelpers","priceHelperLpsConfig","farmsWithoutHelperLps","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","lastDeposit","farmAllowance","farmsSlice","setLoadArchivedFarmsData","liveFarmData","farmData","userDataEl","useDebounce","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","getTokenLogoURL","StyledLogo","uriLocations","HARMONY","height","FetchStatus","useGetBnbBalance","NOT_FETCHED","fetchStatus","setFetchStatus","setBalance","useLastUpdated","lastUpdated","setLastUpdated","walletBalance","SUCCESS","FAILED","fetchBalance","refresh","balanceState","setBalanceState","balanceOf","prev","isZero","hexNumberString","getItem","usePollBlockNumber","interval","setInterval","getBlockNumber","setBlock","clearInterval","useBlock","useInitialBlock","initialBlock","IPFS_GATEWAY","nftSources","PANCAKE","identifierKey","MIXIE","Nfts","description","lg","md","ipfs","identifier","variationId","video","webm","mp4","blur","EditingCurrency","CalculatorMode","Footer","Flex","BulletList","ul","textSubtle","RoiCalculatorFooter","isFarm","displayApr","linkLabel","linkHref","isExpanded","setIsExpanded","my","tooltipOffset","multiplierRef","multiplierTooltip","multiplierTooltipVisible","gridRowCount","apy","flexDirection","expanded","px","gridTemplateColumns","gridRowGap","gridTemplateRows","small","textAlign","compoundTimes","justifyContent","alignItems","mr","fontSize","display","mt","fee","href","compoundingIndexToFrequency","controls","compounding","activeCompoundingIndex","stakingDuration","mode","ROI_BASED_ON_PRINCIPAL","editingCurrency","USD","principalAsToken","principalAsUSD","roiUSD","roiTokens","roiPercentage","roiCalculatorReducer","toggledCompounding","PRINCIPAL_BASED_ON_ROI","currencyAfterChange","TOKEN","useRoiCalculatorReducer","useReducer","principalInUSDAsNumber","interestBreakdown","hasInterest","roiAsUSD","principalForExpectedRoi","principalUSD","principalToken","setPrincipalFromUSDValue","principalAsTokenBN","setPrincipalFromTokenValue","principalAsUsdBN","principalAsUsdString","setStakingDuration","stakingDurationIndex","toggleCompounding","toggleEditingCurrency","setCompoundingFrequency","setCalculatorMode","modeToSet","setTargetRoi","targetRoiAsTokens","MILLION","RoiCardWrapper","radii","RoiCardInner","gradients","bubblegum","RoiInputContainer","RoiDisplayContainer","RoiDollarAmount","Text","fadeOut","RoiCard","earningTokenSymbol","calculatorState","inputRef","focus","onEnterEditing","bold","textTransform","inputMode","pattern","scale","placeholder","onChange","event","currentTarget","variant","rotate","keyframes","ArrowContainer","primary","AnimatedArrow","setKey","prevKey","prevId","StyledModal","Modal","ScrollableContainer","mediaQueries","FullWidthButtonMenu","ButtonMenu","disabled","RoiCalculatorModal","onDismiss","onBack","stakingTokenSymbol","initialValue","balanceInputRef","assetSymbol","editingUnit","editingValue","conversionUnit","conversionValue","title","headerBackground","mb","asset","currencyValue","innerRef","switchEditingUnits","onFocus","lte","toLocaleUpperCase","activeIndex","onItemClick","flex","checked","activate","deactivate","toastError","connectorID","connector","connectorsByName","UnsupportedChainIdError","setupNetwork","window","removeItem","connectorLocalStorageKey","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","walletConnectProvider","message","walletconnect","close","ethereum","chainName","nativeCurrency","rpcUrls","nodes","blockExplorerUrls","registerToken","image","tokenAdded","uriToHttp","uri","substr","teamsList","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","fetchTeam","fetchTeams","getTeams","TICKET_LIMIT_PER_REQUEST","NUM_ROUNDS_TO_CHECK_FOR_REWARDS","Section","ConfirmedIcon","ConfirmationPendingContent","pendingText","spin","TransactionSubmittedContent","currencyToAdd","strokeWidth","external","isMetaMask","ml","ConfirmationModalContent","bottomContent","topContent","TransactionErrorContent","pt","TransactionConfirmationModal","customOnDismiss","attemptingTxn","content","handleDismiss","nameOrAddress","validated","reverseLookup","debouncedAddress","ensNodeArgument","namehash","registrarContract","resolverAddress","resolverAddressResult","resolverContract","changed","ENSName","useENSName","lookup","ensName","debouncedName","addr","useENSAddress","isTradeBetter","tradeA","tradeB","minimumDelta","tradeType","equalTo","useAllCommonPairs","bases","common","additionalA","additionalB","basePairs","otherBase","allPairCombinations","t0","t1","tokenA_","tokenB_","customBases","customBasesA","customBasesB","allPairs","curr","currencyAmountIn","currencyOut","allowedPairs","singleHopOnly","Trade","maxHops","maxNumResults","bestTradeSoFar","currentTrade","currencyIn","currencyAmountOut","useIsTransactionUnsupported","unsupportedTokens","tokenIn","tokenOut","useFetchProfile","hasProfile","gasMarginPer10000","rawGasEstimation","gasEstimation","callWithEstimateGas","stakeFarm","enterStaking","wait","deposit","unstakeFarm","leaveStaking","withdraw","harvestFarm","tokenUpgradeSwap","swapContract","getActivePools","eligiblePools","startBlockCalls","endBlockCalls","startBlocks","endBlocks","poolCheck","CoreTag","outline","startIcon","CommunityTag","DualTag","ManualPoolTag","CompoundingPoolTag","VoteNowTag","SoonTag","ClosedTag","rpcUrl","getNodeUrl","injected","InjectedConnector","supportedChainIds","rpc","bridge","qrcode","pollingInterval","bscConnector","BscConnector","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","Web3Provider","signMessage","BinanceChain","bnbSign","signature","wc","wcMessage","hexlify","toUtf8Bytes","signPersonalMessage","TransactionState","IconWrapper","failure","Transaction","CircleLoader","newTransactionsFirst","b","renderTransactions","TransactionsModal","sortedRecentTransactions","confirmed","clearAllTransactionsCallback","Transactions","useModal","onPresentTransactionsModal","AppHeaderContainer","AppHeader","subtitle","helper","backTo","noConfig","as","Link","show","GlobalSettings","BodyWrapper","AppBody","blockSlice","sample","parseENSAddress","ensAddress","ensPath","StyledSVG","svg","stroke","rest","viewBox","fill","xmlns","d","strokeLinecap","strokeLinejoin","tokenListValidator","Ajv","allErrors","compile","schema","getTokenList","resolveENSContentHash","parsedENS","contentHashUri","translatedUri","contenthashToUri","isLast","validationErrors","errors","dataPath","REGISTRAR_ABI","constant","outputs","payable","stateMutability","REGISTRAR_ADDRESS","RESOLVER_ABI","internalType","ensRegistrarContract","resolver","contenthash","useFetchListCallback","useWeb3Provider","ensResolver","sendDispatch","nanoid","ToastsProvider","toasts","setToasts","toast","prevToasts","kebabCase","currentToasts","prevToast","clear","remove","toastTypes","DANGER","toastInfo","INFO","toastSuccess","toastWarning","WARNING","ToastListener","onRemove","StyledInput","input","inputRegex","Input","React","nextUserInput","target","autoComplete","autoCorrect","minLength","maxLength","spellCheck","InputRow","selected","CurrencySelectButton","Button","attrs","LabelRow","InputPanel","hideInput","Container","shadows","inset","CurrencyInputPanel","onMax","showMaxButton","label","onCurrencySelect","disableCurrencySelect","hideBalance","otherCurrency","showCommonBases","selectedCurrencyBalance","translatedLabel","CurrencySearchModal","selectedCurrency","otherSelectedCurrency","onPresentCurrencyModal","cursor","className","val","searchingAddress","lowerSearchParts","matchesSearch","sParts","s_","sp","startsWith","endsWith","useSortedTokensByQuery","symbolMatch","exactMatches","symbolSubtrings","trim","campaigns","badge","campaignMap","campaign","defaultOptions","hydrate","identity","dehydrate","usePersistState","userOptions","localStorageKey","valueFromLS","setValue","Dots","span","textColor","users","useTotalSupply","totalSupply","serializedTokensMap","getTeamProfile","teamName","numberUsers","isJoinable","staticTeamInfo","staticTeam","merge","teamsById","numberTeams","nbTeams","teamData","onChainTeamData","mx","maxWidth","DEFAULT_META","StyledPage","PageMeta","pathname","cakePriceUsd","cakePriceUsdDisplay","pageMeta","getCustomMeta","pageTitle","join","property","Page","getIdentifierKeyFromAddress","nftSource","nftSourceEntry","getTokenUrl","tokenUri","getAddressByType","getTokenUriData","tokenURI","uriDataResponse","uriData","usePreviousValue","getImageUrlFromToken","TokenPairImage","primaryToken","secondaryToken","primarySrc","secondarySrc","TokenImage","src","BubbleWrapper","flexGrow","StyledNav","nav","Nav","location","xs","SubNav","setStateLastUpdated","previousLastUpdated","ifos","useTransactionDeadline","ttl","blockTimestamp","useCurrentBlockTimestamp","UTF_8_DECODER","TextDecoder","buff","hex","arr","Uint8Array","hexToUint8Array","codec","getCodec","rmPrefix","cid","CID","toB58String","multihash","decode","digest","transformUserData","transformPool","quoteTokenAddress","toLocaleLowerCase","RefreshContextProvider","setSlow","setFast","isBrowserTabActiveRef","onVisibilityChange","document","hidden","addEventListener","removeEventListener","useIsBrowserTabActive","DetailsFooter","invertedContrast","UnsupportedModal","UnsupportedCurrencyFooter","onPresentModal","BAD_SRCS","onError","ImportToken","handleCurrencySelect","setConfirmed","addToken","inactiveTokenList","gridGap","userSelect","maxAmountSpend","greaterThan","SlippageError","DeadlineError","SlippageTabs","slippageError","deadlineError","setUserslippageTolerance","setTtl","slippageInput","setSlippageInput","deadlineInput","setDeadlineInput","slippageInputIsValid","deadlineInputIsValid","RiskyLow","RiskyHigh","InvalidInput","parseCustomSlippage","valueAsIntFromRoundedFloat","parseCustomDeadline","valueAsInt","flexWrap","onBlur","e","isWarning","isSuccess","ExpertModal","setShowConfirmExpertModal","setRememberExpertModeAcknowledgement","toggleExpertMode","isRememberChecked","setIsRememberChecked","prompt","GasSettings","setGasPrice","SettingsModal","showConfirmExpertModal","rememberExpertModeAcknowledgement","setSingleHopOnly","pb","borderTop","TransactionSettings","onPresentSettingsModal","ens","resolvedContentHash","useENSContentHash","getAchievementTitle","getAchievementDescription","getClaimableIfoData","ifoCampaigns","ifosList","ifoItem","campaignId","claimStatusCalls","pointCenterIfoABI","claimStatuses","claimStatusArr","claimableIfoData","claimableIfoDataItem","campaignMeta","ifoCampaign","Latinise","latin_map","τ","Τ","latinise","ZERO","useMintState","ConfirmAddModalBottom","price","parsedAmounts","poolTokenPercentage","onAdd","CURRENCY_B","PoolPriceBar","assetA","assetB","AddLiquidity","currencyIdA","currencyIdB","history","oneCurrencyIsWETH","dependentField","pairState","equal","independentAmount","dependentAmount","wrappedIndependentAmount","dependentCurrency","dependentTokenAmount","priceOf","quote","currencyAAmount","currencyBAmount","Price","wrappedCurrencyA","liquidityMinted","tokenAmountA","tokenAmountB","getLiquidityMinted","useDerivedMintInfo","onFieldAInput","onFieldBInput","useMintActionHandlers","isValid","setAttemptingTxn","txHash","setTxHash","formattedAmounts","maxAmounts","accumulator","atMaxAmounts","approvalA","approveACallback","approvalB","approveBCallback","router","parsedAmountA","parsedAmountB","amountsMin","tokenBIsETH","estimate","addLiquidityETH","args","toHexString","addLiquidity","estimatedGasLimit","err","modalHeader","modalBottom","amountA","symbolA","amountB","symbolB","handleCurrencyASelect","currencyA_","newCurrencyIdA","handleCurrencyBSelect","currencyB_","newCurrencyIdB","handleDismissConfirmation","addIsUnsupported","onPresentAddLiquidityModal","App","toExact","minWidth","marginTop","showUnwrapped","BLOCK_PADDING","INITIAL","isHistoryPaneOpen","isChartPaneOpen","isFetchingHistory","historyFilter","ALL","currentRoundStartBlockNumber","lastOraclePrice","claimableStatuses","initializePredictions","marketData","range","roundsResponse","initialRoundData","reduxNodeRound","initializedData","fetchRound","predictionContract","fetchRounds","fetchMarketData","fetchLedgerData","fetchClaimableStatuses","fetchHistory","predictionsSlice","setPredictionStatus","setHistoryPaneState","setChartPaneState","setHistoryFilter","setCurrentEpoch","setLastOraclePrice","markBetHistoryAsCollected","betId","betIndex","newestRound","maxBy","futureRound","futureRounds","applyNodeDataToLotteriesGraphResponse","nodeData","graphResponse","nodeRound","ticketPrice","totalTickets","totalUsers","winningTickets","graphRound","getGraphLotteries","lotteries","getLotteriesData","idsForNodesCall","mergedData","applyNodeDataToUserGraphResponse","userNodeData","userGraphData","lotteryNodeData","ticketDataForRound","roundTickets","getGraphLotteryUser","blankUser","totalCake","userRes","getUserLotteryData","idsForTicketsNodeCall","fetchUserTicketsForMultipleRounds","roundDataAndUserTickets","userRoundsNodeData","idsForLotteriesNodeCall","lotteriesNodeData","mergedRoundData","graphResponseWithNodeRounds","isTransitioning","currentRound","lotteriesData","userLotteryData","fetchCurrentLottery","lotteryInfo","fetchCurrentLotteryId","currentIdAndMaxBuy","fetchUserTicketsAndLotteries","userLotteriesRes","userParticipationInCurrentRound","userLotteries","fetchPublicLotteries","fetchUserLotteries","setLotteryIsTransitioning","LotterySlice","setLotteryPublicData","PageLoader","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","abs","timeLeft","years","months","hours","minutes","floor","fetchWalletNfts","nftSourcePromises","nftSourceType","addressObj","getTokenIdAndData","tokenOfOwnerByIndex","tokenIdBn","walletNft","balanceOfResponse","nftDataFetchPromises","nftData","nftSourceData","flat","collectiblesSlice","association","FixedHeightRow","MinimalPositionCard","showMore","setShowMore","userPoolBalance","totalPoolTokens","greaterThanOrEqual","getLiquidityValue","token0Deposited","token1Deposited","role","FullPositionCard","getProposals","ACTIVE","proposals","getProposal","proposal","getVotes","votes","getVoteVerificationStatuses","votesToVerify","vote","voter","verificationHash","metadata","total","votingPower","headers","body","statusText","getAllVotes","proposalId","votesPerChunk","resolve","reject","fetchVoteChunk","newSkip","voteChunk","proposalLoadingStatus","voteLoadingStatus","fetchProposals","fetchProposal","fetchVotes","verifyVotes","snapshot","proposalVotes","votingSlice","_inValid","IDLE","processRawTicketsResponse","ticketsResponse","ticketIds","ticketNumbers","ticketStatuses","ticketId","viewUserInfoForLotteryId","perRequestLimit","fetchUserTicketsForOneRound","numReturned","ticketData","idsToCheck","ticketsForMultipleRounds","ticketsForRound","createBrowserHistory","getUserPointIncreaseEvents","getAchievements","pointIncreaseEvents","userPoint","achievementSlice","addAchievement","addAchievements","setAchievements","clearAchievements","fetchAchievements","rewardTokenPrice","totalRewardPricePerYear","totalStakingTokenInPool","isFinite","getFarmApr","poolLiquidityUsd","farmAddress","cakeRewardsApr","cakeRewardsAprAsNumber","lpRewardsApr","lpAprs","FlexLayout","DropDownHeader","inputSecondary","DropDownListContainer","zIndices","DropDownContainer","isOpen","css","boxShadow","DropDownList","ListItem","li","Select","containerRef","dropdownRef","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","containerSize","setContainerSize","toggling","stopPropagation","offsetWidth","offsetHeight","handleClickOutside","option","selectedIndex","Loading","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","BaseWrapper","disable","CommonBases","onSelect","TokenSection","dim","CheckIcon","CheckmarkCircleIcon","NameOverflow","ImportRow","showImportView","setImportToken","isAdded","opacity","currencyKey","StyledBalanceText","FixedContentRow","MenuItem","CurrencyRow","isSelected","otherSelected","selectedTokenList","isOnSelectedList","customAdded","ellipsis","justifySelf","CurrencyList","fixedListRef","showETH","breakIndex","itemData","formatted","Currency","showImport","itemKey","itemCount","itemSize","useTokenComparator","comparator","balanceA","balanceB","balanceComp","getTokenComparator","swapSound","Audio","CurrencySearch","CurrencyModalView","fixedList","setSearchQuery","debouncedQuery","invertSearchOrder","searchToken","searchTokenIsAdded","tokenComparator","filteredTokens","sortedTokens","filteredSortedTokens","play","handleInput","checksummedInput","scrollTo","handleEnter","filteredInactiveTokens","onKeyDown","RowWrapper","active","tertiary","listUrlRowHTMLId","ListRow","listsByUrl","handleAcceptListUpdate","handleRemoveList","confirm","handleEnableList","handleDisableList","major","minor","patch","ListContainer","ManageLists","setModalView","setImportList","setListUrl","listUrlInput","setListUrlInput","activeCopy","setActiveCopy","fetchList","validUrl","sortedLists","u1","u2","l1","l2","tempList","setTempList","addError","setAddError","fetchTempList","isImported","handleImport","importList","textOverflow","overflow","paddingTop","marginLeft","ManageTokens","removeToken","handleRemoveAll","isAddressValid","importToken","StyledButtonMenu","Manage","showLists","setShowLists","TextDot","ImportList","listURL","onImport","adding","handleAddList","StyledModalContainer","ModalContainer","StyledModalBody","ModalBody","modalView","prevView","usePrevious","manage","DatePicker","inputProps","customInput","portalId","dateFormat","StyledDatePickerPortal","card","primaryBright","secondary","DatePickerPortal","TimePicker","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","Outer","Inner","PageHeader","InputWrapper","SearchInput","onChangeCallback","toggled","setToggled","searchText","setSearchText","debouncedOnChange","debounce","VISIBILITY_STATE_SUPPORTED","isWindowVisible","visibilityState","useIsWindowVisible","focused","setFocused","listener","Updater","windowVisible","blockNumberCallback","on","removeListener","debouncedState","callback","leading","savedCallback","tick","useInterval","PATCH","MINOR","MAJOR","waitRandom","min","ms","random","CancelledError","RetryableError","chunk","minBlockNumber","obj","resultsBlockNumber","debouncedListeners","cancellations","listeningKeys","allListeners","keyListeners","previousMin","activeListeningKeys","unserializedOutdatedCallKeys","minDataBlockNumber","outdatedListeningKeys","serializedOutdatedCallKeys","outdatedCallKeys","chunkedCalls","items","maxChunkSize","numChunks","ceil","chunkSize","ix","chunkArray","fn","rejectCancelled","n","minWait","maxWait","completed","promise","cancel","retry","fetchChunk","fetchBlockNumber","firstCallKeyIndex","lastCallKeyIndex","lastBlockNumber","blocksSinceCheck","minutesPending","shouldCheck","getTransactionReceipt","blockHash","transactionHash","transactionIndex","_binanceChainListener","defineProperty","bsc","useEagerConnect","connectorId","isConnectorBinanceChain","isBinanceChainDefined","Reflect","GlobalStyle","createGlobalStyle","BUSD_MAINNET","WalletView","useCakeBusdPrice","currentChaindId","wrapped","tokenPairs","ethPairState","ethPair","busdPairState","busdPair","busdEthPairState","busdEthPair","ethPairETHAmount","reserveOf","ethPairETHBUSDValue","ethBusdPrice","currencyEthPrice","useBUSDPrice","icon","Address","Tooltip","isTooltipDisplayed","contrast","CopyAddress","setIsTooltipDisplayed","displayTooltip","readOnly","navigator","clipboard","permissions","writeText","queryCommandSupported","ele","createElement","appendChild","select","execCommand","removeChild","WalletInfo","hasLowBnbBalance","cakeBalance","fontWeight","TxnIcon","Summary","TxnLink","renderIcon","txn","TransactionRow","WalletTransactions","sortedTransactions","orderBy","minHeight","ViewMode","LOW_BNB_BALANCE","ModalHeader","UIKitModalHeader","Tabs","WalletModal","initialView","WALLET_INFO","view","setView","newIndex","fullWidth","TRANSACTIONS","WalletUserMenuItem","onPresentWalletModal","UserMenu","onPresentTransactionModal","avatarSrc","Menu","userMenu","globalMenu","currentLang","langs","setLang","links","profileLink","noProfileLink","showPip","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","nextState","replaceState","reload","fallback","Component","useCakeVault","totalSharesAsString","pricePerFullShareAsString","totalCakeInVaultAsString","estimatedCakeBountyRewardAsString","totalPendingCakeHarvestAsString","userSharesAsString","cakeAtLastUserActionAsString","ApyLabelContainer","AprRow","tooltipContent","earningsPercentageToDisplay","apyModalLink","plus","onPresentApyModal","StyledCard","ExpandedWrapper","ExpandedFooter","poolContractAddress","cakeVaultContractAddress","isMetaMaskInScope","isManualCakePool","totalStakedTargetRef","totalStakedTooltip","totalStakedTooltipVisible","manualCakeTotalMinusAutoVault","getTotalStakedBalance","ExpandableButtonWrapper","manualTooltipText","autoTooltipText","CakeVaultTokenPairImage","primaryTokenSrc","CardHeader","backgroundDisabled","StyledCardHeader","isStaking","isCakePool","useApprovePool","lpContract","requestedApproval","setRequestedApproval","sousChefContract","handleApprove","constants","useVaultApprove","cakeContract","useCheckVaultApprovalStatus","isVaultApproved","setIsVaultApproved","checkApprovalStatus","ApprovalAction","stakingTokenContract","endIcon","NotEnoughTokensModal","cardHeader","StyledButton","PercentageButton","sousStake","sousStakeBnb","useStakePool","isUsingBnb","handleStake","onStake","sousUnstake","sousEmergencyUnstake","emergencyWithdraw","useUnstakePool","enableEmergencyWithdraw","handleUnstake","onUnstake","StyledLink","AnnualRoiContainer","AnnualRoiDisplay","StakeModal","isBnbPool","isRemovingStake","pendingTx","setPendingTx","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","percent","setPercent","showRoiCalculator","setShowRoiCalculator","getCalculatedStakingLimit","usdValueStaked","formattedUsdValueStaked","annualRoi","formattedAnnualRoi","getTokenLink","fullDecimalStakeAmount","handleChangePercent","sliderPercent","percentageOfStakingMax","amountToStake","handleConfirmClick","convertedInput","percentage","onValueChanged","valueLabel","step","StakeAction","isStaked","stakedTokenBalance","stakedTokenDollarBalance","onPresentTokenRequired","onPresentStake","onPresentUnstake","reachStakingLimit","harvestPool","harvestPoolBnb","useHarvestPool","handleHarvest","onReward","CollectModal","formattedBalance","fullBalance","earningsDollarValue","isCompoundPool","shouldCompound","setShouldCompound","handleHarvestConfirm","HarvestActions","earningTokenBalance","earningTokenDollarBalance","hasEarnings","onPresentCollect","InlineText","CardActions","needsApproval","StakeActions","PoolCard","accountHasStakedBalance","ribbon","variantColor","CardFooter","VaultApprovalAction","useWithdrawalFeeTimer","secondsRemaining","setSecondsRemaining","hasUnstakingFee","setHasUnstakingFee","currentSeconds","setCurrentSeconds","secondsRemainingCalc","doesUnstakingFeeApply","timerInterval","prevSeconds","WithdrawalFeeTimer","day","hour","minute","UnstakingFeeCountdownRow","isTableVariant","feeAsDecimal","noFeeToPay","shouldShowTimer","FeeSummary","feeInCake","callOptions","VaultStakeModal","stakingMax","cakePriceBusd","handleWithdrawal","convertedStakeAmount","shareStakeToWithdraw","triggerWithdrawAllThreshold","sharesRemaining","handleDeposit","HasSharesActions","stakedDollarValue","VaultStakeActions","accountHasSharesStaked","CakeVaultCardActions","RecentCakeProfitBalance","cakeToDisplay","dollarValueToDisplay","dateStringToDisplay","RecentCakeProfitCountdownRow","lastActionInMs","StyledCardBody","CardBody","CakeVaultCard","showStakedOnly","isVaultUserDataLoading","RecentCakeProfitRow","VaultCardActions","ToggleView","viewMode","onToggle","handleToggle","CARD","TABLE","ToggleWrapper","ViewControls","PoolTabButtons","setStakedOnly","hasStakeInFinishedPools","setViewMode","useRouteMatch","isExact","viewModeToggle","liveOrFinishedSwitch","stakedOnlySwitch","Divider","BountyModal","TooltipComponent","callFeeAsDecimal","totalYieldToDisplay","estimatedDollarBountyReward","hasFetchedDollarBounty","hasFetchedCakeBounty","dollarBountyToDisplay","cakeBountyToDisplay","tooltipPadding","right","BountyCard","onPresentBountyModal","ButtonText","HelpButton","BaseCell","CellContent","StyledCell","NameCell","useMatchBreakpoints","isXs","isSm","hasVaultShares","showStakedTag","showSubtitle","HelpIconWrapper","EarningsCell","labelText","AprLabelContainer","Apr","showIcon","openRoiModal","AprCell","TotalStakedCell","totalStakedBalance","EndsInCell","renderBlocks","showLoading","ArrowIcon","ChevronDownIcon","isFullLayout","ActionContainer","xl","ActionTitles","ActionContent","HarvestAction","actionTitle","alignSelf","lineHeight","IconButtonWrapper","Staked","handlePoolApprove","requestedPoolApproval","handleVaultApprove","requestedVaultApproval","isNotVaultAndHasStake","hasSharesStaked","isVaultWithShares","stakedAutoDollarValue","onPresentVaultStake","onPresentVaultUnstake","expandAnimation","collapseAnimation","StyledActionPanel","InfoSection","ActionPanel","breakpoints","isMd","poolStakingTokenBalance","tagTargetRef","tagTooltip","tagTooltipVisible","maxStakeRow","blocksRow","aprRow","totalStakedRow","Harvest","Stake","StyledRow","PoolRow","isLg","isXl","setExpanded","shouldRenderActionPanel","ExpandActionCell","StyledTable","StyledTableBorder","ScrollButtonContainer","PoolsTable","tableWrapperEl","scrollIntoView","behavior","CardLayout","StyledHeading","Heading","PoolControls","FilterContainer","LabelWrapper","ControlStretch","Pools","usePools","poolsWithoutAutoVault","numberOfPoolsVisible","setNumberOfPoolsVisible","observerIsSet","setObserverIsSet","loadMoreRef","sortOption","setSortOption","chosenPoolsLength","accountHasVaultShares","cakePool","partition","finishedPools","openPools","stakedOnlyFinishedPools","isGreaterThan","stakedOnlyOpenPools","useFetchCakeVault","fetchPoolsPublicData","useFetchPublicPoolsData","IntersectionObserver","entries","isIntersecting","poolsCurrentlyVisible","rootMargin","threshold","observe","chosenPools","showFinishedPools","lowercaseQuery","poolsToSort","sortPools","cardLayout","tableLayout","SwapWarningTokens","ContainerRow","InputContainer","textDisabled","AddressInputPanel","withoutSpaces","autoCapitalize","ArrowWrapper","clickable","ErrorText","severity","warning","StyledBalanceMaxMini","button","TruncatedText","SwapCallbackErrorInner","SwapCallbackErrorInnerAlertTriangle","SwapCallbackError","SwapShowAcceptChanges","FormattedPriceImpact","SwapModalFooterContainer","SwapModalFooter","onConfirm","swapErrorMessage","disabledConfirm","showInverted","setShowInverted","paddingLeft","TradeType","EXACT_INPUT","SwapModalHeader","showAcceptChanges","onAcceptChanges","priceImpactSeverity","EXACT_OUTPUT","ConfirmSwapModal","originalTrade","confirmationContent","isDefined","useLastTruthy","filterFn","last","setLast","useLast","isLastItem","TradeSummary","AdvancedSwapDetails","showRoute","AdvancedDetailsFooter","AdvancedSwapDetailsDropdown","lastTrade","TradePrice","formattedPrice","baseCurrency","quoteCurrency","ImportTokenWarningModal","onCancel","Grouping","Circle","CircleRow","Connector","prevConfirmed","ProgressCircles","steps","SwapCallbackState","useSwapCallArguments","recipientAddressOrName","recipientAddress","swapMethods","Router","swapCallParameters","feeOnTransfer","parameters","WrapType","NOT_APPLICABLE","wrapType","SafemoonWarning","BondlyWarning","Acknowledgement","handleContinueClick","isConfirmed","setIsConfirmed","MessageContainer","Message","SwapWarningModal","swapCurrency","preventClickHandler","preventDefault","querySelectorAll","el","SWAP_WARNING","SwapWarningTokensConfig","component","bondly","Label","Swap","loadedUrlParams","loadedInputCurrency","loadedOutputCurrency","urlLoadedTokens","importTokensNotInDefault","isExpertMode","swapInputError","wethContract","sufficientBalance","WRAP","execute","txReceipt","UNWRAP","useWrapCallback","onWrap","wrapInputError","showWrap","handleTypeInput","handleTypeOutput","tradeToConfirm","setSwapState","userHasSpecifiedInputOutput","noRoute","approveCallback","approvalSubmitted","setApprovalSubmitted","maxAmountInput","atMaxAmountInput","swapCalls","VALID","gasEstimate","gasError","callStatic","callError","reason","estimatedCalls","successfulEstimation","errorCalls","inputSymbol","outputSymbol","withRecipient","useSwapCallback","swapCallback","swapCallbackError","handleSwap","confirmPriceImpactWithoutFee","showApproveFlow","handleConfirmDismiss","handleAcceptChanges","swapWarningCurrency","setSwapWarningCurrency","onPresentSwapWarningModal","shouldShowSwapWarning","isWarningToken","warningTokenConfig","warningTokenData","warningTokenAddress","handleInputSelect","showSwapWarning","handleMaxInput","handleOutputSelect","swapIsUnsupported","onPresentImportTokenWarningModal","onPresentConfirmModal","rnd","RedirectToAddLiquidity","OLD_PATH_STRUCTURE","RedirectOldAddLiquidityPathStructure","RedirectDuplicateTokenIds","RedirectOldRemoveLiquidityPathStructure","RedirectPathToSwapOnly","RedirectToSwap","Home","lazy","Farms","Ifos","NotFound","Liquidity","PoolFinder","RemoveLiquidity","TokenMigration","Global","exact","strict","ThemeProviderWrapper","dark","light","Providers","Updaters","Blocklist","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.75ff5523.chunk.js","sourcesContent":["import React, { createContext, useCallback, useEffect, useState } from 'react'\nimport { Language } from '@pancakeswap/uikit'\nimport { EN, languages } from 'config/localization/languages'\nimport translations from 'config/localization/translations.json'\nimport { ContextApi, ContextData, ProviderState } from './types'\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\n\nconst initialState: ProviderState = {\n  isFetching: true,\n  currentLanguage: EN,\n}\n\n// Export the translations directly\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\nlanguageMap.set(EN.locale, translations)\n\nexport const LanguageContext = createContext<ContextApi>(undefined)\n\nexport const LanguageProvider: React.FC = ({ children }) => {\n  const [state, setState] = useState<ProviderState>(() => {\n    const codeFromStorage = getLanguageCodeFromLS()\n\n    return {\n      ...initialState,\n      currentLanguage: languages[codeFromStorage],\n    }\n  })\n  const { currentLanguage } = state\n\n  useEffect(() => {\n    const fetchInitialLocales = async () => {\n      const codeFromStorage = getLanguageCodeFromLS()\n\n      if (codeFromStorage !== EN.locale) {\n        const enLocale = languageMap.get(EN.locale)\n        const currentLocale = await fetchLocale(codeFromStorage)\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n      }))\n    }\n\n    fetchInitialLocales()\n  }, [setState])\n\n  const setLanguage = async (language: Language) => {\n    if (!languageMap.has(language.locale)) {\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: true,\n      }))\n\n      const locale = await fetchLocale(language.locale)\n      const enLocale = languageMap.get(EN.locale)\n\n      // Merge the EN locale to ensure that any locale fetched has all the keys\n      languageMap.set(language.locale, { ...enLocale, ...locale })\n      localStorage.setItem(LS_KEY, language.locale)\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    } else {\n      localStorage.setItem(LS_KEY, language.locale)\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    }\n  }\n\n  const translate = useCallback(\n    (key: string, data?: ContextData) => {\n      const translationSet = languageMap.has(currentLanguage.locale)\n        ? languageMap.get(currentLanguage.locale)\n        : languageMap.get(EN.locale)\n      const translatedText = translationSet[key] || key\n\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\n\n      if (includesVariable && data) {\n        let interpolatedText = translatedText\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\n        })\n\n        return interpolatedText\n      }\n\n      return translatedText\n    },\n    [currentLanguage],\n  )\n\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\n}\n","import { useContext } from 'react'\nimport { LanguageContext } from './Provider'\n\nconst useTranslation = () => {\n  const languageContext = useContext(LanguageContext)\n\n  if (languageContext === undefined) {\n    throw new Error('Language context is undefined')\n  }\n\n  return languageContext\n}\n\nexport default useTranslation\n","export default {\n  masterChef: {\n    1666600000: '0xD0Cb3E55449646c9735D53E83EEA5Eb7e97A52Dc',\n  },\n  sousChef: {\n    1666600000: '0x79f73e0F9D31EA1490fd90632F65638a048a2A5F',\n  },\n  upgradeSwap: {\n    1666600000: '0x50340f0D03f8c1Ff5DD1A7c9DB1e0c2684930ED1',\n  },\n  oldMochi: {\n    1666600000: '0x0dD740Db89B9fDA3Baadf7396DdAD702b6E8D6f5',\n  },\n  lotteryV2: {\n    1666600000: '0xAB466B0656725bE5B0fD950668884E6A893bd859',\n  },\n  multiCall: {\n    1666600000: '0x627194b25Ba7b779488e9861ea17896262364438',\n  },\n  pancakeProfile: {\n    1666600000: '0xAB466B0656725bE5B0fD950668884E6A893bd859',\n  },\n  pancakeRabbits: {\n    1666600000: '0xAB466B0656725bE5B0fD950668884E6A893bd859',\n  },\n  bunnyFactory: {\n    1666600000: '0xAB466B0656725bE5B0fD950668884E6A893bd859',\n  },\n  claimRefund: {\n    1666600000: '0xAB466B0656725bE5B0fD950668884E6A893bd859',\n  },\n  pointCenterIfo: {\n    1666600000: '0xAB466B0656725bE5B0fD950668884E6A893bd859',\n  },\n  bunnySpecial: {\n    1666600000: '0xAB466B0656725bE5B0fD950668884E6A893bd859',\n  },\n  tradingCompetition: {\n    1666600000: '0xAB466B0656725bE5B0fD950668884E6A893bd859',\n  },\n  easterNft: {\n    1666600000: '0xAB466B0656725bE5B0fD950668884E6A893bd859',\n  },\n  cakeVault: {\n    1666600000: '0x2A9BB5aCF08807B58936c83413d052F66aC31739',\n  },\n  predictions: {\n    1666600000: '0xAB466B0656725bE5B0fD950668884E6A893bd859',\n  },\n  chainlinkOracle: {\n    1666600000: '0xAB466B0656725bE5B0fD950668884E6A893bd859',\n  },\n  bunnySpecialCakeVault: {\n    1666600000: '0xAB466B0656725bE5B0fD950668884E6A893bd859',\n  },\n  bunnySpecialPrediction: {\n    1666600000: '0xAB466B0656725bE5B0fD950668884E6A893bd859',\n  },\n  farmAuction: {\n    1666600000: '0xAB466B0656725bE5B0fD950668884E6A893bd859',\n  },\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\n}\n// This is only for pools stuff so...\nexport const getCakeAddress = () => {\n  return getAddress(tokens.hmochi.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getUpgradeSwapAddress = () => {\n  return getAddress(addresses.upgradeSwap)\n}\nexport const getOldMochiAddress = () => {\n  return getAddress(addresses.oldMochi)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wone.address)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\nexport const getBunnySpecialCakeVaultAddress = () => {\n  return getAddress(addresses.bunnySpecialCakeVault)\n}\nexport const getBunnySpecialPredictionAddress = () => {\n  return getAddress(addresses.bunnySpecialPrediction)\n}\nexport const getFarmAuctionAddress = () => {\n  return getAddress(addresses.farmAuction)\n}\n","import { useEffect, useState, useRef } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { simpleRpcProvider } from 'utils/providers'\n// eslint-disable-next-line import/no-unresolved\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\n\n/**\n * Provides a web3 provider with or without user's signer\n * Recreate web3 instance only if the provider change\n */\nconst useActiveWeb3React = (): Web3ReactContextInterface<Web3Provider> => {\n  const { library, chainId, ...web3React } = useWeb3React()\n  const refEth = useRef(library)\n  const [provider, setprovider] = useState(library || simpleRpcProvider)\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setprovider(library || simpleRpcProvider)\n      refEth.current = library\n    }\n  }, [library])\n\n  return { library: provider, chainId: chainId ?? parseInt(process.env.REACT_APP_CHAIN_ID, 10), ...web3React }\n}\n\nexport default useActiveWeb3React\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst Row = styled(Box)<{\n  width?: string\n  align?: string\n  justify?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  display: flex;\n  padding: 0;\n  align-items: ${({ align }) => align ?? 'center'};\n  justify-content: ${({ justify }) => justify ?? 'flex-start'};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport default Row\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string; noLiquidity: boolean }>('mint/typeInputMint')\nexport const resetMintState = createAction<void>('mint/resetMintState')\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('swap/selectCurrency')\nexport const switchCurrencies = createAction<void>('swap/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('swap/typeInput')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n}>('swap/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('swap/setRecipient')\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { SerializedBigNumber } from 'state/types'\n\nexport const BIG_ZERO = new BigNumber(0)\nexport const BIG_ONE = new BigNumber(1)\nexport const BIG_NINE = new BigNumber(9)\nexport const BIG_TEN = new BigNumber(10)\n\nexport const ethersToSerializedBigNumber = (ethersBn: ethers.BigNumber): SerializedBigNumber =>\n  ethersToBigNumber(ethersBn).toJSON()\n\nexport const ethersToBigNumber = (ethersBn: ethers.BigNumber): BigNumber => new BigNumber(ethersBn.toString())\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport { getLanguageCodeFromLS } from 'contexts/Localization/helpers'\nimport { BIG_TEN } from './bigNumber'\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\n}\n\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\n}\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  return getBalanceAmount(balance, decimals).toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, displayDecimals?: number) => {\n  return getBalanceAmount(balance, decimals).toFixed(displayDecimals)\n}\n\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  }\n  return number.toLocaleString(undefined, options)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object\n * Note: does NOT round\n */\nexport const formatBigNumber = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const remainder = number.mod(ethers.BigNumber.from(10).pow(decimals - displayDecimals))\n  return formatUnits(number.sub(remainder), decimals)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object with toFixed\n * Note: rounds\n */\nexport const formatBigNumberToFixed = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const formattedString = formatUnits(number, decimals)\n  return (+formattedString).toFixed(displayDecimals)\n}\n\n/**\n * Formats a FixedNumber like BigNumber\n * i.e. Formats 9763410526137450427.1196 into 9.763 (3 display decimals)\n */\nexport const formatFixedNumber = (number: ethers.FixedNumber, displayDecimals = 18, decimals = 18) => {\n  // Remove decimal\n  const [leftSide] = number.toString().split('.')\n  return formatBigNumber(ethers.BigNumber.from(leftSide), displayDecimals, decimals)\n}\n\nexport const formatLocalisedCompactNumber = (number: number): string => {\n  const codeFromStorage = getLanguageCodeFromLS()\n  return new Intl.NumberFormat(codeFromStorage, {\n    notation: 'compact',\n    compactDisplay: 'long',\n    maximumSignificantDigits: 2,\n  }).format(number)\n}\n\nexport default formatLocalisedCompactNumber\n","import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div<{\n  gap?: 'sm' | 'md' | 'lg' | string\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\n}>`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@pancakeswap/sdk'\nimport { ROUTER_ADDRESS } from '../config/constants'\nimport { BASE_BSC_SCAN_URLS } from '../config'\nimport { TokenAddressMap } from '../state/lists/hooks'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function getBscScanLink(\n  data: string | number,\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  switch (type) {\n    case 'transaction': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\n    }\n    case 'token': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\n    }\n    case 'block': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\n    }\n    case 'countdown': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\n    }\n    default: {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\n    }\n  }\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n","import { ChainId, Token } from '@pancakeswap/sdk'\n\nexport const CAKE: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0x691f37653f2fBed9063fEBB1A7f54BC5C40bEd8C',\n    18,\n    'hMOCHI',\n    'MochiSwap Token',\n  )\n}\n\n// export const HMOCHI: { [chainId: number]: Token } = {\n//   [ChainId.MAINNET]: new Token(\n//     ChainId.MAINNET,\n//     '0x691f37653f2fBed9063fEBB1A7f54BC5C40bEd8C',\n//     18,\n//     'hMOCHI',\n//     'MochiSwap Token',\n//   )\n// }\n\nexport const BUSD: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xE176EBE47d621b984a73036B9DA5d834411ef734',\n    18,\n    'BUSD',\n    'Binance USD',\n  )\n}\n\nexport const USDT = new Token(ChainId.MAINNET, '0x3C2B8Be99c50593081EAA2A724F0B8285F5aba8f', 18, 'USDT', 'Tether USD')\n// export const BTCB = new Token(ChainId.MAINNET, '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c', 18, 'BTCB', 'Binance BTC')\n\n// export const UST = new Token(\n//   ChainId.MAINNET,\n//   '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\n//   18,\n//   'UST',\n//   'Wrapped UST Token',\n// )\n\n// export const ETH = new Token(\n//   ChainId.MAINNET,\n//   '0x6983D1E6DEf3690C4d616b13597A09e6193EA013',\n//   18,\n//   '1ETH',\n//   'Ethereum Token bridged from Ethereum',\n// )\n\nexport const WONE = new Token(\n  ChainId.MAINNET,\n  '0xcF664087a5bB0237a0BAd6742852ec6c8d69A27a',\n  18,\n  'WONE',\n  'Wrapped ONE',\n)\n\nexport const HMOCHI = new Token(\n  ChainId.MAINNET,\n  '0x691f37653f2fBed9063fEBB1A7f54BC5C40bEd8C',\n  18,\n  'hMOCHI',\n  'MochiSwap Token',\n)\n\nexport const DAI = new Token(\n  ChainId.MAINNET, \n  '0xEf977d2f931C1978Db5F6747666fa1eACB0d0339', \n  18, \n  'DAI', \n  'Dai Stablecoin'\n)\n\nexport const USDC = new Token(\n  ChainId.MAINNET,\n  '0x985458e523db3d53125813ed68c274899e9dfab4',\n  6,\n  'USDC',\n  'USDC Coin',\n)\n\nconst tokens = {\n  hmochi: {\n    symbol: 'hMOCHI',\n    address: {\n      1666600000: '0x691f37653f2fBed9063fEBB1A7f54BC5C40bEd8C',\n    },\n    decimals: 18,\n    projectLink: 'https://mochiswap.io/',\n  },\n  oldhmochi: {\n    symbol: 'hMOCHI',\n    address: {\n      1666600000: '0x0dD740Db89B9fDA3Baadf7396DdAD702b6E8D6f5',\n    },\n    decimals: 18,\n    projectLink: 'https://mochiswap.io/',\n  },\n  xmochi: {\n    symbol: 'XMOCHI',\n    address: {\n      1666600000: '0x0dD740Db89B9fDA3Baadf7396DdAD702b6E8D6f5',\n    },\n    decimals: 18,\n    projectLink: 'https://mochiswap.io/',\n  },\n  jewel: {\n    symbol: 'JEWEL',\n    address: {\n      1666600000: '0x72cb10c6bfa5624dd07ef608027e366bd690048f',\n    },\n    decimals: 18,\n    projectLink: 'https://defikingdoms.com/',\n  },\n  smug: {\n    symbol: 'SMUG',\n    address: {\n      1666600000: '0x44afdbe2cb42cc18759159f7e383afb0ca8e57ad',\n    },\n    decimals: 9,\n    projectLink: 'https://smugdoge.com/',\n  },\n  bnb: {\n    symbol: 'bscBNB',\n    address: {\n      1666600000: '0xb1f6E61E1e113625593a22fa6aa94F8052bc39E0',\n    },\n    decimals: 18,\n    projectLink: 'https://mochiswap.io/',\n  },\n  bscbnb: {\n    symbol: 'bscBNB',\n    address: {\n      1666600000: '0xb1f6E61E1e113625593a22fa6aa94F8052bc39E0',\n    },\n    decimals: 18,\n    projectLink: 'https://mochiswap.io/',\n  },\n  kiba: {\n    symbol: 'KIBA',\n    address: {\n      1666600000: '0x60b4568120471bbff3dec520ba6609def89001c3',\n    },\n    decimals: 9,\n    projectLink: 'https://mochiswap.io/',\n  },\n  sushi: {\n    symbol: 'SUSHI',\n    address: {\n      1666600000: '0xBEC775Cb42AbFa4288dE81F387a9b1A3c4Bc552A',\n    },\n    decimals: 18,\n    projectLink: 'https://mochiswap.io/',\n  },\n  wone: {\n    symbol: 'WONE',\n    address: {\n      1666600000: '0xcF664087a5bB0237a0BAd6742852ec6c8d69A27a',\n    },\n    decimals: 18,\n    projectLink: 'https://mochiswap.io/',\n  },\n  one: {\n    symbol: 'ONE',\n    address: {\n      1666600000: '0xcF664087a5bB0237a0BAd6742852ec6c8d69A27a',\n    },\n    decimals: 18,\n    projectLink: 'https://mochiswap.io/',\n  },\n  busd: {\n    symbol: 'BUSD',\n    address: {\n      1666600000: '0xE176EBE47d621b984a73036B9DA5d834411ef734',\n    },\n    decimals: 18,\n    projectLink: 'https://mochiswap.io/',\n  },\n  bmochi: {\n    symbol: 'bMOCHI',\n    address: {\n      1666600000: '0x865b568f24f0a17dba3e358b24b0c35659b1f25a',\n    },\n    decimals: 18,\n    projectLink: 'https://mochiswap.io/',\n  },\n  apesox: {\n    symbol: 'APESOX',\n    address: {\n      1666600000: '0x53051d5545745F600232a885a65479cA832198fb',\n    },\n    decimals: 18,\n    projectLink: 'https://mochiswap.io/',\n  },\n  eth: {\n    symbol: 'ETH',\n    address: {\n      1666600000: '0x6983D1E6DEf3690C4d616b13597A09e6193EA013',\n    },\n    decimals: 18,\n    projectLink: 'https://mochiswap.io/',\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      1666600000: '0x3C2B8Be99c50593081EAA2A724F0B8285F5aba8f',\n    },\n    decimals: 18,\n    projectLink: 'https://mochiswap.io/',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      1666600000: '0x985458e523db3d53125813ed68c274899e9dfab4',\n    },\n    decimals: 18,\n    projectLink: 'https://mochiswap.io/',\n  },\n  doge: {\n    symbol: 'DOGE',\n    address: {\n      1666600000: '0xF155E1a57DB0Ca820aE37Ab4050e0e4C7cFcEcd0',\n    },\n    decimals: 18,\n    projectLink: 'https://mochiswap.io/',\n  },\n  bscbusd: {\n    symbol: 'BSCBUSD',\n    address: {\n      1666600000: '0x0aB43550A6915F9f67d0c454C2E90385E6497EaA',\n    },\n    decimals: 18,\n    projectLink: 'https://mochiswap.io/',\n  },\n  onemoon: {\n    symbol: 'ONEMOON',\n    address: {\n      1666600000: '0xCB35e4945c7F463c5CCBE3BF9f0389ab9321248F',\n    },\n    decimals: 9,\n    projectLink: 'https://onemoon.mochiswap.io/',\n  },\n  safemoon: {\n    symbol: 'SAFEMOON',\n    address: {\n      1666600000: '0x58c5E26fcc4d1d442396D33b58af31549C64d22F',\n    },\n    decimals: 9,\n    projectLink: 'https://onemoon.mochiswap.io/',\n  },\n  freyala: {\n    symbol: 'XYA',\n    address: {\n      1666600000: '0x9b68bf4bf89c115c721105eaf6bd5164afcc51e4',\n    },\n    decimals: 18,\n    projectLink: 'https://onemoon.mochiswap.io/',\n  },\n  rot: {\n    symbol: '1ROT',\n    address: {\n      1666600000: '0xFd2a8F8cF7CFFeA4a613F1DFf39b22881D4a1f92',\n    },\n    decimals: 18,\n    projectLink: 'https://onemoon.mochiswap.io/',\n  },\n  viper: {\n    symbol: '1ROT',\n    address: {\n      1666600000: '0xEa589E93Ff18b1a1F1e9BaC7EF3E86Ab62addc79',\n    },\n    decimals: 18,\n    projectLink: 'https://onemoon.mochiswap.io/',\n  },\n  dsla: {\n    symbol: '1DSLA',\n    address: {\n      1666600000: '0x34704c70e9eC9fB9A921da6DAAD7D3e19f43c734',\n    },\n    decimals: 18,\n    projectLink: 'https://onemoon.mochiswap.io/',\n  },\n  btc: {\n    symbol: 'WBTC',\n    address: {\n      1666600000: '0x3095c7557bCb296ccc6e363DE01b760bA031F2d9',\n    },\n    decimals: 8,\n    projectLink: 'https://onemoon.mochiswap.io/',\n  },\n  floki: {\n    symbol: 'FLOKI',\n    address: {\n      1666600000: '0x24b6179e4062ed9baeace0e6081dbd55b6072380',\n    },\n    decimals: 9,\n    projectLink: 'https://flokione.com/',\n  },\n  ape: {\n    symbol: 'APE',\n    address: {\n      1666600000: '0xd3a50c0dce15c12fe64941ffd2b864e887c9b9e1',\n    },\n    decimals: 9,\n    projectLink: 'https://harmonape.com/',\n  },\n  dai: {\n    symbol: 'DAI',\n    address: {\n      1666600000: '0xEf977d2f931C1978Db5F6747666fa1eACB0d0339',\n    },\n    decimals: 18,\n    projectLink: 'https://harmonape.com/',\n  }\n}\n\nexport default tokens\n","import { ChainId, JSBI, Percent, Token, WETH } from '@pancakeswap/sdk'\nimport { BUSD, USDT, CAKE, USDC, WONE, HMOCHI } from './tokens'\n\nexport const ROUTER_ADDRESS = '0x5F4467ccfa269BcED8F2bC4057bBF17435d11A0d' // '0x10ED43C718714eb63d5aA57B78B54704E256024E'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], BUSD[ChainId.MAINNET], HMOCHI, USDT, USDC, WONE],\n}\n\n\n// console.log('BASES_TO_CHECK_TRADES_AGAINST',BASES_TO_CHECK_TRADES_AGAINST)\n// console.log('WETH',WETH)\n/**\n * Addittional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  // [WONE[ChainId.MAINNET]]: [CAKE[ChainId.MAINNET], USDT, USDC, WONE, BUSD[ChainId.MAINNET]],\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n// used for display in the default list when adding liquidity\n// console.log('xoxoxoxoxoxoxoxoxoxoxoxoxxo')\n// console.log(HMOCHI)\n// console.log(HMOCHI)\nexport const SUGGESTED_BASES: ChainTokenList = {\n  [ChainId.MAINNET]: [BUSD[ChainId.MAINNET], HMOCHI],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], BUSD[ChainId.MAINNET], WONE, USDT, HMOCHI],\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [BUSD[ChainId.MAINNET], USDT],\n    [WONE, CAKE[ChainId.MAINNET]]\n  ],\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much BNB so they end up with <.01\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = [\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\n]\n\nexport { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { ethers } from 'ethers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\n\n// Addresses\nimport {\n  getAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n  getCakeAddress,\n  getLotteryV2Address,\n  getMasterChefAddress,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n  getTradingCompetitionAddress,\n  getEasterNftAddress,\n  getCakeVaultAddress,\n  getPredictionsAddress,\n  getChainlinkOracleAddress,\n  getMulticallAddress,\n  getBunnySpecialCakeVaultAddress,\n  getBunnySpecialPredictionAddress,\n  getFarmAuctionAddress,\n  getUpgradeSwapAddress,\n  getOldMochiAddress, //\n} from 'utils/addressHelpers'\n\n// ABI\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport erc721Abi from 'config/abi/erc721.json'\nimport lpTokenAbi from 'config/abi/lpToken.json'\nimport cakeAbi from 'config/abi/cake.json'\nimport ifoV1Abi from 'config/abi/ifoV1.json'\nimport ifoV2Abi from 'config/abi/ifoV2.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\nimport easterNftAbi from 'config/abi/easterNft.json'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport bunnySpecialCakeVaultAbi from 'config/abi/bunnySpecialCakeVault.json'\nimport bunnySpecialPredictionAbi from 'config/abi/bunnySpecialPrediction.json'\nimport farmAuctionAbi from 'config/abi/farmAuction.json'\nimport upgradeSwapAbi from 'config/abi/upgradeSwap.json'\nimport { ChainLinkOracleContract, FarmAuctionContract, PredictionsContract } from './types'\n\nconst getContract = (abi: any, address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const signerOrProvider = signer ?? simpleRpcProvider\n  return new ethers.Contract(address, abi, signerOrProvider)\n}\n\nexport const getBep20Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bep20Abi, address, signer)\n}\nexport const getErc721Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(erc721Abi, address, signer)\n}\nexport const getLpContract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lpTokenAbi, address, signer)\n}\nexport const getIfoV1Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV1Abi, address, signer)\n}\nexport const getIfoV2Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV2Abi, address, signer)\n}\nexport const getSouschefContract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), signer)\n}\nexport const getSouschefV2Contract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  return getContract(sousChefV2, getAddress(config.contractAddress), signer)\n}\nexport const getPointCenterIfoContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), signer)\n}\nexport const getCakeContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getCakeAddress(), signer)\n}\nexport const getProfileContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(profileABI, getPancakeProfileAddress(), signer)\n}\nexport const getPancakeRabbitContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), signer)\n}\nexport const getBunnyFactoryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), signer)\n}\nexport const getBunnySpecialContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), signer)\n}\nexport const getLotteryV2Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lotteryV2Abi, getLotteryV2Address(), signer)\n}\nexport const getMasterchefContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(masterChef, getMasterChefAddress(), signer)\n}\nexport const getUpgradeSwapContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(upgradeSwapAbi, getUpgradeSwapAddress(), signer)\n}\nexport const getOldMochiContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bep20Abi, getOldMochiAddress(), signer)\n}\n\nexport const getClaimRefundContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), signer)\n}\nexport const getTradingCompetitionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), signer)\n}\nexport const getEasterNftContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(easterNftAbi, getEasterNftAddress(), signer)\n}\nexport const getCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), signer)\n}\n\nexport const getPredictionsContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(predictionsAbi, getPredictionsAddress(), signer) as PredictionsContract\n}\n\nexport const getChainlinkOracleContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), signer) as ChainLinkOracleContract\n}\nexport const getMulticallContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(MultiCallAbi, getMulticallAddress(), signer)\n}\nexport const getBunnySpecialCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialCakeVaultAbi, getBunnySpecialCakeVaultAddress(), signer)\n}\nexport const getBunnySpecialPredictionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialPredictionAbi, getBunnySpecialPredictionAddress(), signer)\n}\nexport const getFarmAuctionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(farmAuctionAbi, getFarmAuctionAddress(), signer) as FarmAuctionContract\n}\n","import { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getUpgradeSwapContract,\n  getOldMochiContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n  getBunnySpecialCakeVaultContract,\n  getBunnySpecialPredictionContract,\n  getFarmAuctionContract,\n} from 'utils/contractHelpers'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\n// Imports below migrated from Exchange useContract.ts\nimport { Contract } from '@ethersproject/contracts'\nimport { ChainId, WETH } from '@pancakeswap/sdk'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport ENS_PUBLIC_RESOLVER_ABI from '../config/abi/ens-public-resolver.json'\nimport ENS_ABI from '../config/abi/ens-registrar.json'\nimport { ERC20_BYTES32_ABI } from '../config/abi/erc20'\nimport ERC20_ABI from '../config/abi/erc20.json'\nimport WETH_ABI from '../config/abi/weth.json'\nimport multiCallAbi from '../config/abi/Multicall.json'\nimport { getContract } from '../utils'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV1Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV2Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useERC20 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getErc721Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useCake = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\n}\n\nexport const useOldMochi = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getOldMochiContract(library.getSigner()), [library])\n}\n\nexport const useBunnyFactory = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnyFactoryContract(library.getSigner()), [library])\n}\n\nexport const usePancakeRabbits = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPancakeRabbitContract(library.getSigner()), [library])\n}\n\nexport const useProfile = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getProfileContract(library.getSigner()), [library])\n}\n\nexport const useLotteryV2Contract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getLotteryV2Contract(library.getSigner()), [library])\n}\n\nexport const useMasterchef = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\n}\n\nexport const useUpgradeSwapContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getUpgradeSwapContract(library.getSigner()), [library])\n}\n\nexport const useSousChef = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefContract(id, library.getSigner()), [id, library])\n}\n\nexport const useSousChefV2 = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefV2Contract(id, library.getSigner()), [id, library])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPointCenterIfoContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialContract(library.getSigner()), [library])\n}\n\nexport const useClaimRefundContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getClaimRefundContract(library.getSigner()), [library])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getTradingCompetitionContract(library.getSigner()), [library])\n}\n\nexport const useEasterNftContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getEasterNftContract(library.getSigner()), [library])\n}\n\nexport const useCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const usePredictionsContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPredictionsContract(library.getSigner()), [library])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getChainlinkOracleContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyPredictionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialPredictionContract(library.getSigner()), [library])\n}\n\nexport const useFarmAuctionContract = () => {\n  const { account, library } = useActiveWeb3React()\n  // This hook is slightly different from others\n  // Calls were failing if unconnected user goes to farm auction page\n  // Using library instead of library.getSigner() fixes the problem for unconnected users\n  // However, this fix is not ideal, it currently has following behavior:\n  // - If you visit Farm Auction page coming from some other page there are no errors in console (unconnected or connected)\n  // - If you go directly to Farm Auction page\n  //   - as unconnected user you don't see any console errors\n  //   - as connected user you see `unknown account #0 (operation=\"getAddress\", code=UNSUPPORTED_OPERATION, ...` errors\n  //     the functionality of the page is not affected, data is loading fine and you can interact with the contract\n  //\n  // Similar behavior was also noticed on Trading Competition page.\n  return useMemo(() => getFarmAuctionContract(account ? library.getSigner() : library), [library, account])\n}\n\n// Code below migrated from Exchange useContract.ts\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  let address: string | undefined\n  if (chainId) {\n    // eslint-disable-next-line default-case\n    switch (chainId) {\n      case ChainId.MAINNET:\n      // case ChainId.TESTNET:\n      //   address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n      //   break\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  return useContract(getMulticallAddress(), multiCallAbi, false)\n}\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text, TextProps } from '@pancakeswap/uikit'\n\ninterface BalanceProps extends TextProps {\n  value: number\n  decimals?: number\n  unit?: string\n  isDisabled?: boolean\n  prefix?: string\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst Balance: React.FC<BalanceProps> = ({\n  value,\n  color = 'text',\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  onClick,\n  ...props\n}) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\n      <CountUp\n        start={previousValue.current}\n        end={value}\n        prefix={prefix}\n        suffix={unit}\n        decimals={decimals}\n        duration={1}\n        separator=\",\"\n      />\n    </Text>\n  )\n}\n\nexport default Balance\n","import BigNumber from 'bignumber.js'\nimport { SerializedBigNumber, TranslatableText } from 'state/types'\n\nexport interface Address {\n  1666600000: string\n}\n\nexport interface Token {\n  symbol: string\n  address?: Address\n  decimals?: number\n  projectLink?: string\n  busdPrice?: string\n}\n\nexport enum PoolIds {\n  poolBasic = 'poolBasic',\n  poolUnlimited = 'poolUnlimited',\n}\n\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\n\ninterface IfoPoolInfo {\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  distributionRatio: number // Range [0-1]\n}\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  currency: Token\n  token: Token\n  releaseBlockNumber: number\n  articleUrl: string\n  campaignId: string\n  tokenOfferingPrice: number\n  version: number\n  [PoolIds.poolBasic]?: IfoPoolInfo\n  [PoolIds.poolUnlimited]: IfoPoolInfo\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n  'AUTO' = 'Auto',\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  token: Token\n  quoteToken: Token\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  earningToken: Token\n  stakingToken: Token\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  enableEmergencyWithdraw?: boolean\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type NftImages = {\n  blur?: string\n} & Images\n\nexport type NftVideo = {\n  webm: string\n  mp4: string\n}\n\nexport type NftSource = {\n  [key in NftType]: {\n    address: Address\n    identifierKey: string\n  }\n}\n\nexport enum NftType {\n  PANCAKE = 'pancake',\n  MIXIE = 'mixie',\n}\n\nexport type Nft = {\n  description: string\n  name: string\n  images: NftImages\n  sortOrder: number\n  type: NftType\n  video?: NftVideo\n\n  // Uniquely identifies the nft.\n  // Used for matching an NFT from the config with the data from the NFT's tokenURI\n  identifier: string\n\n  // Used to be \"bunnyId\". Used when minting NFT\n  variationId?: number | string\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo' | 'teambattle' | 'participation'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n\nexport type PageMeta = {\n  title: string\n  description?: string\n  image?: string\n}\n\nexport enum LotteryStatus {\n  PENDING = 'pending',\n  OPEN = 'open',\n  CLOSE = 'close',\n  CLAIMABLE = 'claimable',\n}\n\nexport interface LotteryTicket {\n  id: string\n  number: string\n  status: boolean\n  rewardBracket?: number\n  roundId?: string\n  cakeReward?: SerializedBigNumber\n}\n\nexport interface LotteryTicketClaimData {\n  ticketsWithUnclaimedRewards: LotteryTicket[]\n  allWinningTickets: LotteryTicket[]\n  cakeTotal: BigNumber\n  roundId: string\n}\n\n// Farm Auction\nexport interface FarmAuctionBidderConfig {\n  account: string\n  farmName: string\n  tokenAddress: string\n  quoteToken: Token\n  tokenName: string\n  projectSite?: string\n  lpAddress?: string\n}\n\n// Note: this status is slightly different compared to 'status' comfing\n// from Farm Auction smart contract\nexport enum AuctionStatus {\n  ToBeAnnounced, // No specific dates/blocks to display\n  Pending, // Auction is scheduled but not live yet (i.e. waiting for startBlock)\n  Open, // Auction is open for bids\n  Finished, // Auction end block is reached, bidding is not possible\n  Closed, // Auction was closed in smart contract\n}\n\nexport interface Auction {\n  id: number\n  status: AuctionStatus\n  startBlock: number\n  startDate: Date\n  endBlock: number\n  endDate: Date\n  auctionDuration: number\n  farmStartBlock: number\n  farmStartDate: Date\n  farmEndBlock: number\n  farmEndDate: Date\n  initialBidAmount: number\n  topLeaderboard: number\n  leaderboardThreshold: BigNumber\n}\n\nexport interface BidderAuction {\n  id: number\n  amount: BigNumber\n  claimed: boolean\n}\n\nexport interface Bidder extends FarmAuctionBidderConfig {\n  position?: number\n  isTopPosition: boolean\n  samePositionAsAbove: boolean\n  amount: BigNumber\n}\n\nexport interface ConnectedBidder {\n  account: string\n  isWhitelisted: boolean\n  bidderData?: Bidder\n}\n","import { ChainId, Pair, Token } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { AppDispatch, AppState } from '../../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  FarmStakedOnly,\n  muteAudio,\n  removeSerializedToken,\n  SerializedPair,\n  toggleTheme as toggleThemeAction,\n  unmuteAudio,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n  updateGasPrice,\n} from '../actions'\nimport { deserializeToken, GAS_PRICE_GWEI, serializeToken } from './helpers'\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useThemeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\n\n  const toggleTheme = useCallback(() => {\n    dispatch(toggleThemeAction())\n  }, [dispatch])\n\n  return [isDark, toggleTheme]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserFarmStakedOnly(isActive: boolean): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmStakedOnly = useSelector<AppState, AppState['user']['userFarmStakedOnly']>((state) => {\n    return state.user.userFarmStakedOnly\n  })\n\n  const setUserFarmStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\n      dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [\n    userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\n    setUserFarmStakedOnly,\n  ]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useGasPrice(): string {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  const userGas = useSelector<AppState, AppState['user']['gasPrice']>((state) => state.user.gasPrice)\n  return chainId === ChainId.MAINNET.toString() ? userGas : GAS_PRICE_GWEI.testnet\n}\n\nexport function useGasPriceManager(): [string, (userGasPrice: string) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userGasPrice = useGasPrice()\n\n  const setGasPrice = useCallback(\n    (gasPrice: string) => {\n      dispatch(updateGasPrice({ gasPrice }))\n    },\n    [dispatch],\n  )\n\n  return [userGasPrice, setGasPrice]\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Cake-LP', 'Pancake LPs')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n","import { ethers } from 'ethers'\nimport { getMulticallContract } from 'utils/contractHelpers'\nimport { MultiCallResponse } from './types'\n\nexport interface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (example: balanceOf)\n  params?: any[] // Function params\n}\n\ninterface MulticallOptions {\n  requireSuccess?: boolean\n}\n\nconst multicall = async <T = any>(abi: any[], calls: Call[]): Promise<T> => {\n  try {\n    const multi = getMulticallContract()\n    const itf = new ethers.utils.Interface(abi)\n\n    const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n    const { returnData } = await multi.aggregate(calldata)\n\n    const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n    return res\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\n/**\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\n *\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\n * 2. The return includes a boolean whether the call was successful e.g. [wasSuccessful, callResult]\n */\nexport const multicallv2 = async <T = any>(\n  abi: any[],\n  calls: Call[],\n  options: MulticallOptions = { requireSuccess: true },\n): Promise<MultiCallResponse<T>> => {\n  const { requireSuccess } = options\n  const multi = getMulticallContract()\n  const itf = new ethers.utils.Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const returnData = await multi.tryAggregate(requireSuccess, calldata)\n  const res = returnData.map((call, i) => {\n    const [result, data] = call\n    return result ? itf.decodeFunctionResult(calls[i].name, data) : null\n  })\n\n  return res\n}\n\nexport default multicall\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from '@pancakeswap/sdk'\n\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\n}\n\nexport function wrappedCurrencyAmount(\n  currencyAmount: CurrencyAmount | undefined,\n  chainId: ChainId | undefined,\n): TokenAmount | undefined {\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\n}\n\nexport function unwrappedToken(token: Token): Currency {\n  if (token.equals(WETH[token.chainId])) return ETHER\n  return token\n}\n","import BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { getApy } from 'utils/compoundApyHelpers'\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\n\nexport const convertSharesToCake = (\n  shares: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\n}\n\nexport const convertCakeToShares = (\n  cake: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\n}\n\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 5000\nconst MANUAL_POOL_AUTO_COMPOUND_FREQUENCY = 0\n\nexport const getAprData = (pool: Pool, performanceFee: number) => {\n  const { isAutoVault, apr } = pool\n\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\n  const autoCompoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_AUTO_COMPOUND_FREQUENCY\n\n  if (isAutoVault) {\n    const autoApr = getApy(apr, AUTO_VAULT_COMPOUND_FREQUENCY, 365, performanceFee) * 100\n    return { apr: autoApr, autoCompoundFrequency }\n  }\n  return { apr, autoCompoundFrequency }\n}\n\nexport const getCakeVaultEarnings = (\n  account: string,\n  cakeAtLastUserAction: BigNumber,\n  userShares: BigNumber,\n  pricePerFullShare: BigNumber,\n  earningTokenPrice: number,\n) => {\n  const hasAutoEarnings =\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const autoCakeProfit = cakeAsBigNumber.minus(cakeAtLastUserAction)\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\n  const realCakeToDisplay = new BigNumber(autoCakeToDisplay)\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\n}\n\nexport const getPoolBlockInfo = (pool: Pool, currentBlock: number) => {\n  const { startBlock, endBlock, isFinished } = pool\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\n}\n","import { Currency } from '@pancakeswap/sdk'\nimport React from 'react'\nimport styled from 'styled-components'\nimport CurrencyLogo from './CurrencyLogo'\n\nconst Wrapper = styled.div<{ margin: boolean }>`\n  display: flex;\n  flex-direction: row;\n  margin-right: ${({ margin }) => margin && '4px'};\n`\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  currency0?: Currency\n  currency1?: Currency\n}\n\nexport default function DoubleCurrencyLogo({\n  currency0,\n  currency1,\n  size = 20,\n  margin = false,\n}: DoubleCurrencyLogoProps) {\n  return (\n    <Wrapper margin={margin}>\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport Logo from './Logo'\n\nconst StyledListLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function ListLogo({\n  logoURI,\n  style,\n  size = '24px',\n  alt,\n}: {\n  logoURI: string\n  size?: string\n  style?: React.CSSProperties\n  alt?: string\n}) {\n  const srcs: string[] = useHttpLocations(logoURI)\n\n  return <StyledListLogo alt={alt} size={size} srcs={srcs} style={style} />\n}\n","/* eslint-disable no-param-reassign */\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ETHER, Token, currencyEquals } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { arrayify } from 'ethers/lib/utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  TokenAddressMap,\n  useDefaultTokenList,\n  useUnsupportedTokenList,\n  useCombinedActiveList,\n  useCombinedInactiveList,\n} from '../state/lists/hooks'\n\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens'\nimport { isAddress } from '../utils'\n\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\nimport { filterTokens } from '../components/SearchModal/filtering'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token\n      return newMap\n    }, {})\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap_, token) => {\n              tokenMap_[token.address] = token\n              return tokenMap_\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls },\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\nexport function useDefaultTokens(): { [address: string]: Token } {\n  const defaultList = useDefaultTokenList()\n  return useTokensFromMap(defaultList, false)\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useAllInactiveTokens(): { [address: string]: Token } {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\n        if (!activeTokensAddresses.includes(address)) {\n          newMap[address] = inactiveTokens[address]\n        }\n        return newMap\n      }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\n  const { chainId } = useActiveWeb3React()\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    }\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n    return tokens\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isBNB = currencyId?.toUpperCase() === 'BNB'\n  const token = useToken(isBNB ? undefined : currencyId)\n  return isBNB ? ETHER : token\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface SerializedToken {\n  chainId: number\n  address: string\n  decimals: number\n  symbol?: string\n  name?: string\n}\n\nexport interface SerializedPair {\n  token0: SerializedToken\n  token1: SerializedToken\n}\n\nexport enum FarmStakedOnly {\n  ON_FINISHED = 'onFinished',\n  TRUE = 'true',\n  FALSE = 'false',\n}\n\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode')\nexport const updateUserSingleHopOnly = createAction<{ userSingleHopOnly: boolean }>('user/updateUserSingleHopOnly')\nexport const updateUserSlippageTolerance = createAction<{ userSlippageTolerance: number }>(\n  'user/updateUserSlippageTolerance',\n)\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline')\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken')\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken')\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair')\nexport const removeSerializedPair =\n  createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>('user/removeSerializedPair')\n\nexport const muteAudio = createAction<void>('user/muteAudio')\nexport const unmuteAudio = createAction<void>('user/unmuteAudio')\nexport const toggleTheme = createAction<void>('user/toggleTheme')\nexport const updateUserFarmStakedOnly = createAction<{ userFarmStakedOnly: FarmStakedOnly }>(\n  'user/updateUserFarmStakedOnly',\n)\nexport const updateGasPrice = createAction<{ gasPrice: string }>('user/updateGasPrice')\n","import { Interface, FunctionFragment } from '@ethersproject/abi'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  addMulticallListeners,\n  Call,\n  removeMulticallListeners,\n  parseCallKey,\n  toCallKey,\n  ListenerOptions,\n} from './actions'\n\nexport interface Result extends ReadonlyArray<any> {\n  readonly [key: string]: any\n}\n\ntype MethodArg = string | number | BigNumber\ntype MethodArgs = Array<MethodArg | MethodArg[]>\n\ntype OptionalMethodInputs = Array<MethodArg | MethodArg[] | undefined> | undefined\n\nfunction isMethodArg(x: unknown): x is MethodArg {\n  return ['string', 'number'].indexOf(typeof x) !== -1\n}\n\nfunction isValidMethodArgs(x: unknown): x is MethodArgs | undefined {\n  return (\n    x === undefined ||\n    (Array.isArray(x) && x.every((xi) => isMethodArg(xi) || (Array.isArray(xi) && xi.every(isMethodArg))))\n  )\n}\n\ninterface CallResult {\n  readonly valid: boolean\n  readonly data: string | undefined\n  readonly blockNumber: number | undefined\n}\n\nconst INVALID_RESULT: CallResult = { valid: false, blockNumber: undefined, data: undefined }\n\n// use this options object\nexport const NEVER_RELOAD: ListenerOptions = {\n  blocksPerFetch: Infinity,\n}\n\n// the lowest level call for subscribing to contract data\nfunction useCallsData(calls: (Call | undefined)[], options?: ListenerOptions): CallResult[] {\n  const { chainId } = useActiveWeb3React()\n  const callResults = useSelector<AppState, AppState['multicall']['callResults']>(\n    (state) => state.multicall.callResults,\n  )\n  const dispatch = useDispatch<AppDispatch>()\n\n  const serializedCallKeys: string = useMemo(\n    () =>\n      JSON.stringify(\n        calls\n          ?.filter((c): c is Call => Boolean(c))\n          ?.map(toCallKey)\n          ?.sort() ?? [],\n      ),\n    [calls],\n  )\n\n  // update listeners when there is an actual change that persists for at least 100ms\n  useEffect(() => {\n    const callKeys: string[] = JSON.parse(serializedCallKeys)\n    if (!chainId || callKeys.length === 0) return undefined\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const calls = callKeys.map((key) => parseCallKey(key))\n    dispatch(\n      addMulticallListeners({\n        chainId,\n        calls,\n        options,\n      }),\n    )\n\n    return () => {\n      dispatch(\n        removeMulticallListeners({\n          chainId,\n          calls,\n          options,\n        }),\n      )\n    }\n  }, [chainId, dispatch, options, serializedCallKeys])\n\n  return useMemo(\n    () =>\n      calls.map<CallResult>((call) => {\n        if (!chainId || !call) return INVALID_RESULT\n\n        const result = callResults[chainId]?.[toCallKey(call)]\n        let data\n        if (result?.data && result?.data !== '0x') {\n          // eslint-disable-next-line prefer-destructuring\n          data = result.data\n        }\n\n        return { valid: true, data, blockNumber: result?.blockNumber }\n      }),\n    [callResults, calls, chainId],\n  )\n}\n\ninterface CallState {\n  readonly valid: boolean\n  // the result, or undefined if loading or errored/no data\n  readonly result: Result | undefined\n  // true if the result has never been fetched\n  readonly loading: boolean\n  // true if the result is not for the latest block\n  readonly syncing: boolean\n  // true if the call was made and is synced, but the return data is invalid\n  readonly error: boolean\n}\n\nconst INVALID_CALL_STATE: CallState = { valid: false, result: undefined, loading: false, syncing: false, error: false }\nconst LOADING_CALL_STATE: CallState = { valid: true, result: undefined, loading: true, syncing: true, error: false }\n\nfunction toCallState(\n  callResult: CallResult | undefined,\n  contractInterface: Interface | undefined,\n  fragment: FunctionFragment | undefined,\n  latestBlockNumber: number | undefined,\n): CallState {\n  if (!callResult) return INVALID_CALL_STATE\n  const { valid, data, blockNumber } = callResult\n  if (!valid) return INVALID_CALL_STATE\n  if (valid && !blockNumber) return LOADING_CALL_STATE\n  if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE\n  const success = data && data.length > 2\n  const syncing = (blockNumber ?? 0) < latestBlockNumber\n  let result: Result | undefined\n  if (success && data) {\n    try {\n      result = contractInterface.decodeFunctionResult(fragment, data)\n    } catch (error) {\n      console.debug('Result data parsing failed', fragment, data)\n      return {\n        valid: true,\n        loading: false,\n        error: true,\n        syncing,\n        result,\n      }\n    }\n  }\n  return {\n    valid: true,\n    loading: false,\n    syncing,\n    result,\n    error: !success,\n  }\n}\n\nexport function useSingleContractMultipleData(\n  contract: Contract | null | undefined,\n  methodName: string,\n  callInputs: OptionalMethodInputs[],\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo(\n    () =>\n      contract && fragment && callInputs && callInputs.length > 0\n        ? callInputs.map<Call>((inputs) => {\n            return {\n              address: contract.address,\n              callData: contract.interface.encodeFunctionData(fragment, inputs),\n            }\n          })\n        : [],\n    [callInputs, contract, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contract?.interface, fragment, latestBlockNumber))\n  }, [fragment, contract, results, latestBlockNumber])\n}\n\nexport function useMultipleContractSingleData(\n  addresses: (string | undefined)[],\n  contractInterface: Interface,\n  methodName: string,\n  callInputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName])\n  const callData: string | undefined = useMemo(\n    () =>\n      fragment && isValidMethodArgs(callInputs)\n        ? contractInterface.encodeFunctionData(fragment, callInputs)\n        : undefined,\n    [callInputs, contractInterface, fragment],\n  )\n\n  const calls = useMemo(\n    () =>\n      fragment && addresses && addresses.length > 0 && callData\n        ? addresses.map<Call | undefined>((address) => {\n            return address && callData\n              ? {\n                  address,\n                  callData,\n                }\n              : undefined\n          })\n        : [],\n    [addresses, callData, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contractInterface, fragment, latestBlockNumber))\n  }, [fragment, results, contractInterface, latestBlockNumber])\n}\n\nexport function useSingleCallResult(\n  contract: Contract | null | undefined,\n  methodName: string,\n  inputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo<Call[]>(() => {\n    return contract && fragment && isValidMethodArgs(inputs)\n      ? [\n          {\n            address: contract.address,\n            callData: contract.interface.encodeFunctionData(fragment, inputs),\n          },\n        ]\n      : []\n  }, [contract, fragment, inputs])\n\n  const result = useCallsData(calls, options)[0]\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return toCallState(result, contract?.interface, fragment, latestBlockNumber)\n  }, [result, contract, fragment, latestBlockNumber])\n}\n","import { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\n\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\nfunction useTokenAllowance(token?: Token, owner?: string, spender?: string): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\n\n  return useMemo(\n    () => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined),\n    [token, allowance],\n  )\n}\n\nexport default useTokenAllowance\n","import { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from '@pancakeswap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { ROUTER_ADDRESS } from '../config/constants'\nimport useTokenAllowance from './useTokenAllowance'\nimport { Field } from '../state/swap/actions'\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks'\nimport { computeSlippageAdjustedAmounts } from '../utils/prices'\nimport { calculateGasMargin } from '../utils'\nimport { useTokenContract } from './useContract'\nimport { useCallWithGasPrice } from './useCallWithGasPrice'\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount,\n  spender?: string,\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useActiveWeb3React()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\n    })\n\n    // eslint-disable-next-line consistent-return\n    return callWithGasPrice(\n      tokenContract,\n      'approve',\n      [spender, useExact ? amountToApprove.raw.toString() : MaxUint256],\n      {\n        gasLimit: calculateGasMargin(estimatedGas),\n      },\n    )\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: `Approve ${amountToApprove.currency.symbol}`,\n          approval: { tokenAddress: token.address, spender },\n        })\n      })\n      .catch((error: Error) => {\n        console.error('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction, callWithGasPrice])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage],\n  )\n\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\n}\n","import { ThunkAction } from 'redux-thunk'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { CampaignType, FarmConfig, LotteryStatus, LotteryTicket, Nft, PoolConfig, Team } from 'config/constants/types'\n\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, AnyAction>\n\nexport interface BigNumberToJson {\n  type: 'BigNumber'\n  hex: string\n}\n\nexport type TranslatableText =\n  | string\n  | {\n      key: string\n      data?: {\n        [key: string]: string | number\n      }\n    }\n\nexport type SerializedBigNumber = string\n\nexport interface Farm extends FarmConfig {\n  tokenAmountMc?: SerializedBigNumber\n  quoteTokenAmountMc?: SerializedBigNumber\n  tokenAmountTotal?: SerializedBigNumber\n  quoteTokenAmountTotal?: SerializedBigNumber\n  lpTotalInQuoteToken?: SerializedBigNumber\n  lpTotalSupply?: SerializedBigNumber\n  tokenPriceVsQuote?: SerializedBigNumber\n  poolWeight?: SerializedBigNumber\n  userData?: {\n    allowance: string\n    tokenBalance: string\n    stakedBalance: string\n    earnings: string\n  }\n}\n\nexport interface Pool extends PoolConfig {\n  totalStaked?: BigNumber\n  stakingLimit?: BigNumber\n  startBlock?: number\n  endBlock?: number\n  apr?: number\n  stakingTokenPrice?: number\n  earningTokenPrice?: number\n  isAutoVault?: boolean\n  userData?: {\n    allowance: BigNumber\n    stakingTokenBalance: BigNumber\n    stakedBalance: BigNumber\n    pendingReward: BigNumber\n  }\n}\n\nexport interface Profile {\n  userId: number\n  points: number\n  teamId: number\n  nftAddress: string\n  tokenId: number\n  isActive: boolean\n  username: string\n  nft?: Nft\n  team: Team\n  hasRegistered: boolean\n}\n\n// Slices states\n\nexport interface FarmsState {\n  data: Farm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface VaultFees {\n  performanceFee: number\n  callFee: number\n  withdrawalFee: number\n  withdrawalFeePeriod: number\n}\n\nexport interface VaultUser {\n  isLoading: boolean\n  userShares: string\n  cakeAtLastUserAction: string\n  lastDepositedTime: string\n  lastUserActionTime: string\n}\nexport interface CakeVault {\n  totalShares?: string\n  pricePerFullShare?: string\n  totalCakeInVault?: string\n  estimatedCakeBountyReward?: string\n  totalPendingCakeHarvest?: string\n  fees?: VaultFees\n  userData?: VaultUser\n}\n\nexport interface PoolsState {\n  data: Pool[]\n  cakeVault: CakeVault\n  userDataLoaded: boolean\n}\n\nexport interface ProfileState {\n  isInitialized: boolean\n  isLoading: boolean\n  hasRegistered: boolean\n  data: Profile\n}\n\nexport type TeamResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: boolean\n}\n\nexport type TeamsById = {\n  [key: string]: Team\n}\n\nexport interface TeamsState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: TeamsById\n}\n\nexport interface Achievement {\n  id: string\n  type: CampaignType\n  address: string\n  title: TranslatableText\n  description?: TranslatableText\n  badge: string\n  points: number\n}\n\nexport interface AchievementState {\n  data: Achievement[]\n}\n\n// Block\n\nexport interface BlockState {\n  currentBlock: number\n  initialBlock: number\n}\n\n// Collectibles\n\nexport interface CollectiblesState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: {\n    [key: string]: number[]\n  }\n}\n\n// Predictions\n\nexport enum BetPosition {\n  BULL = 'Bull',\n  BEAR = 'Bear',\n  HOUSE = 'House',\n}\n\nexport enum PredictionStatus {\n  INITIAL = 'initial',\n  LIVE = 'live',\n  PAUSED = 'paused',\n  ERROR = 'error',\n}\n\nexport interface Round {\n  id: string\n  epoch: number\n  failed?: boolean\n  startBlock: number\n  startAt: number\n  lockAt: number\n  lockBlock: number\n  lockPrice: number\n  endBlock: number\n  closePrice: number\n  totalBets: number\n  totalAmount: number\n  bullBets: number\n  bearBets: number\n  bearAmount: number\n  bullAmount: number\n  position: BetPosition\n  bets?: Bet[]\n}\n\nexport interface Market {\n  paused: boolean\n  epoch: number\n}\n\nexport interface Bet {\n  id?: string\n  hash?: string\n  amount: number\n  position: BetPosition\n  claimed: boolean\n  claimedHash: string\n  user?: PredictionUser\n  round: Round\n}\n\nexport interface PredictionUser {\n  id: string\n  address: string\n  block: number\n  totalBets: number\n  totalBNB: number\n}\n\nexport interface HistoryData {\n  [key: string]: Bet[]\n}\n\nexport enum HistoryFilter {\n  ALL = 'all',\n  COLLECTED = 'collected',\n  UNCOLLECTED = 'uncollected',\n}\n\nexport interface LedgerData {\n  [key: string]: {\n    [key: string]: ReduxNodeLedger\n  }\n}\n\nexport interface RoundData {\n  [key: string]: ReduxNodeRound\n}\n\nexport interface ReduxNodeLedger {\n  position: BetPosition\n  amount: BigNumberToJson\n  claimed: boolean\n}\n\nexport interface NodeLedger {\n  position: BetPosition\n  amount: ethers.BigNumber\n  claimed: boolean\n}\n\nexport interface ReduxNodeRound {\n  epoch: number\n  startBlock: number\n  lockBlock: number | null\n  endBlock: number | null\n  lockPrice: BigNumberToJson | null\n  closePrice: BigNumberToJson | null\n  totalAmount: BigNumberToJson\n  bullAmount: BigNumberToJson\n  bearAmount: BigNumberToJson\n  rewardBaseCalAmount: BigNumberToJson\n  rewardAmount: BigNumberToJson\n  oracleCalled: boolean\n}\n\nexport interface NodeRound {\n  epoch: number\n  startBlock: number\n  lockBlock: number\n  endBlock: number\n  lockPrice: ethers.BigNumber\n  closePrice: ethers.BigNumber\n  totalAmount: ethers.BigNumber\n  bullAmount: ethers.BigNumber\n  bearAmount: ethers.BigNumber\n  rewardBaseCalAmount: ethers.BigNumber\n  rewardAmount: ethers.BigNumber\n  oracleCalled: boolean\n}\n\nexport interface PredictionsState {\n  status: PredictionStatus\n  isLoading: boolean\n  isHistoryPaneOpen: boolean\n  isChartPaneOpen: boolean\n  isFetchingHistory: boolean\n  historyFilter: HistoryFilter\n  currentEpoch: number\n  currentRoundStartBlockNumber: number\n  intervalBlocks: number\n  bufferBlocks: number\n  minBetAmount: string\n  rewardRate: number\n  lastOraclePrice: string\n  history: HistoryData\n  rounds?: RoundData\n  ledgers?: LedgerData\n  claimableStatuses: {\n    [key: string]: boolean\n  }\n}\n\n// Voting\n\n/* eslint-disable camelcase */\n/**\n * @see https://hub.snapshot.page/graphql\n */\nexport interface VoteWhere {\n  id?: string\n  id_in?: string[]\n  voter?: string\n  voter_in?: string[]\n  proposal?: string\n  proposal_in?: string[]\n}\n\nexport enum SnapshotCommand {\n  PROPOSAL = 'proposal',\n  VOTE = 'vote',\n}\n\nexport enum ProposalType {\n  ALL = 'all',\n  CORE = 'core',\n  COMMUNITY = 'community',\n}\n\nexport enum ProposalState {\n  ACTIVE = 'active',\n  PENDING = 'pending',\n  CLOSED = 'closed',\n}\n\nexport interface Space {\n  id: string\n  name: string\n}\n\nexport interface Proposal {\n  author: string\n  body: string\n  choices: string[]\n  end: number\n  id: string\n  snapshot: string\n  space: Space\n  start: number\n  state: ProposalState\n  title: string\n}\n\nexport interface Vote {\n  id: string\n  voter: string\n  created: number\n  space: Space\n  proposal: {\n    choices: Proposal['choices']\n  }\n  choice: number\n  metadata?: {\n    votingPower: string\n    verificationHash: string\n  }\n  _inValid?: boolean\n}\n\nexport enum VotingStateLoadingStatus {\n  INITIAL = 'initial',\n  IDLE = 'idle',\n  LOADING = 'loading',\n  ERROR = 'error',\n}\n\nexport interface VotingState {\n  proposalLoadingStatus: VotingStateLoadingStatus\n  proposals: {\n    [key: string]: Proposal\n  }\n  voteLoadingStatus: VotingStateLoadingStatus\n  votes: {\n    [key: string]: Vote[]\n  }\n}\n\nexport interface LotteryRoundUserTickets {\n  isLoading?: boolean\n  tickets?: LotteryTicket[]\n}\n\ninterface LotteryRoundGenerics {\n  isLoading?: boolean\n  lotteryId: string\n  status: LotteryStatus\n  startTime: string\n  endTime: string\n  treasuryFee: string\n  firstTicketId: string\n  lastTicketId: string\n  finalNumber: number\n}\n\nexport interface LotteryRound extends LotteryRoundGenerics {\n  userTickets?: LotteryRoundUserTickets\n  priceTicketInCake: BigNumber\n  discountDivisor: BigNumber\n  amountCollectedInCake: BigNumber\n  cakePerBracket: string[]\n  countWinnersPerBracket: string[]\n  rewardsBreakdown: string[]\n}\n\nexport interface LotteryResponse extends LotteryRoundGenerics {\n  priceTicketInCake: SerializedBigNumber\n  discountDivisor: SerializedBigNumber\n  amountCollectedInCake: SerializedBigNumber\n  cakePerBracket: SerializedBigNumber[]\n  countWinnersPerBracket: SerializedBigNumber[]\n  rewardsBreakdown: SerializedBigNumber[]\n}\n\nexport interface LotteryState {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n  isTransitioning: boolean\n  currentRound: LotteryResponse & { userTickets?: LotteryRoundUserTickets }\n  lotteriesData?: LotteryRoundGraphEntity[]\n  userLotteryData?: LotteryUserGraphEntity\n}\n\nexport interface LotteryRoundGraphEntity {\n  id: string\n  totalUsers: string\n  totalTickets: string\n  winningTickets: string\n  status: LotteryStatus\n  finalNumber: string\n  startTime: string\n  endTime: string\n  ticketPrice: SerializedBigNumber\n}\n\nexport interface LotteryUserGraphEntity {\n  account: string\n  totalCake: string\n  totalTickets: string\n  rounds: UserRound[]\n}\n\nexport interface UserRound {\n  claimed: boolean\n  lotteryId: string\n  status: LotteryStatus\n  endTime: string\n  totalTickets: string\n  tickets?: LotteryTicket[]\n}\n\nexport type UserTicketsResponse = [ethers.BigNumber[], number[], boolean[]]\n\n// Global state\n\nexport interface State {\n  achievements: AchievementState\n  block: BlockState\n  farms: FarmsState\n  pools: PoolsState\n  predictions: PredictionsState\n  profile: ProfileState\n  teams: TeamsState\n  collectibles: CollectiblesState\n  voting: VotingState\n  lottery: LotteryState\n}\n","import { createReducer } from '@reduxjs/toolkit'\nimport { updateBlockNumber } from './actions'\n\nexport interface ApplicationState {\n  readonly blockNumber: { readonly [chainId: number]: number }\n}\n\nconst initialState: ApplicationState = {\n  blockNumber: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder.addCase(updateBlockNumber, (state, action) => {\n    const { chainId, blockNumber } = action.payload\n    if (typeof state.blockNumber[chainId] !== 'number') {\n      state.blockNumber[chainId] = blockNumber\n    } else {\n      state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId])\n    }\n  }),\n)\n","import { createAction } from '@reduxjs/toolkit'\n\n// fired once when the app reloads but before the app renders\n// allows any updates to be applied to store data loaded from localStorage\nexport const updateVersion = createAction<void>('global/updateVersion')\n\nexport default updateVersion\n","import { createReducer } from '@reduxjs/toolkit'\nimport { INITIAL_ALLOWED_SLIPPAGE, DEFAULT_DEADLINE_FROM_NOW } from '../../config/constants'\nimport { updateVersion } from '../global/actions'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  removeSerializedPair,\n  removeSerializedToken,\n  SerializedPair,\n  SerializedToken,\n  updateUserExpertMode,\n  updateUserSlippageTolerance,\n  updateUserDeadline,\n  updateUserSingleHopOnly,\n  updateGasPrice,\n  muteAudio,\n  unmuteAudio,\n  toggleTheme,\n  updateUserFarmStakedOnly,\n  FarmStakedOnly,\n} from './actions'\nimport { GAS_PRICE_GWEI } from './hooks/helpers'\n\nconst currentTimestamp = () => new Date().getTime()\n\nexport interface UserState {\n  // the timestamp of the last updateVersion action\n  lastUpdateVersionTimestamp?: number\n\n  userExpertMode: boolean\n\n  // only allow swaps on direct pairs\n  userSingleHopOnly: boolean\n\n  // user defined slippage tolerance in bips, used in all txns\n  userSlippageTolerance: number\n\n  // deadline set by user in minutes, used in all txns\n  userDeadline: number\n\n  tokens: {\n    [chainId: number]: {\n      [address: string]: SerializedToken\n    }\n  }\n\n  pairs: {\n    [chainId: number]: {\n      // keyed by token0Address:token1Address\n      [key: string]: SerializedPair\n    }\n  }\n\n  timestamp: number\n  audioPlay: boolean\n  isDark: boolean\n  userFarmStakedOnly: FarmStakedOnly\n  gasPrice: string\n}\n\nfunction pairKey(token0Address: string, token1Address: string) {\n  return `${token0Address};${token1Address}`\n}\n\nexport const initialState: UserState = {\n  userExpertMode: false,\n  userSingleHopOnly: false,\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\n  tokens: {},\n  pairs: {},\n  timestamp: currentTimestamp(),\n  audioPlay: true,\n  isDark: true,\n  userFarmStakedOnly: FarmStakedOnly.ON_FINISHED,\n  gasPrice: GAS_PRICE_GWEI.default,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updateVersion, (state) => {\n      // slippage isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userSlippageTolerance !== 'number') {\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\n      }\n\n      // deadline isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userDeadline !== 'number') {\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\n      }\n\n      state.lastUpdateVersionTimestamp = currentTimestamp()\n    })\n    .addCase(updateUserExpertMode, (state, action) => {\n      state.userExpertMode = action.payload.userExpertMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSlippageTolerance, (state, action) => {\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserDeadline, (state, action) => {\n      state.userDeadline = action.payload.userDeadline\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSingleHopOnly, (state, action) => {\n      state.userSingleHopOnly = action.payload.userSingleHopOnly\n    })\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[chainId] = state.tokens[chainId] || {}\n      delete state.tokens[chainId][address]\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\n      if (\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\n        serializedPair.token0.address !== serializedPair.token1.address\n      ) {\n        const { chainId } = serializedPair.token0\n        state.pairs[chainId] = state.pairs[chainId] || {}\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\n      if (state.pairs[chainId]) {\n        // just delete both keys if either exists\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(muteAudio, (state) => {\n      state.audioPlay = false\n    })\n    .addCase(unmuteAudio, (state) => {\n      state.audioPlay = true\n    })\n    .addCase(toggleTheme, (state) => {\n      state.isDark = !state.isDark\n    })\n    .addCase(updateUserFarmStakedOnly, (state, { payload: { userFarmStakedOnly } }) => {\n      state.userFarmStakedOnly = userFarmStakedOnly\n    })\n    .addCase(updateGasPrice, (state, action) => {\n      state.gasPrice = action.payload.gasPrice\n    }),\n)\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit'\nimport {\n  addTransaction,\n  checkedTransaction,\n  clearAllTransactions,\n  finalizeTransaction,\n  SerializableTransactionReceipt,\n} from './actions'\n\nconst now = () => new Date().getTime()\n\nexport interface TransactionDetails {\n  hash: string\n  approval?: { tokenAddress: string; spender: string }\n  summary?: string\n  claim?: { recipient: string }\n  receipt?: SerializableTransactionReceipt\n  lastCheckedBlockNumber?: number\n  addedTime: number\n  confirmedTime?: number\n  from: string\n}\n\nexport interface TransactionState {\n  [chainId: number]: {\n    [txHash: string]: TransactionDetails\n  }\n}\n\nexport const initialState: TransactionState = {}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, approval, summary, claim } }) => {\n      if (transactions[chainId]?.[hash]) {\n        throw Error('Attempted to add existing transaction.')\n      }\n      const txs = transactions[chainId] ?? {}\n      txs[hash] = { hash, approval, summary, claim, from, addedTime: now() }\n      transactions[chainId] = txs\n    })\n    .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\n      if (!transactions[chainId]) return\n      transactions[chainId] = {}\n    })\n    .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      if (!tx.lastCheckedBlockNumber) {\n        tx.lastCheckedBlockNumber = blockNumber\n      } else {\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber)\n      }\n    })\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      tx.receipt = receipt\n      tx.confirmedTime = now()\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\n\nexport interface SwapState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly [Field.INPUT]: {\n    readonly currencyId: string | undefined\n  }\n  readonly [Field.OUTPUT]: {\n    readonly currencyId: string | undefined\n  }\n  // the typed recipient address or ENS name, or null if swap should go to sender\n  readonly recipient: string | null\n}\n\nconst initialState: SwapState = {\n  independentField: Field.INPUT,\n  typedValue: '',\n  [Field.INPUT]: {\n    currencyId: '',\n  },\n  [Field.OUTPUT]: {\n    currencyId: '',\n  },\n  recipient: null,\n}\n\nexport default createReducer<SwapState>(initialState, (builder) =>\n  builder\n    .addCase(\n      replaceSwapState,\n      (state, { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId } }) => {\n        return {\n          [Field.INPUT]: {\n            currencyId: inputCurrencyId,\n          },\n          [Field.OUTPUT]: {\n            currencyId: outputCurrencyId,\n          },\n          independentField: field,\n          typedValue,\n          recipient,\n        }\n      },\n    )\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\n      if (currencyId === state[otherField].currencyId) {\n        // the case where we have to swap the order\n        return {\n          ...state,\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n          [field]: { currencyId },\n          [otherField]: { currencyId: state[field].currencyId },\n        }\n      }\n      // the normal case\n      return {\n        ...state,\n        [field]: { currencyId },\n      }\n    })\n    .addCase(switchCurrencies, (state) => {\n      return {\n        ...state,\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\n      }\n    })\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n      }\n    })\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\n      state.recipient = recipient\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, resetMintState, typeInput } from './actions'\n\nexport interface MintState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly otherTypedValue: string // for the case when there's no liquidity\n}\n\nconst initialState: MintState = {\n  independentField: Field.CURRENCY_A,\n  typedValue: '',\n  otherTypedValue: '',\n}\n\nexport default createReducer<MintState>(initialState, (builder) =>\n  builder\n    .addCase(resetMintState, () => initialState)\n    .addCase(typeInput, (state, { payload: { field, typedValue, noLiquidity } }) => {\n      if (noLiquidity) {\n        // they're typing into the field they've last typed in\n        if (field === state.independentField) {\n          return {\n            ...state,\n            independentField: field,\n            typedValue,\n          }\n        }\n        // they're typing into a new field, store the other value\n\n        return {\n          ...state,\n          independentField: field,\n          typedValue,\n          otherTypedValue: state.typedValue,\n        }\n      }\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n        otherTypedValue: '',\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\n// eslint-disable-next-line import/no-unresolved\nimport { TokenList } from '@uniswap/token-lists/dist/types'\nimport { DEFAULT_ACTIVE_LIST_URLS, UNSUPPORTED_LIST_URLS, DEFAULT_LIST_OF_LISTS } from '../../config/constants/lists'\n\nimport { updateVersion } from '../global/actions'\nimport { acceptListUpdate, addList, fetchTokenList, removeList, enableList, disableList } from './actions'\n\nexport interface ListsState {\n  readonly byUrl: {\n    readonly [url: string]: {\n      readonly current: TokenList | null\n      readonly pendingUpdate: TokenList | null\n      readonly loadingRequestId: string | null\n      readonly error: string | null\n    }\n  }\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\n  readonly lastInitializedDefaultListOfLists?: string[]\n\n  // currently active lists\n  readonly activeListUrls: string[] | undefined\n}\n\ntype ListState = ListsState['byUrl'][string]\n\nconst NEW_LIST_STATE: ListState = {\n  error: null,\n  current: null,\n  loadingRequestId: null,\n  pendingUpdate: null,\n}\n\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] }\n\nconst initialState: ListsState = {\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\n  byUrl: {\n    ...DEFAULT_LIST_OF_LISTS.concat(...UNSUPPORTED_LIST_URLS).reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\n      memo[listUrl] = NEW_LIST_STATE\n      return memo\n    }, {}),\n  },\n  activeListUrls: DEFAULT_ACTIVE_LIST_URLS,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\n      state.byUrl[url] = {\n        current: null,\n        pendingUpdate: null,\n        ...state.byUrl[url],\n        loadingRequestId: requestId,\n        error: null,\n      }\n    })\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\n      const current = state.byUrl[url]?.current\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId\n\n      // no-op if update does nothing\n      if (current) {\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version)\n\n        if (upgradeType === VersionUpgrade.NONE) return\n        if (loadingRequestId === null || loadingRequestId === requestId) {\n          state.byUrl[url] = {\n            ...state.byUrl[url],\n            loadingRequestId: null,\n            error: null,\n            current,\n            pendingUpdate: tokenList,\n          }\n        }\n      } else {\n        // activate if on default active\n        if (DEFAULT_ACTIVE_LIST_URLS.includes(url)) {\n          state.activeListUrls?.push(url)\n        }\n\n        state.byUrl[url] = {\n          ...state.byUrl[url],\n          loadingRequestId: null,\n          error: null,\n          current: tokenList,\n          pendingUpdate: null,\n        }\n      }\n    })\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\n        // no-op since it's not the latest request\n        return\n      }\n\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        loadingRequestId: null,\n        error: errorMessage,\n        current: null,\n        pendingUpdate: null,\n      }\n    })\n    .addCase(addList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n    })\n    .addCase(removeList, (state, { payload: url }) => {\n      if (state.byUrl[url]) {\n        delete state.byUrl[url]\n      }\n      // remove list from active urls if needed\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(enableList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n\n      if (state.activeListUrls && !state.activeListUrls.includes(url)) {\n        state.activeListUrls.push(url)\n      }\n\n      if (!state.activeListUrls) {\n        state.activeListUrls = [url]\n      }\n    })\n    .addCase(disableList, (state, { payload: url }) => {\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\n      if (!state.byUrl[url]?.pendingUpdate) {\n        throw new Error('accept list update called without pending update')\n      }\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        pendingUpdate: null,\n        current: state.byUrl[url].pendingUpdate,\n      }\n    })\n    .addCase(updateVersion, (state) => {\n      // state loaded from localStorage, but new lists have never been initialized\n      if (!state.lastInitializedDefaultListOfLists) {\n        state.byUrl = initialState.byUrl\n        state.activeListUrls = initialState.activeListUrls\n      } else if (state.lastInitializedDefaultListOfLists) {\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\n          (s, l) => s.add(l),\n          new Set(),\n        )\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\n\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\n          if (!lastInitializedSet.has(listUrl)) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n        })\n\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\n          if (!newListOfListsSet.has(listUrl)) {\n            delete state.byUrl[listUrl]\n          }\n        })\n      }\n\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\n\n      // if no active lists, activate defaults\n      if (!state.activeListUrls) {\n        state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS\n\n        // for each list on default list, initialize if needed\n        DEFAULT_ACTIVE_LIST_URLS.map((listUrl: string) => {\n          if (!state.byUrl[listUrl]) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n          return true\n        })\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, typeInput } from './actions'\n\nexport interface BurnState {\n  readonly independentField: Field\n  readonly typedValue: string\n}\n\nconst initialState: BurnState = {\n  independentField: Field.LIQUIDITY_PERCENT,\n  typedValue: '0',\n}\n\nexport default createReducer<BurnState>(initialState, (builder) =>\n  builder.addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n    return {\n      ...state,\n      independentField: field,\n      typedValue,\n    }\n  }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport {\n  addMulticallListeners,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  removeMulticallListeners,\n  toCallKey,\n  updateMulticallResults,\n} from './actions'\n\nexport interface MulticallState {\n  callListeners?: {\n    // on a per-chain basis\n    [chainId: number]: {\n      // stores for each call key the listeners' preferences\n      [callKey: string]: {\n        // stores how many listeners there are per each blocks per fetch preference\n        [blocksPerFetch: number]: number\n      }\n    }\n  }\n\n  callResults: {\n    [chainId: number]: {\n      [callKey: string]: {\n        data?: string | null\n        blockNumber?: number\n        fetchingBlockNumber?: number\n      }\n    }\n  }\n}\n\nconst initialState: MulticallState = {\n  callResults: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\n      const listeners: MulticallState['callListeners'] = state.callListeners\n        ? state.callListeners\n        : (state.callListeners = {})\n      listeners[chainId] = listeners[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\n      })\n    })\n    .addCase(\n      removeMulticallListeners,\n      (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\n        const listeners: MulticallState['callListeners'] = state.callListeners\n          ? state.callListeners\n          : (state.callListeners = {})\n\n        if (!listeners[chainId]) return\n        calls.forEach((call) => {\n          const callKey = toCallKey(call)\n          if (!listeners[chainId][callKey]) return\n          if (!listeners[chainId][callKey][blocksPerFetch]) return\n\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\n            delete listeners[chainId][callKey][blocksPerFetch]\n          } else {\n            listeners[chainId][callKey][blocksPerFetch]--\n          }\n        })\n      },\n    )\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) {\n          state.callResults[chainId][callKey] = {\n            fetchingBlockNumber,\n          }\n        } else {\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) return // only should be dispatched if we are already fetching\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\n          delete current.fetchingBlockNumber\n          current.data = null\n          current.blockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      Object.keys(results).forEach((callKey) => {\n        const current = state.callResults[chainId][callKey]\n        if ((current?.blockNumber ?? 0) > blockNumber) return\n        state.callResults[chainId][callKey] = {\n          data: results[callKey],\n          blockNumber,\n        }\n      })\n    }),\n)\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport { save, load } from 'redux-localstorage-simple'\nimport { useDispatch } from 'react-redux'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\nimport predictionsReducer from './predictions'\nimport profileReducer from './profile'\nimport teamsReducer from './teams'\nimport achievementsReducer from './achievements'\nimport blockReducer from './block'\nimport collectiblesReducer from './collectibles'\nimport votingReducer from './voting'\nimport lotteryReducer from './lottery'\nimport application from './application/reducer'\nimport { updateVersion } from './global/actions'\nimport user from './user/reducer'\nimport transactions from './transactions/reducer'\nimport swap from './swap/reducer'\nimport mint from './mint/reducer'\nimport lists from './lists/reducer'\nimport burn from './burn/reducer'\nimport multicall from './multicall/reducer'\n\nconst PERSISTED_KEYS: string[] = ['user', 'transactions', 'lists']\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    achievements: achievementsReducer,\n    block: blockReducer,\n    farms: farmsReducer,\n    pools: poolsReducer,\n    predictions: predictionsReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n    collectibles: collectiblesReducer,\n    voting: votingReducer,\n    lottery: lotteryReducer,\n\n    // Exchange\n    application,\n    user,\n    transactions,\n    swap,\n    mint,\n    burn,\n    multicall,\n    lists,\n  },\n  middleware: [...getDefaultMiddleware({ thunk: true }), save({ states: PERSISTED_KEYS })],\n  preloadedState: load({ states: PERSISTED_KEYS }),\n})\n\nstore.dispatch(updateVersion())\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch\nexport type AppState = ReturnType<typeof store.getState>\nexport const useAppDispatch = () => useDispatch()\n\nexport default store\n","import { ChainId } from '@pancakeswap/sdk'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 2\n\nexport const BASE_BSC_SCAN_URLS = {\n  [ChainId.MAINNET]: 'https://explorer.harmony.one',\n  // [ChainId.TESTNET]: 'https://testnet.bscscan.com',\n}\n\n// CAKE_PER_BLOCK details\n// 40 CAKE is minted per block\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\n// 10 CAKE per block goes to CAKE syrup pool\n// 9 CAKE per block goes to Yield farms and lottery\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// CAKE/Block in src/views/Home/components/CakeDataRow.tsx = 19 (40 - Amount sent to burn pool)\nexport const CAKE_PER_BLOCK = new BigNumber(1.5)\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR)\nexport const BASE_URL = 'https://harmony.mochiswap.io'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_URL}/add`\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_URL}/pool`\nexport const BASE_BSC_SCAN_URL = BASE_BSC_SCAN_URLS[ChainId.MAINNET]\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 500000\nexport const AUCTION_BIDDERS_TO_FETCH = 500\nexport const RECLAIM_AUCTIONS_TO_FETCH = 500\nexport const AUCTION_WHITELISTED_BIDDERS_TO_FETCH = 500\n","// const PANCAKE_EXTENDED = 'https://tokens.pancakeswap.finance/pancakeswap-extended.json'\n// const PANCAKE_TOP100 = 'https://tokens.pancakeswap.finance/pancakeswap-top-100.json'\nconst HASHPARTY = 'https://s3.us-west-1.amazonaws.com/tokens.mochiswap.io/mochiswap-harmony.tokenlist.json'\nexport const UNSUPPORTED_LIST_URLS: string[] = []\n\n// lower index == higher priority for token import\nexport const DEFAULT_LIST_OF_LISTS: string[] = [\n  HASHPARTY,\n  ...UNSUPPORTED_LIST_URLS, // need to load unsupported tokens as well\n]\n\n// default lists to be 'active' aka searched across\nexport const DEFAULT_ACTIVE_LIST_URLS: string[] = []\n","import { ChainId, Token } from '@pancakeswap/sdk'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { DEFAULT_LIST_OF_LISTS } from 'config/constants/lists'\nimport { AppState } from '../index'\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists/mochiswap-harmony.tokenlist.json'\nimport { UNSUPPORTED_LIST_URLS } from '../../config/constants/lists'\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/unsupported.tokenlist.json'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n// use ordering of default list of lists to assign priority\nfunction sortByListPriority(urlA: string, urlB: string) {\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1\n  if (first > second) return -1\n  return 0\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n\n  public readonly tags: TagInfo[]\n\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<\n  { [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }> }\n>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.MAINNET]: {},\n  // [ChainId.TESTNET]: {},\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map((tagId) => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list,\n          },\n        },\n      }\n    },\n    { ...EMPTY_LIST },\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null\n    readonly pendingUpdate: TokenList | null\n    readonly loadingRequestId: string | null\n    readonly error: string | null\n  }\n} {\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    [ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] },\n    // [ChainId.TESTNET]: { ...map1[ChainId.TESTNET], ...map2[ChainId.TESTNET] },\n  }\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\n  const lists = useAllLists()\n\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST\n\n    return (\n      urls\n        .slice()\n        // sort by priority so top priority goes last\n        .sort(sortByListPriority)\n        .reduce((allTokens, currentUrl) => {\n          const current = lists[currentUrl]?.current\n          if (!current) return allTokens\n          try {\n            const newTokens = Object.assign(listToTokenMap(current))\n            return combineMaps(allTokens, newTokens)\n          } catch (error) {\n            console.error('Could not show token list due to error', error)\n            return allTokens\n          }\n        }, EMPTY_LIST)\n    )\n  }, [lists, urls])\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url),\n  )\n}\n\nexport function useInactiveListUrls(): string[] {\n  const lists = useAllLists()\n  const allActiveListUrls = useActiveListUrls()\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeListUrls = useActiveListUrls()\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\n  return combineMaps(activeTokens, defaultTokenMap)\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  const allInactiveListUrls: string[] = useInactiveListUrls()\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList(): TokenAddressMap {\n  return listToTokenMap(DEFAULT_TOKEN_LIST)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\n\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\n\n  // format into one token address map\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls()\n  return Boolean(activeListUrls?.includes(url))\n}\n","import { Token } from '@pancakeswap/sdk'\nimport { parseUnits } from 'ethers/lib/utils'\nimport { SerializedToken } from '../actions'\n\nexport function serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }\n}\n\nexport function deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name,\n  )\n}\n\nexport enum GAS_PRICE {\n  default = '101',\n  fast = '110',\n  instant = '150',\n  testnet = '10',\n}\n\nexport const GAS_PRICE_GWEI = {\n  default: parseUnits(GAS_PRICE.default, 'gwei').toString(),\n  fast: parseUnits(GAS_PRICE.fast, 'gwei').toString(),\n  instant: parseUnits(GAS_PRICE.instant, 'gwei').toString(),\n  testnet: parseUnits(GAS_PRICE.testnet, 'gwei').toString(),\n}\n","import BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.stakingToken.address),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\n  try {\n    const sousContract = getSouschefV2Contract(sousId)\n    const stakingLimit = await sousContract.poolLimitPerUser()\n    return new BigNumber(stakingLimit.toString())\n  } catch (error) {\n    return BIG_ZERO\n  }\n}\n\nexport const fetchPoolsStakingLimits = async (\n  poolsWithStakingLimit: number[],\n): Promise<{ [key: string]: BigNumber }> => {\n  const validPools = poolsConfig\n    .filter((p) => p.stakingToken.symbol !== 'BNB' && !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\n  const stakingLimits = await Promise.all(stakingLimitPromises)\n\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\n    return {\n      ...accum,\n      [validPools[index].sousId]: stakingLimit,\n    }\n  }, {})\n}\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getMasterchefContract } from 'utils/contractHelpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst masterChefContract = getMasterchefContract()\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'allowance',\n    params: [account, getAddress(p.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await simpleRpcProvider.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance.toString()).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.userInfo('0', account)\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount.toString()).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.pendingMochi('0', account)\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward.toString()).toJSON() }\n}\n","import BigNumber from 'bignumber.js'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { multicallv2 } from 'utils/multicall'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport { getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nexport const fetchPublicVaultData = async () => {\n  try {\n    const calls = [\n      'getPricePerFullShare',\n      'totalShares',\n      'calculateHarvestCakeRewards',\n      'calculateTotalPendingCakeRewards',\n    ].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[sharePrice], [shares], [estimatedCakeBountyReward], [totalPendingCakeHarvest]] = await multicallv2(\n      cakeVaultAbi,\n      calls,\n    )\n\n    const totalSharesAsBigNumber = shares ? new BigNumber(shares.toString()) : BIG_ZERO\n    const sharePriceAsBigNumber = sharePrice ? new BigNumber(sharePrice.toString()) : BIG_ZERO\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\n    return {\n      totalShares: totalSharesAsBigNumber.toJSON(),\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward.toString()).toJSON(),\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      totalShares: null,\n      pricePerFullShare: null,\n      totalCakeInVault: null,\n      estimatedCakeBountyReward: null,\n      totalPendingCakeHarvest: null,\n    }\n  }\n}\n\nexport const fetchVaultFees = async () => {\n  try {\n    const calls = ['performanceFee', 'callFee', 'withdrawFee', 'withdrawFeePeriod'].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[performanceFee], [callFee], [withdrawalFee], [withdrawalFeePeriod]] = await multicallv2(cakeVaultAbi, calls)\n\n    return {\n      performanceFee: performanceFee.toNumber(),\n      callFee: callFee.toNumber(),\n      withdrawalFee: withdrawalFee.toNumber(),\n      withdrawalFeePeriod: withdrawalFeePeriod.toNumber(),\n    }\n  } catch (error) {\n    return {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    }\n  }\n}\n\nexport default fetchPublicVaultData\n","import BigNumber from 'bignumber.js'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nconst fetchVaultUser = async (account: string) => {\n  try {\n    const userContractResponse = await cakeVaultContract.userInfo(account)\n    // debugger; // eslint-disable-line no-debugger\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\n      lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null,\n    }\n  }\n}\n\nexport default fetchVaultUser\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { PoolsState, Pool, CakeVault, VaultFees, VaultUser, AppThunk } from 'state/types'\nimport { getPoolApr } from 'utils/apr'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getAddress } from 'utils/addressHelpers'\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\nimport fetchVaultUser from './fetchVaultUser'\nimport { getTokenPricesFromFarm } from './helpers'\n\nconst initialState: PoolsState = {\n  data: [...poolsConfig],\n  userDataLoaded: false,\n  cakeVault: {\n    totalShares: null,\n    pricePerFullShare: null,\n    totalCakeInVault: null,\n    estimatedCakeBountyReward: null,\n    totalPendingCakeHarvest: null,\n    fees: {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    },\n    userData: {\n      isLoading: true,\n      userShares: null,\n      cakeAtLastUserAction: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n    },\n  },\n}\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const prices = getTokenPricesFromFarm(getState().farms.data)\n  // debugger; // eslint-disable-line no-debugger\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\n\n    const stakingTokenAddress = pool.stakingToken.address ? getAddress(pool.stakingToken.address).toLowerCase() : null\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\n\n    const earningTokenAddress = pool.earningToken.address ? getAddress(pool.earningToken.address).toLowerCase() : null\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\n    \n    const apr = !isPoolFinished\n      ? getPoolApr(\n          stakingTokenPrice,\n          earningTokenPrice,\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\n          parseFloat(pool.tokenPerBlock),\n        )\n      : 0\n\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      stakingTokenPrice,\n      earningTokenPrice,\n      apr,\n      isFinished: isPoolFinished,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n  const stakingLimitData = poolsConfig.map((pool) => {\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\n      return { sousId: pool.sousId }\n    }\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\n    return {\n      sousId: pool.sousId,\n      stakingLimit: stakingLimit.toJSON(),\n    }\n  })\n\n  dispatch(setPoolsPublicData(stakingLimitData))\n}\n\nexport const fetchPoolsUserDataAsync =\n  (account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    const stakingTokenBalances = await fetchUserBalances(account)\n    const stakedBalances = await fetchUserStakeBalances(account)\n    const pendingRewards = await fetchUserPendingRewards(account)\n\n    const userData = poolsConfig.map((pool) => ({\n      sousId: pool.sousId,\n      allowance: allowances[pool.sousId],\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\n      stakedBalance: stakedBalances[pool.sousId],\n      pendingReward: pendingRewards[pool.sousId],\n    }))\n\n    dispatch(setPoolsUserData(userData))\n  }\n\nexport const updateUserAllowance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n  }\n\nexport const updateUserBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const tokenBalances = await fetchUserBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n  }\n\nexport const updateUserStakedBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const stakedBalances = await fetchUserStakeBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n  }\n\nexport const updateUserPendingReward =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const pendingRewards = await fetchUserPendingRewards(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n  }\n\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\n  const publicVaultInfo = await fetchPublicVaultData()\n  return publicVaultInfo\n})\n\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\n  const vaultFees = await fetchVaultFees()\n  return vaultFees\n})\n\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\n  'cakeVault/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchVaultUser(account)\n    return userData\n  },\n)\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n      state.userDataLoaded = true\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Vault public data that updates frequently\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\n    })\n    // Vault fees\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\n      const fees = action.payload\n      state.cakeVault = { ...state.cakeVault, fees }\n    })\n    // Vault user data\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.cakeVault = { ...state.cakeVault, userData }\n    })\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\nexport default PoolsSlice.reducer\n","import React from 'react'\nimport { HelpIcon, useTooltip, Box, BoxProps } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\ninterface Props extends BoxProps {\n  text: string | React.ReactNode\n}\n\nconst QuestionWrapper = styled.div`\n  :hover,\n  :focus {\n    opacity: 0.7;\n  }\n`\n\nconst QuestionHelper: React.FC<Props> = ({ text, ...props }) => {\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(text, { placement: 'right-end', trigger: 'hover' })\n\n  return (\n    <Box {...props}>\n      {tooltipVisible && tooltip}\n      <QuestionWrapper ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" width=\"16px\" />\n      </QuestionWrapper>\n    </Box>\n  )\n}\n\nexport default QuestionHelper\n","import { ActionCreatorWithPayload, createAction } from '@reduxjs/toolkit'\nimport { TokenList, Version } from '@uniswap/token-lists'\n\nexport const fetchTokenList: Readonly<{\n  pending: ActionCreatorWithPayload<{ url: string; requestId: string }>\n  fulfilled: ActionCreatorWithPayload<{ url: string; tokenList: TokenList; requestId: string }>\n  rejected: ActionCreatorWithPayload<{ url: string; errorMessage: string; requestId: string }>\n}> = {\n  pending: createAction('lists/fetchTokenList/pending'),\n  fulfilled: createAction('lists/fetchTokenList/fulfilled'),\n  rejected: createAction('lists/fetchTokenList/rejected'),\n}\n// add and remove from list options\nexport const addList = createAction<string>('lists/addList')\nexport const removeList = createAction<string>('lists/removeList')\n\n// select which lists to search across from loaded lists\nexport const enableList = createAction<string>('lists/enableList')\nexport const disableList = createAction<string>('lists/disableList')\n\n// versioning\nexport const acceptListUpdate = createAction<string>('lists/acceptListUpdate')\nexport const rejectVersionUpdate = createAction<Version>('lists/rejectVersionUpdate')\n","import { CurrencyAmount, Fraction, JSBI, Percent, TokenAmount, Trade } from '@pancakeswap/sdk'\nimport {\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_LOW,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n} from '../config/constants'\n\nimport { Field } from '../state/swap/actions'\nimport { basisPointsToPercent } from './index'\n\nconst BASE_FEE = new Percent(JSBI.BigInt(25), JSBI.BigInt(10000))\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\n\n// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(trade?: Trade | null): {\n  priceImpactWithoutFee: Percent | undefined\n  realizedLPFee: CurrencyAmount | undefined | null\n} {\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade\n    ? undefined\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce<Fraction>(\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n          ONE_HUNDRED_PERCENT,\n        ),\n      )\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\n    : undefined\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    (trade.inputAmount instanceof TokenAmount\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\n\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\n}\n\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(\n  trade: Trade | undefined,\n  allowedSlippage: number,\n): { [field in Field]?: CurrencyAmount } {\n  const pct = basisPointsToPercent(allowedSlippage)\n  return {\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\n  }\n}\n\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\n  return 0\n}\n\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\n  if (!trade) {\n    return ''\n  }\n  return inverted\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\n        trade.outputAmount.currency.symbol\n      }`\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\n        trade.inputAmount.currency.symbol\n      }`\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface Call {\n  address: string\n  callData: string\n}\n\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/\nexport function toCallKey(call: Call): string {\n  if (!ADDRESS_REGEX.test(call.address)) {\n    throw new Error(`Invalid address: ${call.address}`)\n  }\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\n    throw new Error(`Invalid hex: ${call.callData}`)\n  }\n  return `${call.address}-${call.callData}`\n}\n\nexport function parseCallKey(callKey: string): Call {\n  const pcs = callKey.split('-')\n  if (pcs.length !== 2) {\n    throw new Error(`Invalid call key: ${callKey}`)\n  }\n  return {\n    address: pcs[0],\n    callData: pcs[1],\n  }\n}\n\nexport interface ListenerOptions {\n  // how often this data should be fetched, by default 1\n  readonly blocksPerFetch?: number\n}\n\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/addMulticallListeners',\n)\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/removeMulticallListeners',\n)\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\n  'multicall/fetchingMulticallResults',\n)\nexport const errorFetchingMulticallResults = createAction<{\n  chainId: number\n  calls: Call[]\n  fetchingBlockNumber: number\n}>('multicall/errorFetchingMulticallResults')\nexport const updateMulticallResults = createAction<{\n  chainId: number\n  blockNumber: number\n  results: {\n    [callKey: string]: string | null\n  }\n}>('multicall/updateMulticallResults')\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_PREDICTION } from 'config/constants/endpoints'\nimport { ethers } from 'ethers'\nimport {\n  Bet,\n  LedgerData,\n  BetPosition,\n  PredictionsState,\n  PredictionStatus,\n  ReduxNodeLedger,\n  ReduxNodeRound,\n  Round,\n  RoundData,\n} from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport { getPredictionsAddress } from 'utils/addressHelpers'\nimport { PredictionsClaimableResponse, PredictionsLedgerResponse, PredictionsRoundsResponse } from 'utils/types'\nimport {\n  BetResponse,\n  getRoundBaseFields,\n  getBetBaseFields,\n  getUserBaseFields,\n  RoundResponse,\n  TotalWonMarketResponse,\n  TotalWonRoundResponse,\n} from './queries'\n\nexport enum Result {\n  WIN = 'win',\n  LOSE = 'lose',\n  CANCELED = 'canceled',\n  LIVE = 'live',\n}\n\nexport const numberOrNull = (value: string) => {\n  if (value === null) {\n    return null\n  }\n\n  const valueNum = Number(value)\n  return Number.isNaN(valueNum) ? null : valueNum\n}\n\nexport const transformBetResponse = (betResponse: BetResponse): Bet => {\n  const bet = {\n    id: betResponse.id,\n    hash: betResponse.hash,\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\n    claimed: betResponse.claimed,\n    claimedHash: betResponse.claimedHash,\n    user: {\n      id: betResponse.user.id,\n      address: betResponse.user.address,\n      block: numberOrNull(betResponse.user.block),\n      totalBets: numberOrNull(betResponse.user.totalBets),\n      totalBNB: numberOrNull(betResponse.user.totalBNB),\n    },\n  } as Bet\n\n  if (betResponse.round) {\n    bet.round = transformRoundResponse(betResponse.round)\n  }\n\n  return bet\n}\n\nexport const transformRoundResponse = (roundResponse: RoundResponse): Round => {\n  const {\n    id,\n    epoch,\n    failed,\n    startBlock,\n    startAt,\n    lockAt,\n    lockBlock,\n    lockPrice,\n    endBlock,\n    closePrice,\n    totalBets,\n    totalAmount,\n    bullBets,\n    bearBets,\n    bearAmount,\n    bullAmount,\n    position,\n    bets = [],\n  } = roundResponse\n\n  const getRoundPosition = (positionResponse: string) => {\n    if (positionResponse === 'Bull') {\n      return BetPosition.BULL\n    }\n\n    if (positionResponse === 'Bear') {\n      return BetPosition.BEAR\n    }\n\n    return null\n  }\n\n  return {\n    id,\n    failed,\n    epoch: numberOrNull(epoch),\n    startBlock: numberOrNull(startBlock),\n    startAt: numberOrNull(startAt),\n    lockAt: numberOrNull(lockAt),\n    lockBlock: numberOrNull(lockBlock),\n    lockPrice: lockPrice ? parseFloat(lockPrice) : null,\n    endBlock: numberOrNull(endBlock),\n    closePrice: closePrice ? parseFloat(closePrice) : null,\n    totalBets: numberOrNull(totalBets),\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\n    bullBets: numberOrNull(bullBets),\n    bearBets: numberOrNull(bearBets),\n    bearAmount: numberOrNull(bearAmount),\n    bullAmount: numberOrNull(bullAmount),\n    position: getRoundPosition(position),\n    bets: bets.map(transformBetResponse),\n  }\n}\n\nexport const transformTotalWonResponse = (\n  marketResponse: TotalWonMarketResponse,\n  roundResponse: TotalWonRoundResponse[],\n): number => {\n  const houseRounds = roundResponse.reduce((accum, round) => {\n    return accum + (round.totalAmount ? parseFloat(round.totalAmount) : 0)\n  }, 0)\n\n  const totalBNB = marketResponse.totalBNB ? parseFloat(marketResponse.totalBNB) : 0\n  const totalBNBTreasury = marketResponse.totalBNBTreasury ? parseFloat(marketResponse.totalBNBTreasury) : 0\n\n  return Math.max(totalBNB - (totalBNBTreasury + houseRounds), 0)\n}\n\nexport const getRoundResult = (bet: Bet, currentEpoch: number): Result => {\n  const { round } = bet\n  if (round.failed) {\n    return Result.CANCELED\n  }\n\n  if (round.epoch >= currentEpoch - 1) {\n    return Result.LIVE\n  }\n  const roundResultPosition = round.closePrice > round.lockPrice ? BetPosition.BULL : BetPosition.BEAR\n\n  return bet.position === roundResultPosition ? Result.WIN : Result.LOSE\n}\n\n/**\n * Given a bet object, check if it is eligible to be claimed or refunded\n */\nexport const getCanClaim = (bet: Bet) => {\n  return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true)\n}\n\n/**\n * Returns only bets where the user has won.\n * This is necessary because the API currently cannot distinguish between an uncliamed bet that has won or lost\n */\nexport const getUnclaimedWinningBets = (bets: Bet[]): Bet[] => {\n  return bets.filter(getCanClaim)\n}\n\nexport const getTotalWon = async (): Promise<number> => {\n  const response = (await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getTotalWonData($position: String) {\n        market(id: 1) {\n          totalBNB\n          totalBNBTreasury\n        }\n        rounds(where: { position: $position }) {\n          totalAmount\n        }\n      }\n    `,\n    { position: BetPosition.HOUSE },\n  )) as { market: TotalWonMarketResponse; rounds: TotalWonRoundResponse[] }\n\n  return transformTotalWonResponse(response.market, response.rounds)\n}\n\ntype BetHistoryWhereClause = Record<string, string | number | boolean | string[]>\n\nexport const getBetHistory = async (\n  where: BetHistoryWhereClause = {},\n  first = 1000,\n  skip = 0,\n): Promise<BetResponse[]> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\n        bets(first: $first, skip: $skip, where: $where, order: createdAt, orderDirection: desc) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.bets\n}\n\nexport const getBet = async (betId: string): Promise<BetResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBet($id: ID!) {\n        bet(id: $id) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n  `,\n    {\n      id: betId.toLowerCase(),\n    },\n  )\n  return response.bet\n}\n\n// V2 REFACTOR\nexport const getLedgerData = async (account: string, epochs: number[]) => {\n  const address = getPredictionsAddress()\n  const ledgerCalls = epochs.map((epoch) => ({\n    address,\n    name: 'ledger',\n    params: [epoch, account],\n  }))\n  const response = await multicallv2<PredictionsLedgerResponse[]>(predictionsAbi, ledgerCalls)\n  return response\n}\n\nexport const getClaimStatuses = async (\n  account: string,\n  epochs: number[],\n): Promise<PredictionsState['claimableStatuses']> => {\n  const address = getPredictionsAddress()\n  const claimableCalls = epochs.map((epoch) => ({\n    address,\n    name: 'claimable',\n    params: [epoch, account],\n  }))\n  const claimableResponses = await multicallv2<[PredictionsClaimableResponse][]>(predictionsAbi, claimableCalls)\n\n  // \"claimable\" currently has a bug where it returns true on Bull bets even if the wallet did not interact with the round\n  // To get around this temporarily we check the ledger status as well to confirm that it is claimable\n  // This can be removed in Predictions V2\n  const ledgerResponses = await getLedgerData(account, epochs)\n\n  return claimableResponses.reduce((accum, claimableResponse, index) => {\n    const { amount, claimed } = ledgerResponses[index]\n    const epoch = epochs[index]\n    const [claimable] = claimableResponse\n\n    return {\n      ...accum,\n      [epoch]: claimable && amount.gt(0) && !claimed,\n    }\n  }, {})\n}\n\nexport type MarketData = Pick<\n  PredictionsState,\n  'status' | 'currentEpoch' | 'intervalBlocks' | 'bufferBlocks' | 'minBetAmount' | 'rewardRate'\n>\nexport const getPredictionData = async (): Promise<MarketData> => {\n  const address = getPredictionsAddress()\n  const staticCalls = ['currentEpoch', 'intervalBlocks', 'minBetAmount', 'paused', 'bufferBlocks', 'rewardRate'].map(\n    (method) => ({\n      address,\n      name: method,\n    }),\n  )\n  const [[currentEpoch], [intervalBlocks], [minBetAmount], [paused], [bufferBlocks], [rewardRate]] = await multicallv2(\n    predictionsAbi,\n    staticCalls,\n  )\n\n  return {\n    status: paused ? PredictionStatus.PAUSED : PredictionStatus.LIVE,\n    currentEpoch: currentEpoch.toNumber(),\n    intervalBlocks: intervalBlocks.toNumber(),\n    bufferBlocks: bufferBlocks.toNumber(),\n    minBetAmount: minBetAmount.toString(),\n    rewardRate: rewardRate.toNumber(),\n  }\n}\n\nexport const getRoundsData = async (epochs: number[]): Promise<PredictionsRoundsResponse[]> => {\n  const address = getPredictionsAddress()\n  const calls = epochs.map((epoch) => ({\n    address,\n    name: 'rounds',\n    params: [epoch],\n  }))\n  const response = await multicallv2<PredictionsRoundsResponse[]>(predictionsAbi, calls)\n  return response\n}\n\nexport const makeFutureRoundResponse = (epoch: number, startBlock: number): ReduxNodeRound => {\n  return {\n    epoch,\n    startBlock,\n    lockBlock: null,\n    endBlock: null,\n    lockPrice: null,\n    closePrice: null,\n    totalAmount: ethers.BigNumber.from(0).toJSON(),\n    bullAmount: ethers.BigNumber.from(0).toJSON(),\n    bearAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardBaseCalAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardAmount: ethers.BigNumber.from(0).toJSON(),\n    oracleCalled: false,\n  }\n}\n\nexport const makeRoundData = (rounds: ReduxNodeRound[]): RoundData => {\n  return rounds.reduce((accum, round) => {\n    return {\n      ...accum,\n      [round.epoch.toString()]: round,\n    }\n  }, {})\n}\n\nexport const serializePredictionsLedgerResponse = (ledgerResponse: PredictionsLedgerResponse): ReduxNodeLedger => ({\n  position: ledgerResponse.position === 0 ? BetPosition.BULL : BetPosition.BEAR,\n  amount: ledgerResponse.amount.toJSON(),\n  claimed: ledgerResponse.claimed,\n})\n\nexport const makeLedgerData = (account: string, ledgers: PredictionsLedgerResponse[], epochs: number[]): LedgerData => {\n  return ledgers.reduce((accum, ledgerResponse, index) => {\n    if (!ledgerResponse) {\n      return accum\n    }\n\n    // If the amount is zero that means the user did not bet\n    if (ledgerResponse.amount.eq(0)) {\n      return accum\n    }\n\n    const epoch = epochs[index].toString()\n\n    return {\n      ...accum,\n      [account]: {\n        ...accum[account],\n        [epoch]: serializePredictionsLedgerResponse(ledgerResponse),\n      },\n    }\n  }, {})\n}\n\n/**\n * Serializes the return from the \"rounds\" call for redux\n */\nexport const serializePredictionsRoundsResponse = (response: PredictionsRoundsResponse): ReduxNodeRound => {\n  const {\n    epoch,\n    startBlock,\n    lockBlock,\n    endBlock,\n    lockPrice,\n    closePrice,\n    totalAmount,\n    bullAmount,\n    bearAmount,\n    rewardAmount,\n    rewardBaseCalAmount,\n    oracleCalled,\n  } = response\n\n  return {\n    epoch: epoch.toNumber(),\n    startBlock: startBlock.toNumber(),\n    lockBlock: lockBlock.toNumber(),\n    endBlock: endBlock.toNumber(),\n    lockPrice: lockPrice.eq(0) ? null : lockPrice.toJSON(),\n    closePrice: closePrice.eq(0) ? null : closePrice.toJSON(),\n    totalAmount: totalAmount.toJSON(),\n    bullAmount: bullAmount.toJSON(),\n    bearAmount: bearAmount.toJSON(),\n    rewardAmount: rewardAmount.toJSON(),\n    rewardBaseCalAmount: rewardBaseCalAmount.toJSON(),\n    oracleCalled,\n  }\n}\n\n/**\n * Parse serialized values back into ethers.BigNumber\n * ethers.BigNumber values are stored with the \"toJSJON()\" method, e.g  { type: \"BigNumber\", hex: string }\n */\nexport const parseBigNumberObj = <T = Record<string, any>, K = Record<string, any>>(data: T): K => {\n  return Object.keys(data).reduce((accum, key) => {\n    const value = data[key]\n\n    if (value && value?.type === 'BigNumber') {\n      return {\n        ...accum,\n        [key]: ethers.BigNumber.from(value),\n      }\n    }\n\n    return {\n      ...accum,\n      [key]: value,\n    }\n  }, {}) as K\n}\n","export interface UserResponse {\n  id: string\n  address: string\n  block: string\n  totalBets: string\n  totalBNB: string\n  bets?: BetResponse[]\n}\n\nexport interface BetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  claimedHash: string\n  user?: UserResponse\n  round?: RoundResponse\n}\n\nexport interface HistoricalBetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  user?: UserResponse\n  round: {\n    id: string\n    epoch: string\n  }\n}\n\nexport interface RoundResponse {\n  id: string\n  epoch: string\n  failed: boolean\n  startBlock: string\n  startAt: string\n  lockAt: string\n  lockBlock: string\n  lockPrice: string\n  endBlock: string\n  closePrice: string\n  totalBets: string\n  totalAmount: string\n  bearBets: string\n  bullBets: string\n  bearAmount: string\n  bullAmount: string\n  position: string\n  bets: BetResponse[]\n}\n\nexport interface TotalWonMarketResponse {\n  totalBNB: string\n  totalBNBTreasury: string\n}\n\nexport interface TotalWonRoundResponse {\n  totalAmount: string\n}\n\n/**\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\n */\nexport const getRoundBaseFields = () => `\n  id\n  epoch\n  failed\n  startAt\n  startBlock\n  lockAt\n  lockBlock\n  lockPrice\n  endAt\n  endBlock\n  closePrice\n  totalBets\n  totalAmount\n  bullBets\n  bullAmount\n  bearBets\n  bearAmount\n  position\n`\n\nexport const getBetBaseFields = () => `\n  id\n  hash  \n  amount\n  position\n  claimed\n  claimedHash\n`\n\nexport const getUserBaseFields = () => `\n  id\n  address\n  block\n  totalBets\n  totalBNB\n`\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\n\nconst useTheme = () => {\n  const [isDark, toggleTheme] = useThemeManager()\n  const theme = useContext(StyledThemeContext)\n  return { isDark, theme, toggleTheme }\n}\n\nexport default useTheme\n","import tokens from './tokens'\nimport { PoolConfig, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  {\n    sousId: 0,\n    stakingToken: tokens.hmochi,\n    earningToken: tokens.hmochi,\n    contractAddress: {\n      1666600000: '0xD0Cb3E55449646c9735D53E83EEA5Eb7e97A52Dc', // main chef\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '1',\n    sortOrder: 1,\n    isFinished: false,\n  },\n]\n\nexport default pools\n","import { useContext } from 'react'\nimport { ToastsContext } from 'contexts/ToastsContext'\n\nconst useToast = () => {\n  const toastContext = useContext(ToastsContext)\n\n  if (toastContext === undefined) {\n    throw new Error('Toasts context undefined')\n  }\n\n  return toastContext\n}\n\nexport default useToast\n","import { ethers } from 'ethers'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\n\nexport const simpleRpcProvider = new ethers.providers.JsonRpcProvider(RPC_URL)\n\nexport default null\n","import { useEffect, useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { farmsConfig } from 'config/constants'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync, nonArchivedFarms } from '.'\nimport { State, Farm, FarmsState } from '../types'\n\nexport const usePollFarmsData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const { account } = useWeb3React()\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n    dispatch(fetchFarmsPublicDataAsync(pids))\n    if (account) {\n      dispatch(fetchFarmUserDataAsync({ account, pids }))\n    }\n  }, [includeArchive, dispatch, slowRefresh, account])\n}\n\n/**\n * Fetches the \"core\" farm data used globally\n * 4 = CAKE-BNB LP // MOCHI-BNB\n * 7 = BUSD-BNB LP // \n */\nexport const usePollCoreFarmData = () => {\n  const dispatch = useAppDispatch()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync([1,2,3,4]))\n  }, [dispatch, fastRefresh])\n}\n\nexport const useFarms = (): FarmsState => {\n  const farms = useSelector((state: State) => state.farms)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromLpSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\n  }\n}\n\n// Return the base token price for a farm, from a given pid\nexport const useBusdPriceFromPid = (pid: number): BigNumber => {\n  const farm = useFarmFromPid(pid)\n  return farm && new BigNumber(farm.token.busdPrice)\n}\n\nexport const useLpTokenPrice = (symbol: string) => {\n  const farm = useFarmFromLpSymbol(symbol)\n  const farmTokenPriceInUsd = useBusdPriceFromPid(farm.pid)\n  let lpTokenPrice = BIG_ZERO\n\n  if (farm.lpTotalSupply && farm.lpTotalInQuoteToken) {\n    // Total value of base token in LP\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\n    // Double it to get overall value in LP\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\n    // Divide total value of all tokens, by the number of LP tokens\n    const totalLpTokens = getBalanceAmount(new BigNumber(farm.lpTotalSupply))\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\n  }\n\n  return lpTokenPrice\n}\n\n// /!\\ Deprecated , use the BUSD hook in /hooks\nexport const usePriceBnbBusd = (): BigNumber => {\n  const bnbBusdFarm = useFarmFromPid(3)\n  return new BigNumber(bnbBusdFarm.quoteToken.busdPrice)\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(1)\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\n\n","import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport ERC20_INTERFACE from 'config/abi/erc20'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { useMulticallContract } from 'hooks/useContract'\nimport { isAddress } from 'utils'\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\n\n/**\n * Returns a map of the given addresses to their eventually consistent BNB balances.\n */\nexport function useBNBBalances(uncheckedAddresses?: (string | undefined)[]): {\n  [address: string]: CurrencyAmount | undefined\n} {\n  const multicallContract = useMulticallContract()\n\n  const addresses: string[] = useMemo(\n    () =>\n      uncheckedAddresses\n        ? uncheckedAddresses\n            .map(isAddress)\n            .filter((a): a is string => a !== false)\n            .sort()\n        : [],\n    [uncheckedAddresses],\n  )\n\n  const results = useSingleContractMultipleData(\n    multicallContract,\n    'getEthBalance',\n    addresses.map((address) => [address]),\n  )\n\n  return useMemo(\n    () =>\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\n        const value = results?.[i]?.result?.[0]\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\n        return memo\n      }, {}),\n    [addresses, results],\n  )\n}\n\n/**\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\n */\nexport function useTokenBalancesWithLoadingIndicator(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\n  const validatedTokens: Token[] = useMemo(\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\n    [tokens],\n  )\n\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\n\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\n\n  const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances])\n\n  return [\n    useMemo(\n      () =>\n        address && validatedTokens.length > 0\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\n              const value = balances?.[i]?.result?.[0]\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\n              if (amount) {\n                memo[token.address] = new TokenAmount(token, amount)\n              }\n              return memo\n            }, {})\n          : {},\n      [address, validatedTokens, balances],\n    ),\n    anyLoading,\n  ]\n}\n\nexport function useTokenBalances(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): { [tokenAddress: string]: TokenAmount | undefined } {\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\n}\n\n// get the balance for a single token/account combo\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\n  const tokenBalances = useTokenBalances(account, [token])\n  if (!token) return undefined\n  return tokenBalances[token.address]\n}\n\nexport function useCurrencyBalances(\n  account?: string,\n  currencies?: (Currency | undefined)[],\n): (CurrencyAmount | undefined)[] {\n  const tokens = useMemo(\n    () => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [],\n    [currencies],\n  )\n\n  const tokenBalances = useTokenBalances(account, tokens)\n  const containsBNB: boolean = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\n  const ethBalance = useBNBBalances(containsBNB ? [account] : [])\n\n  return useMemo(\n    () =>\n      currencies?.map((currency) => {\n        if (!account || !currency) return undefined\n        if (currency instanceof Token) return tokenBalances[currency.address]\n        if (currency === ETHER) return ethBalance[account]\n        return undefined\n      }) ?? [],\n    [account, currencies, ethBalance, tokenBalances],\n  )\n}\n\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\n  return useCurrencyBalances(account, [currency])[0]\n}\n\n// mimics useAllBalances\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\n  const { account } = useWeb3React()\n  const allTokens = useAllTokens()\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\n  return balances ?? {}\n}\n","export const GRAPH_API_PROFILE = process.env.REACT_APP_GRAPH_API_PROFILE\nexport const GRAPH_API_PREDICTION = process.env.REACT_APP_GRAPH_API_PREDICTION\nexport const GRAPH_API_LOTTERY = process.env.REACT_APP_GRAPH_API_LOTTERY\nexport const SNAPSHOT_VOTING_API = process.env.REACT_APP_SNAPSHOT_VOTING_API\nexport const SNAPSHOT_BASE_URL = process.env.REACT_APP_SNAPSHOT_BASE_URL\nexport const SNAPSHOT_API = `${SNAPSHOT_BASE_URL}/graphql`\nexport const SNAPSHOT_HUB_API = `${SNAPSHOT_BASE_URL}/api/message`\nexport const BITQUERY_API = 'https://graphql.bitquery.io'\n","import { TokenAmount, Pair, Currency } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { Interface } from '@ethersproject/abi'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const { chainId } = useActiveWeb3React()\n\n  const tokens = useMemo(\n    () =>\n      currencies.map(([currencyA, currencyB]) => [\n        wrappedCurrency(currencyA, chainId),\n        wrappedCurrency(currencyB, chainId),\n      ]),\n    [chainId, currencies],\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\n      }),\n    [tokens],\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  return usePairs([[tokenA, tokenB]])[0]\n}\n","import React from 'react'\nimport { Button, useWalletModal } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ConnectWalletButton = (props) => {\n  const { t } = useTranslation()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {t('Connect Wallet')}\n    </Button>\n  )\n}\n\nexport default ConnectWalletButton\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch, AppState } from '../index'\nimport { addTransaction } from './actions'\nimport { TransactionDetails } from './reducer'\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: {\n    summary?: string\n    approval?: { tokenAddress: string; spender: string }\n    claim?: { recipient: string }\n  },\n) => void {\n  const { chainId, account } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      {\n        summary,\n        approval,\n        claim,\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\n    ) => {\n      if (!account) return\n      if (!chainId) return\n\n      const { hash } = response\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }))\n    },\n    [dispatch, chainId, account],\n  )\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useActiveWeb3React()\n\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  return chainId ? state[chainId] ?? {} : {}\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions()\n\n  if (!transactionHash || !transactions[transactionHash]) return false\n\n  return !transactions[transactionHash].receipt\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions()\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash]\n        if (!tx) return false\n        if (tx.receipt) {\n          return false\n        }\n        const { approval } = tx\n        if (!approval) return false\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\n      }),\n    [allTransactions, spender, tokenAddress],\n  )\n}\n","import { createAction } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport const addTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  from: string\n  approval?: { tokenAddress: string; spender: string }\n  claim?: { recipient: string }\n  summary?: string\n}>('transactions/addTransaction')\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\nexport const finalizeTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  receipt: SerializableTransactionReceipt\n}>('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  blockNumber: number\n}>('transactions/checkedTransaction')\n","import { ChainId } from '@pancakeswap/sdk'\nimport store from 'state'\nimport { GAS_PRICE_GWEI } from 'state/user/hooks/helpers'\n\n/**\n * Function to return gasPrice outwith a react component\n */\nconst getGasPrice = (): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  const state = store.getState()\n  const userGas = state.user.gasPrice || GAS_PRICE_GWEI.default\n  return chainId === ChainId.MAINNET.toString() ? userGas : GAS_PRICE_GWEI.testnet\n}\n\nexport default getGasPrice\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst Card = styled(Box)<{\n  width?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  border-radius: 16px;\n  padding: 1.25rem;\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n  background-color: ${({ theme }) => theme.colors.background};\n`\nexport default Card\n\nexport const LightCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.background};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nexport const LightGreyCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport const GreyCard = styled(Card)`\n  background-color: ${({ theme }) => theme.colors.dropdown};\n`\n","// 1 day, 7 days, 30 days, 1 year, 5 years\nconst DAYS_TO_CALCULATE_AGAINST = [1, 7, 30, 365, 1825]\n\n/**\n *\n * @param principalInUSD - amount user wants to invest in USD\n * @param apr - farm or pool apr as percentage. If its farm APR its only cake rewards APR without LP rewards APR\n * @param earningTokenPrice - price of reward token\n * @param compoundFrequency - how many compounds per 1 day, e.g. 1 = one per day, 0.142857142 - once per week\n * @param performanceFee - performance fee as percentage\n * @returns an array of token values earned as interest, with each element representing interest earned over a different period of time (DAYS_TO_CALCULATE_AGAINST)\n */\nexport const getInterestBreakdown = ({\n  principalInUSD,\n  apr,\n  earningTokenPrice,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}: {\n  principalInUSD: number\n  apr: number\n  earningTokenPrice: number\n  compoundFrequency?: number\n  performanceFee?: number\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  const aprAsDecimal = apr / 100\n\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  // and also cause rounding errors\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\n  const roundingDecimalsNew = isHighValueToken ? 5 : 3\n\n  return DAYS_TO_CALCULATE_AGAINST.map((days) => {\n    const daysAsDecimalOfYear = days / 365\n    // Calculate the starting TOKEN balance with a dollar balance of principalInUSD.\n    const principal = principalInUSD / earningTokenPrice\n    let interestEarned = principal * aprAsDecimal * (days / 365)\n    if (timesCompounded !== 0) {\n      // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n      const accruedAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n      // To get the TOKEN amount earned, deduct the amount after compounding (accruedAmount) from the starting TOKEN balance (principal)\n      interestEarned = accruedAmount - principal\n      if (performanceFee) {\n        const performanceFeeAsDecimal = performanceFee / 100\n        const perfomanceFeeAsAmount = interestEarned * performanceFeeAsDecimal\n        interestEarned -= perfomanceFeeAsAmount\n      }\n    }\n    return parseFloat(interestEarned.toFixed(roundingDecimalsNew))\n  })\n}\n\n/**\n * @param interest how much USD amount you aim to make\n * @param apr APR of farm/pool\n * @param compoundingFrequency how many compounds per 1 day, e.g. 1 = one per day, 0.142857142 - once per week\n * @returns an array of principal values needed to reach target interest, with each element representing principal needed for a different period of time (DAYS_TO_CALCULATE_AGAINST)\n */\nexport const getPrincipalForInterest = (\n  interest: number,\n  apr: number,\n  compoundingFrequency: number,\n  performanceFee = 0,\n) => {\n  return DAYS_TO_CALCULATE_AGAINST.map((days) => {\n    const apyAsDecimal = getApy(apr, compoundingFrequency, days, performanceFee)\n    // console.log('inside', interest, apyAsDecimal)\n    // const apyAsBN = new BigNumber(apyAsDecimal).decimalPlaces(6, BigNumber.ROUND_DOWN).toNumber()\n    return parseFloat((interest / apyAsDecimal).toFixed(2))\n  })\n}\n\n/**\n * Given APR returns APY\n * @param apr APR as percentage\n * @param compoundFrequency how many compounds per day\n * @param days if other than 365 adjusts (A)PY for period less than a year\n * @param performanceFee performance fee as percentage\n * @returns APY as decimal\n */\nexport const getApy = (apr: number, compoundFrequency = 1, days = 365, performanceFee = 0) => {\n  const daysAsDecimalOfYear = days / 365\n  const aprAsDecimal = apr / 100\n  const timesCompounded = 365 * compoundFrequency\n  let apyAsDecimal = (apr / 100) * daysAsDecimalOfYear\n  if (timesCompounded > 0) {\n    apyAsDecimal = (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear) - 1\n  }\n  if (performanceFee) {\n    const performanceFeeAsDecimal = performanceFee / 100\n    const takenAsPerformanceFee = apyAsDecimal * performanceFeeAsDecimal\n    apyAsDecimal -= takenAsPerformanceFee\n  }\n  return apyAsDecimal\n}\n\nexport const getRoi = ({ amountEarned, amountInvested }: { amountEarned: number; amountInvested: number }) => {\n  if (amountInvested === 0) {\n    return 0\n  }\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage\n}\n","import { Language } from '@pancakeswap/uikit'\n\nexport const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\nexport const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\nexport const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\nexport const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\nexport const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\nexport const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\nexport const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\nexport const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\nexport const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\nexport const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\nexport const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\nexport const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\nexport const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\nexport const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\nexport const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\nexport const PL: Language = { locale: 'pl-PL', language: 'Polski', code: 'pl' }\nexport const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\nexport const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\nexport const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\nexport const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\nexport const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\nexport const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\nexport const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\nexport const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\nexport const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\nexport const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\n\nexport const languages = {\n  'ar-SA': AR,\n  'bn-BD': BN,\n  'en-US': EN,\n  'de-DE': DE,\n  'el-GR': EL,\n  'es-ES': ESES,\n  'fi-FI': FI,\n  'fil-PH': FIL,\n  'fr-FR': FR,\n  'hi-IN': HI,\n  'hu-HU': HU,\n  'id-ID': ID,\n  'it-IT': IT,\n  'ja-JP': JA,\n  'ko-KR': KO,\n  'nl-NL': NL,\n  'pl-PL': PL,\n  'pt-BR': PTBR,\n  'pt-PT': PTPT,\n  'ro-RO': RO,\n  'ru-RU': RU,\n  'sv-SE': SVSE,\n  'ta-IN': TA,\n  'tr-TR': TR,\n  'uk-UA': UK,\n  'vi-VN': VI,\n  'zh-CN': ZHCN,\n  'zh-TW': ZHTW,\n}\n\nexport const languageList = Object.values(languages)\n","import { parseUnits } from '@ethersproject/units'\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from '@pancakeswap/sdk'\nimport { ParsedQs } from 'qs'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useENS from 'hooks/ENS/useENS'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrency } from 'hooks/Tokens'\nimport { useTradeExactIn, useTradeExactOut } from 'hooks/Trades'\nimport useParsedQueryString from 'hooks/useParsedQueryString'\nimport { useTranslation } from 'contexts/Localization'\nimport { isAddress } from 'utils'\nimport { computeSlippageAdjustedAmounts } from 'utils/prices'\nimport { AppDispatch, AppState } from '../index'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\nimport { SwapState } from './reducer'\nimport { useUserSlippageTolerance } from '../user/hooks'\n\nexport function useSwapState(): AppState['swap'] {\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\n}\n\nexport function useSwapActionHandlers(): {\n  onCurrencySelection: (field: Field, currency: Currency) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRecipient: (recipient: string | null) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'BNB' : '',\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch],\n  )\n\n  const onChangeRecipient = useCallback(\n    (recipient: string | null) => {\n      dispatch(setRecipient({ recipient }))\n    },\n    [dispatch],\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n  }\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return currency instanceof Token\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\n  '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f', // v2 factory\n  '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a', // v2 router 01\n  '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D', // v2 router 02\n]\n\n/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\n  return (\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\n  )\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(): {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmount: CurrencyAmount | undefined\n  v2Trade: Trade | undefined\n  inputError?: string\n} {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    recipient,\n  } = useSwapState()\n\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const recipientLookup = useENS(recipient ?? undefined)\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\n\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  const currencyBalances = {\n    [Field.INPUT]: relevantTokenBalances[0],\n    [Field.OUTPUT]: relevantTokenBalances[1],\n  }\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  let inputError: string | undefined\n  if (!account) {\n    inputError = t('Connect Wallet')\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? t('Enter an amount')\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? t('Select a token')\n  }\n\n  const formattedTo = isAddress(to)\n  if (!to || !formattedTo) {\n    inputError = inputError ?? t('Enter a recipient')\n  } else if (\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\n  ) {\n    inputError = inputError ?? t('Invalid recipient')\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [\n    currencyBalances[Field.INPUT],\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\n  ]\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = t('Insufficient %symbol% balance', { symbol: amountIn.currency.symbol })\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    v2Trade: v2Trade ?? undefined,\n    inputError,\n  }\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === 'BNB') return 'BNB'\n    if (valid === false) return 'BNB'\n  }\n  return 'BNB' ?? ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = ''\n    }\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient,\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const parsedQs = useParsedQueryString()\n  const [result, setResult] = useState<\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\n  >()\n\n  useEffect(() => {\n    if (!chainId) return\n    const parsed = queryParametersToSwapState(parsedQs)\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n        recipient: null,\n      }),\n    )\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, chainId])\n\n  return result\n}\n","import { parse, ParsedQs } from 'qs'\nimport { useMemo } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nexport default function useParsedQueryString(): ParsedQs {\n  const { search } = useLocation()\n  return useMemo(\n    () => (search && search.length > 1 ? parse(search, { parseArrays: false, ignoreQueryPrefix: true }) : {}),\n    [search],\n  )\n}\n","import { useCallback } from 'react'\nimport ethers, { Contract, CallOverrides } from 'ethers'\nimport { useGasPrice } from 'state/user/hooks'\nimport { get } from 'lodash'\n\n/**\n * Perform a contract call with a gas price returned from useGasPrice\n * @param contract Used to perform the call\n * @param methodName The name of the method called\n * @param methodArgs An array of arguments to pass to the method\n * @param overrides An overrides object to pass to the method. gasPrice passed in here will take priority over the price returned by useGasPrice\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport function useCallWithGasPrice() {\n  const gasPrice = useGasPrice()\n\n  const callWithGasPrice = useCallback(\n    async (\n      contract: Contract,\n      methodName: string,\n      methodArgs: any[] = [],\n      overrides: CallOverrides = null,\n    ): Promise<ethers.providers.TransactionResponse> => {\n      const contractMethod = get(contract, methodName)\n      const hasManualGasPriceOverride = overrides?.gasPrice\n\n      const tx = await contractMethod(\n        ...methodArgs,\n        hasManualGasPriceOverride ? { ...overrides } : { ...overrides, gasPrice },\n      )\n\n      return tx\n    },\n    [gasPrice],\n  )\n\n  return { callWithGasPrice }\n}\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { LotteryStatus, LotteryTicket } from 'config/constants/types'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport { getLotteryV2Address } from 'utils/addressHelpers'\nimport { multicallv2 } from 'utils/multicall'\nimport { LotteryRound, LotteryRoundUserTickets, LotteryResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\nimport { useMemo } from 'react'\nimport { ethersToSerializedBigNumber } from 'utils/bigNumber'\nimport { NUM_ROUNDS_TO_FETCH_FROM_NODES } from 'config/constants/lottery'\n\nconst lotteryContract = getLotteryV2Contract()\n// Variable used to determine how many past rounds should be populated by node data rather than subgraph\n\nconst processViewLotterySuccessResponse = (response, lotteryId: string): LotteryResponse => {\n  const {\n    status,\n    startTime,\n    endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee,\n    firstTicketId,\n    lastTicketId,\n    amountCollectedInCake,\n    finalNumber,\n    cakePerBracket,\n    countWinnersPerBracket,\n    rewardsBreakdown,\n  } = response\n\n  const statusKey = Object.keys(LotteryStatus)[status]\n  const serializedCakePerBracket = cakePerBracket.map((cakeInBracket) => ethersToSerializedBigNumber(cakeInBracket))\n  const serializedCountWinnersPerBracket = countWinnersPerBracket.map((winnersInBracket) =>\n    ethersToSerializedBigNumber(winnersInBracket),\n  )\n  const serializedRewardsBreakdown = rewardsBreakdown.map((reward) => ethersToSerializedBigNumber(reward))\n\n  return {\n    isLoading: false,\n    lotteryId,\n    status: LotteryStatus[statusKey],\n    startTime: startTime?.toString(),\n    endTime: endTime?.toString(),\n    priceTicketInCake: ethersToSerializedBigNumber(priceTicketInCake),\n    discountDivisor: discountDivisor?.toString(),\n    treasuryFee: treasuryFee?.toString(),\n    firstTicketId: firstTicketId?.toString(),\n    lastTicketId: lastTicketId?.toString(),\n    amountCollectedInCake: ethersToSerializedBigNumber(amountCollectedInCake),\n    finalNumber,\n    cakePerBracket: serializedCakePerBracket,\n    countWinnersPerBracket: serializedCountWinnersPerBracket,\n    rewardsBreakdown: serializedRewardsBreakdown,\n  }\n}\n\nconst processViewLotteryErrorResponse = (lotteryId: string): LotteryResponse => {\n  return {\n    isLoading: true,\n    lotteryId,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n  }\n}\n\nexport const fetchLottery = async (lotteryId: string): Promise<LotteryResponse> => {\n  try {\n    const lotteryData = await lotteryContract.viewLottery(lotteryId)\n    return processViewLotterySuccessResponse(lotteryData, lotteryId)\n  } catch (error) {\n    return processViewLotteryErrorResponse(lotteryId)\n  }\n}\n\nexport const fetchMultipleLotteries = async (lotteryIds: string[]): Promise<LotteryResponse[]> => {\n  const calls = lotteryIds.map((id) => ({\n    name: 'viewLottery',\n    address: getLotteryV2Address(),\n    params: [id],\n  }))\n  try {\n    const multicallRes = await multicallv2(lotteryV2Abi, calls, { requireSuccess: false })\n    const processedResponses = multicallRes.map((res, index) =>\n      processViewLotterySuccessResponse(res[0], lotteryIds[index]),\n    )\n    return processedResponses\n  } catch (error) {\n    console.error(error)\n    return calls.map((call, index) => processViewLotteryErrorResponse(lotteryIds[index]))\n  }\n}\n\nexport const fetchCurrentLotteryIdAndMaxBuy = async () => {\n  try {\n    const calls = ['currentLotteryId', 'maxNumberTicketsPerBuyOrClaim'].map((method) => ({\n      address: getLotteryV2Address(),\n      name: method,\n    }))\n    const [[currentLotteryId], [maxNumberTicketsPerBuyOrClaim]] = (await multicallv2(\n      lotteryV2Abi,\n      calls,\n    )) as ethers.BigNumber[][]\n\n    return {\n      currentLotteryId: currentLotteryId ? currentLotteryId.toString() : null,\n      maxNumberTicketsPerBuyOrClaim: maxNumberTicketsPerBuyOrClaim ? maxNumberTicketsPerBuyOrClaim.toString() : null,\n    }\n  } catch (error) {\n    return {\n      currentLotteryId: null,\n      maxNumberTicketsPerBuyOrClaim: null,\n    }\n  }\n}\n\nexport const getRoundIdsArray = (currentLotteryId: string): string[] => {\n  const currentIdAsInt = parseInt(currentLotteryId, 10)\n  const roundIds = []\n  for (let i = 0; i < NUM_ROUNDS_TO_FETCH_FROM_NODES; i++) {\n    roundIds.push(currentIdAsInt - i)\n  }\n  return roundIds.map((roundId) => roundId.toString())\n}\n\nexport const useProcessLotteryResponse = (\n  lotteryData: LotteryResponse & { userTickets?: LotteryRoundUserTickets },\n): LotteryRound => {\n  const {\n    priceTicketInCake: priceTicketInCakeAsString,\n    discountDivisor: discountDivisorAsString,\n    amountCollectedInCake: amountCollectedInCakeAsString,\n  } = lotteryData\n\n  const discountDivisor = useMemo(() => {\n    return new BigNumber(discountDivisorAsString)\n  }, [discountDivisorAsString])\n\n  const priceTicketInCake = useMemo(() => {\n    return new BigNumber(priceTicketInCakeAsString)\n  }, [priceTicketInCakeAsString])\n\n  const amountCollectedInCake = useMemo(() => {\n    return new BigNumber(amountCollectedInCakeAsString)\n  }, [amountCollectedInCakeAsString])\n\n  return {\n    isLoading: lotteryData.isLoading,\n    lotteryId: lotteryData.lotteryId,\n    userTickets: lotteryData.userTickets,\n    status: lotteryData.status,\n    startTime: lotteryData.startTime,\n    endTime: lotteryData.endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee: lotteryData.treasuryFee,\n    firstTicketId: lotteryData.firstTicketId,\n    lastTicketId: lotteryData.lastTicketId,\n    amountCollectedInCake,\n    finalNumber: lotteryData.finalNumber,\n    cakePerBracket: lotteryData.cakePerBracket,\n    countWinnersPerBracket: lotteryData.countWinnersPerBracket,\n    rewardsBreakdown: lotteryData.rewardsBreakdown,\n  }\n}\n\nexport const hasRoundBeenClaimed = (tickets: LotteryTicket[]): boolean => {\n  const claimedTickets = tickets.filter((ticket) => ticket.status)\n  return claimedTickets.length > 0\n}\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import { Profile } from 'state/types'\n\nexport type ProfileResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: string\n  5: boolean\n}\n\nexport const transformProfileResponse = (profileResponse: ProfileResponse): Partial<Profile> => {\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\n\n  return {\n    userId: Number(userId),\n    points: Number(numberPoints),\n    teamId: Number(teamId),\n    tokenId: Number(tokenId),\n    nftAddress,\n    isActive,\n  }\n}\n","import Cookies from 'js-cookie'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Nft } from 'config/constants/types'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { Profile } from 'state/types'\nimport { getTeam } from 'state/teams/helpers'\nimport { transformProfileResponse } from './helpers'\n\nconst profileContract = getProfileContract()\nconst profileApi = process.env.REACT_APP_API_PROFILE\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${profileApi}/api/users/${address}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\nconst getProfile = async (address: string): Promise<GetProfileResponse> => {\n  try {\n    const hasRegistered = (await profileContract.hasRegistered(address)) as boolean\n\n    if (!hasRegistered) {\n      return { hasRegistered, profile: null }\n    }\n\n    const profileResponse = await profileContract.getUserProfile(address)\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\n    const team = await getTeam(teamId)\n    const username = await getUsername(address)\n\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\n    // so only fetch the nft data if active\n    let nft: Nft\n    if (isActive) {\n      nft = await getNftByTokenId(nftAddress, tokenId)\n\n      // Save the preview image in a cookie so it can be used on the exchange\n      Cookies.set(\n        `profile_${address}`,\n        {\n          username,\n          avatar: `https://pancakeswap.finance/images/nfts/${nft?.images.sm}`,\n        },\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\n      )\n    }\n\n    const profile = {\n      userId,\n      points,\n      teamId,\n      tokenId,\n      username,\n      nftAddress,\n      isActive,\n      nft,\n      team,\n    } as Profile\n\n    return { hasRegistered, profile }\n  } catch (error) {\n    return null\n  }\n}\n\nexport default getProfile\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState } from 'state/types'\nimport type { AppDispatch } from 'state'\nimport getProfile, { GetProfileResponse } from './getProfile'\n\nconst initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: true,\n  hasRegistered: false,\n  data: null,\n}\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileFetchStart: (state) => {\n      state.isLoading = true\n    },\n    profileFetchSucceeded: (_state, action: PayloadAction<GetProfileResponse>) => {\n      const { profile, hasRegistered } = action.payload\n\n      return {\n        isInitialized: true,\n        isLoading: false,\n        hasRegistered,\n        data: profile,\n      }\n    },\n    profileFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    profileClear: () => ({\n      ...initialState,\n      isLoading: false,\n    }),\n    addPoints: (state, action: PayloadAction<number>) => {\n      state.data.points += action.payload\n    },\n  },\n})\n\n// Actions\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, profileClear, addPoints } =\n  profileSlice.actions\n\n// Thunks\n// TODO: this should be an AsyncThunk\nexport const fetchProfile = (address: string) => async (dispatch: AppDispatch) => {\n  try {\n    dispatch(profileFetchStart())\n    const response = await getProfile(address)\n    dispatch(profileFetchSucceeded(response))\n  } catch (error) {\n    dispatch(profileFetchFailed())\n  }\n}\n\nexport default profileSlice.reducer\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst priceHelperLps: FarmConfig[] = [\n  /**\n   * These LPs are just used to help with price calculation for MasterChef LPs (farms.ts).\n   * This list is added to the MasterChefLps and passed to fetchFarm. The calls to get contract information about the token/quoteToken in the LP are still made.\n   * The absense of a PID means the masterchef contract calls are skipped for this farm.\n   * Prices are then fetched for all farms (masterchef + priceHelperLps).\n   * Before storing to redux, farms without a PID are filtered out.\n   */\n  // {\n  //   pid: null,\n  //   lpSymbol: 'QSD-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x7b3ae32eE8C532016f3E31C8941D937c59e055B9',\n  //   },\n  //   token: tokens.qsd,\n  //   quoteToken: tokens.wbnb,\n  // },\n]\n\nexport default priceHelperLps\n","import BigNumber from 'bignumber.js'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport erc20 from 'config/abi/erc20.json'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\nimport multicall from 'utils/multicall'\nimport { Farm, SerializedBigNumber } from '../types'\n\ntype PublicFarmData = {\n  tokenAmountMc: SerializedBigNumber\n  quoteTokenAmountMc: SerializedBigNumber\n  tokenAmountTotal: SerializedBigNumber\n  quoteTokenAmountTotal: SerializedBigNumber\n  lpTotalInQuoteToken: SerializedBigNumber\n  lpTotalSupply: SerializedBigNumber\n  tokenPriceVsQuote: SerializedBigNumber\n  poolWeight: SerializedBigNumber\n  multiplier: string\n}\n\nconst fetchFarm = async (farm: Farm): Promise<PublicFarmData> => {\n  const { pid, lpAddresses, token, quoteToken } = farm\n  const lpAddress = getAddress(lpAddresses)\n  const calls = [\n    // Balance of token in the LP contract\n    {\n      address: getAddress(token.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of quote token on LP contract\n    {\n      address: getAddress(quoteToken.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of LP tokens in the master chef contract\n    {\n      address: lpAddress,\n      name: 'balanceOf',\n      params: [getMasterChefAddress()],\n    },\n    // Total supply of LP tokens\n    {\n      address: lpAddress,\n      name: 'totalSupply',\n    },\n    // Token decimals\n    {\n      address: getAddress(token.address),\n      name: 'decimals',\n    },\n    // Quote token decimals\n    {\n      address: getAddress(quoteToken.address),\n      name: 'decimals',\n    },\n  ]\n\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\n    await multicall(erc20, calls)\n\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n  // Raw amount of token in the LP, including those not staked\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\n\n  // Amount of token in the LP that are staked in the MC (i.e amount of token * lp ratio)\n  const tokenAmountMc = tokenAmountTotal.times(lpTokenRatio)\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\n\n  // Total staked in LP, in quote token value\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\n\n  // Only make masterchef calls if farm has pid\n  const [info, totalAllocPoint] =\n    pid || pid === 0\n      ? await multicall(masterchefABI, [\n          {\n            address: getMasterChefAddress(),\n            name: 'poolInfo',\n            params: [pid],\n          },\n          {\n            address: getMasterChefAddress(),\n            name: 'totalAllocPoint',\n          },\n        ])\n      : [null, null]\n\n  const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\n  const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\n\n  return {\n    tokenAmountMc: tokenAmountMc.toJSON(),\n    quoteTokenAmountMc: quoteTokenAmountMc.toJSON(),\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\n    quoteTokenAmountTotal: quoteTokenAmountTotal.toJSON(),\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\n    poolWeight: poolWeight.toJSON(),\n    multiplier: `${allocPoint.div(100).toString()}X`,\n  }\n}\n\nexport default fetchFarm\n","import { Farm } from 'state/types'\nimport fetchPublicFarmData from './fetchPublicFarmData'\n\nconst fetchFarm = async (farm: Farm): Promise<Farm> => {\n  const farmPublicData = await fetchPublicFarmData(farm)\n\n  return { ...farm, ...farmPublicData }\n}\n\nexport default fetchFarm\n","import { FarmConfig } from 'config/constants/types'\nimport fetchFarm from './fetchFarm'\n\nconst fetchFarms = async (farmsToFetch: FarmConfig[]) => {\n  const data = await Promise.all(\n    farmsToFetch.map(async (farmConfig) => {\n      const farm = await fetchFarm(farmConfig)\n      return farm\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import { Farm } from 'state/types'\n\n/**\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\n * @param farms Array of farms\n * @param preferredQuoteTokens Array of preferred quote tokens\n * @returns A preferred farm, if found - or the first element of the farms array\n */\nexport const filterFarmsByQuoteToken = (farms: Farm[], preferredQuoteTokens: string[] = ['BUSD', 'wBNB']): Farm => {\n  const preferredFarm = farms.find((farm) => {\n    return preferredQuoteTokens.some((quoteToken) => {\n      return farm.quoteToken.symbol === quoteToken\n    })\n  })\n  return preferredFarm || farms[0]\n}\n\nexport default filterFarmsByQuoteToken\n","import BigNumber from 'bignumber.js'\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport { Farm } from 'state/types'\n\nconst getFarmFromTokenSymbol = (farms: Farm[], tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\n  return filteredFarm\n}\n\nconst getFarmBaseTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\n\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  // Possible alternative farm quoteTokens:\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\n  // If the farm's quote token isn't BUSD or wBNB, we then use the quote token, of the original farm's quote token\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  // Catch in case token does not have immediate or once-removed BUSD/wBNB quoteToken\n  return BIG_ZERO\n}\n\nconst getFarmQuoteTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return BIG_ONE\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return bnbPriceBusd\n  }\n\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  return BIG_ZERO\n}\n\nconst fetchFarmsPrices = async (farms) => {\n  console.log('|||||||||||||||||||||||||||||||||||||||')\n  const bnbBusdFarm = farms.find((farm: Farm) => farm.pid === 3)\n  console.log('bnbBusdFarm.tokenPriceVsQuote  ? ',bnbBusdFarm.tokenPriceVsQuote )\n  console.log('BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote)',BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote).toString())\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\n\n  console.log('bnbPriceBusd',bnbPriceBusd.toString())\n  const farmsWithPrices = farms.map((farm) => {\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\n    const baseTokenPrice = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const quoteTokenPrice = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const token = { ...farm.token, busdPrice: baseTokenPrice.toJSON() }\n    const quoteToken = { ...farm.quoteToken, busdPrice: quoteTokenPrice.toJSON() }\n    return { ...farm, token, quoteToken }\n  })\n\n  return farmsWithPrices\n}\n\nexport default fetchFarmsPrices\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { FarmConfig } from 'config/constants/types'\n\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\n \nexport const fetchFarmUserLastDeposit = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawUserInfos = await multicall(masterchefABI, calls)\n  const parsedUserInfos = rawUserInfos.map((userInfo) => {\n    return new BigNumber(userInfo[6]._hex).toJSON()\n  })\n  return parsedUserInfos\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'pendingMochi',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport isArchivedPid from 'utils/farmHelpers'\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\nimport fetchFarms from './fetchFarms'\nimport fetchFarmsPrices from './fetchFarmsPrices'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n  fetchFarmUserLastDeposit\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\n  ...farm,\n  userData: {\n    allowance: '0',\n    tokenBalance: '0',\n    stakedBalance: '0',\n    earnings: '0',\n    lastWithdraw: '0',\n  },\n}))\n\nconst initialState: FarmsState = { data: noAccountFarmConfig, loadArchivedFarmsData: false, userDataLoaded: false }\n\nexport const nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\n\n// Async thunks\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<Farm[], number[]>(\n  'farms/fetchFarmsPublicDataAsync',\n  async (pids) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n\n    // Add price helper farms\n    \n    const farmsWithPriceHelpers = farmsToFetch.concat(priceHelperLpsConfig)\n    \n    const farms = await fetchFarms(farmsWithPriceHelpers)\n    const farmsWithPrices = await fetchFarmsPrices(farms)\n    // debugger; // eslint-disable-line no-debugger\n    // Filter out price helper LP config farms\n    const farmsWithoutHelperLps = farmsWithPrices.filter((farm: Farm) => {\n      return farm.pid || farm.pid === 0\n    })\n\n    return farmsWithoutHelperLps\n  },\n)\n\ninterface FarmUserDataResponse {\n  pid: number\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n  lastWithdraw: number\n}\n\nexport const fetchFarmUserDataAsync = createAsyncThunk<FarmUserDataResponse[], { account: string; pids: number[] }>(\n  'farms/fetchFarmUserDataAsync',\n  async ({ account, pids }) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\n    const lastDeposit = await fetchFarmUserLastDeposit(account, farmsToFetch)\n    \n    return userFarmAllowances.map((farmAllowance, index) => {\n      return {\n        pid: farmsToFetch[index].pid,\n        allowance: userFarmAllowances[index],\n        tokenBalance: userFarmTokenBalances[index],\n        stakedBalance: userStakedBalances[index],\n        earnings: userFarmEarnings[index],\n        lastWithdraw: lastDeposit[index]\n      }\n    })\n  },\n)\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setLoadArchivedFarmsData: (state, action) => {\n      const loadArchivedFarmsData = action.payload\n      state.loadArchivedFarmsData = loadArchivedFarmsData\n    },\n  },\n  extraReducers: (builder) => {\n    // Update farms with live data\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\n      state.data = state.data.map((farm) => {\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    })\n\n    // Update farms with user data\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\n      action.payload.forEach((userDataEl) => {\n        const { pid } = userDataEl\n        const index = state.data.findIndex((farm) => farm.pid === pid)\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n      state.userDataLoaded = true\n    })\n  },\n})\n\n// Actions\nexport const { setLoadArchivedFarmsData } = farmsSlice.actions\n\nexport default farmsSlice.reducer\n","import { useEffect, useState } from 'react'\n\n// modified from https://usehooks.com/useDebounce/\nexport default function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\n\n  useEffect(() => {\n    // Update debounced value after delay\n    const handler = setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n\n    // Cancel the timeout if value changes (also on delay change or unmount)\n    // This is how we prevent debounced value from updating if value is changed ...\n    // .. within the delay period. Timeout gets cleared and restarted.\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n","const getTokenLogoURL = (address: string) =>\n  `https://assets.trustwalletapp.com/blockchains/smartchain/assets/${address}/logo.png`\n\nexport default getTokenLogoURL\n","import { Currency, ETHER, HARMONY, Token, MOCHI } from '@pancakeswap/sdk'\nimport { HarmonyIcon, MochiIcon } from '@pancakeswap/uikit'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { WrappedTokenInfo } from '../../state/lists/hooks'\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\nimport Logo from './Logo'\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style,\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (currency === ETHER || currency === HARMONY) return []\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, getTokenLogoURL(currency.address)]\n      }\n      return [getTokenLogoURL(currency.address)]\n    }\n    return []\n  }, [currency, uriLocations])\n\n  if (currency === ETHER || currency === HARMONY) {\n    return (\n      <HarmonyIcon width={size} height={size} style={style} />\n    )\n  }\n  console.log('xxxxxxxxxxxxxxxxxxxxxxxxxxxx')\n  console.log(currency)\n  // console.log(MOCHI)\n  // console.log(currency.symbol === \"hMOCHI\")\n  // console.log('xxxxxxxxxxxxxxxxxxxxxxxxxxxx')\n  if (currency && currency.name === \"hMOCHI\") {\n    return (\n      <MochiIcon width={size} height={size} style={style} />\n    )\n  }\n\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n}\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst farms: FarmConfig[] = [\n  /**\n   * These 3 farms (PID 0, 251, 252) should always be at the top of the file.\n   */\n   {\n    pid: 0,\n    lpSymbol: 'HMOCHI', // Solo thang\n    lpAddresses: {\n      1666600000: '0x691f37653f2fBed9063fEBB1A7f54BC5C40bEd8C',\n    },\n    token: tokens.xmochi, // is this because it stakes xMOCHI?\n    quoteToken: tokens.usdc,\n  },\n  {\n    pid: 1,\n    lpSymbol: 'HMOCHI-ONE',\n    lpAddresses: {\n      1666600000: '0x890eF2508d507628A6D9a40653A1a5e57851a0aE',\n    },\n    token: tokens.hmochi,\n    quoteToken: tokens.one,\n  },\n  {\n    pid: 2,\n    lpSymbol: 'HMOCHI-BUSD',\n    lpAddresses: {\n      1666600000: '0xfFd19ed55e44F97435675Ff6Bf9aea7B6b515616',\n    },\n    token: tokens.hmochi,\n    quoteToken: tokens.busd,\n  },\n   // do not touch used to calculate busd\n   {\n    pid: 3,\n    lpSymbol: 'ONE-BUSD',\n    lpAddresses: {\n      1666600000: '0x46Ac8DdBDf4B16D6312693F8F25798db6f65Bcc1',\n    },\n    token: tokens.one,\n    quoteToken: tokens.busd,\n  },\n  // 4 ded\n  {\n    pid: 5,\n    lpSymbol: 'FLOKI-HMOCHI',\n    lpAddresses: {\n      1666600000: '0x3541eb38d21c5e9b68f806eb3eab7f20f20c3794',\n    },\n    token: tokens.floki,\n    quoteToken: tokens.hmochi,\n  },\n  {\n    pid: 6,\n    lpSymbol: 'ONEMOON-HMOCHI',\n    lpAddresses: {\n      1666600000: '0x0dd4a4547b9be310c88265fd8bfc8a3aa38c7654',\n    },\n    token: tokens.onemoon,\n    quoteToken: tokens.hmochi,\n  },\n  {\n    pid: 7,\n    lpSymbol: 'BTC-HMOCHI',\n    lpAddresses: {\n      1666600000: '0xb26334fbfe95d5b942bd61689a29f72b6d6b2375',\n    },\n    token: tokens.btc,\n    quoteToken: tokens.hmochi,\n  },\n  {\n    pid: 8,\n    lpSymbol: 'APESOX-HMOCHI',\n    lpAddresses: {\n      1666600000: '0x3873fe2b149c3382e9fb5bfa7f087d29f463e309',\n    },\n    token: tokens.apesox,\n    quoteToken: tokens.hmochi,\n  },\n  {\n    pid: 9,\n    lpSymbol: 'JEWEL-HMOCHI',\n    lpAddresses: {\n      1666600000: '0x050380a680b8512e591c7987a73ea904b316b632',\n    },\n    token: tokens.jewel,\n    quoteToken: tokens.hmochi,\n  },\n  {\n    pid: 10,\n    lpSymbol: 'SMUG-HMOCHI',\n    lpAddresses: {\n      1666600000: '0xbebe80f4515ef39acbb2c5efbbfa6797af7e8241',\n    },\n    token: tokens.smug,\n    quoteToken: tokens.hmochi,\n  },\n  {\n    pid: 11,\n    lpSymbol: 'KIBA-HMOCHI',\n    lpAddresses: {\n      1666600000: '0x424959169Cf77937139770151DcF691ACFEDfE5d',\n    },\n    token: tokens.kiba,\n    quoteToken: tokens.hmochi,\n  },\n  {\n    pid: 12,\n    lpSymbol: 'APE-HMOCHI',\n    lpAddresses: {\n      1666600000: '0xdf9f0b97f5a7639653e26581fbb20dfb04522f65',\n    },\n    token: tokens.ape,\n    quoteToken: tokens.hmochi,\n  },\n  {\n    pid: 13,\n    lpSymbol: 'APE-ONE',\n    lpAddresses: {\n      1666600000: '0x1cb5acc6f629f10c93e8eb541a8a1e501d800dd0',\n    },\n    token: tokens.ape,\n    quoteToken: tokens.one,\n  },\n  {\n    pid: 14,\n    lpSymbol: 'bMOCHI-hMOCHI',\n    lpAddresses: {\n      1666600000: '0x45e38880a142a7f82c9f853c37bbd34b0b993775',\n    },\n    token: tokens.bmochi,\n    quoteToken: tokens.hmochi,\n  },\n  {\n    pid: 15,\n    lpSymbol: 'bMOCHI-ONE',\n    lpAddresses: {\n      1666600000: '0xb511a32ebce27d9c917670141f7e2f24a916da07',\n    },\n    token: tokens.bmochi,\n    quoteToken: tokens.one,\n  },\n  {\n    pid: 16,\n    lpSymbol: 'DAI-BUSD',\n    lpAddresses: {\n      1666600000: '0x33cae18fbe804c41c8b25fcf3196bba4d9e70597',\n    },\n    token: tokens.dai,\n    quoteToken: tokens.busd,\n  },\n]\n\nexport default farms\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from './useRefresh'\nimport useLastUpdated from './useLastUpdated'\n\ntype UseTokenBalanceState = {\n  balance: BigNumber\n  fetchStatus: FetchStatus\n}\n\nexport enum FetchStatus {\n  NOT_FETCHED = 'not-fetched',\n  SUCCESS = 'success',\n  FAILED = 'failed',\n}\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const { NOT_FETCHED, SUCCESS, FAILED } = FetchStatus\n  const [balanceState, setBalanceState] = useState<UseTokenBalanceState>({\n    balance: BIG_ZERO,\n    fetchStatus: NOT_FETCHED,\n  })\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      try {\n        const res = await contract.balanceOf(account)\n        setBalanceState({ balance: new BigNumber(res.toString()), fetchStatus: SUCCESS })\n      } catch (e) {\n        console.error(e)\n        setBalanceState((prev) => ({\n          ...prev,\n          fetchStatus: FAILED,\n        }))\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, fastRefresh, SUCCESS, FAILED])\n\n  return balanceState\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getCakeContract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n  console.log('tokenAddress',tokenAddress)\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x000000000000000000000000000000000000dEaD')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const useGetBnbBalance = () => {\n  const [fetchStatus, setFetchStatus] = useState(FetchStatus.NOT_FETCHED)\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { account } = useWeb3React()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      try {\n        const walletBalance = await simpleRpcProvider.getBalance(account)\n        setBalance(new BigNumber(walletBalance.toString()))\n        setFetchStatus(FetchStatus.SUCCESS)\n      } catch {\n        setFetchStatus(FetchStatus.FAILED)\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, lastUpdated, setBalance, setFetchStatus])\n\n  return { balance, fetchStatus, refresh: setLastUpdated }\n}\n\nexport default useTokenBalance\n","/**\n * Returns true if the string value is zero in hex\n * @param hexNumberString\n */\nexport default function isZero(hexNumberString: string) {\n  return /^0x0*$/.test(hexNumberString)\n}\n","import { EN } from 'config/localization/languages'\n\nconst publicUrl = process.env.PUBLIC_URL\n\nexport const LS_KEY = 'pancakeswap_language'\n\nexport const fetchLocale = async (locale) => {\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\n  const data = await response.json()\n  return data\n}\n\nexport const getLanguageCodeFromLS = () => {\n  try {\n    const codeFromStorage = localStorage.getItem(LS_KEY)\n\n    return codeFromStorage || EN.locale\n  } catch {\n    return EN.locale\n  }\n}\n","import { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { setBlock } from '.'\nimport { State } from '../types'\n\nexport const usePollBlockNumber = () => {\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(setBlock(blockNumber))\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [dispatch])\n}\n\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n","import { Nft, NftSource, NftType } from './types'\n\nexport const IPFS_GATEWAY = 'https://cloudflare-ipfs.com'\n\nexport const nftSources: NftSource = {\n  [NftType.PANCAKE]: {\n    address: {\n      1666600000: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n    },\n    identifierKey: 'image',\n  },\n  [NftType.MIXIE]: {\n    address: {\n      1666600000: '0xa251b5EAa9E67F2Bc8b33F33e20E91552Bf85566',\n    },\n    identifierKey: 'image',\n  },\n}\n\n/**\n * NOTE: https://cloudflare-ipfs.com does not support video streaming so for the video URLS we need to use\n * https://gateway.pinata.cloud\n */\n\nconst Nfts: Nft[] = [\n  {\n    name: 'Claire',\n    description: 'Can Claire the clairvoyant see what’s in the cards for you?',\n    images: {\n      lg: 'claire-lg.png',\n      md: 'claire-md.png',\n      sm: 'claire-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmRa2WbGnqdgUzrYXxZWv549BDxq3heYridJeoWGcebcU8/claire.png',\n    },\n    sortOrder: 999,\n    identifier: 'claire',\n    type: NftType.PANCAKE,\n    variationId: 17,\n  },\n  {\n    name: 'Syrup Soak',\n    description: 'Ahh... what could be sweeter than a syrupy soak?',\n    images: {\n      lg: 'soak-lg.png',\n      md: 'soak-md.png',\n      sm: 'soak-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'syrup-soak',\n    type: NftType.PANCAKE,\n    variationId: 16,\n  },\n  {\n    name: 'Mixie v1',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-1-lg.png',\n      md: 'mixie-1-md.png',\n      sm: 'mixie-1-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/001-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '001-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 1,\n  },\n  {\n    name: 'Mixie v2',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-2-lg.png',\n      md: 'mixie-2-md.png',\n      sm: 'mixie-2-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/002-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '002-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 2,\n  },\n  {\n    name: 'Mixie v3',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-3-lg.png',\n      md: 'mixie-3-md.png',\n      sm: 'mixie-3-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/003-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '003-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 3,\n  },\n  {\n    name: 'Easter ‘21 Champions',\n    description: 'Eggscellent! Celebrating Syrup Storm winning the Easter Battle!',\n    images: {\n      lg: 'easter-champion-storm-lg.png',\n      md: 'easter-champion-storm-md.png',\n      sm: 'easter-champion-storm-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'easter-champion-storm',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Cakeston Easter '21\",\n    description: 'Melting Easter eggs and melting hearts!',\n    images: {\n      lg: 'cakeston-easter-21-lg.png',\n      md: 'cakeston-easter-21-md.png',\n      sm: 'cakeston-easter-21-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-caker.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-caker',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Flipsie Easter '21\",\n    description: 'Watch out for Flipsie’s spatula smash!',\n    images: {\n      lg: 'flipsie-easter-21-lg.png',\n      md: 'flipsie-easter-21-md.png',\n      sm: 'flipsie-easter-21-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-flipper.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-flipper',\n    type: NftType.PANCAKE,\n    variationId: 14,\n  },\n  {\n    name: \"Stormy Easter '21\",\n    description: 'Do you like chocolate with your syrup? Go long!',\n    images: {\n      lg: 'stormy-easter-21-lg.png',\n      md: 'stormy-easter-21-md.png',\n      sm: 'stormy-easter-21-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-storm.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-storm',\n    type: NftType.PANCAKE,\n    variationId: 12,\n  },\n  {\n    name: 'Bullish',\n    description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\n    images: {\n      lg: 'bullish-lg.png',\n      md: 'bullish-md.png',\n      sm: 'bullish-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png',\n    },\n    video: {\n      webm: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm',\n      mp4: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'bullish',\n    type: NftType.PANCAKE,\n    variationId: 11,\n  },\n  {\n    name: 'Hiccup',\n    description: \"Oopsie daisy! Hiccup's had a bit of an accident. Poor little fella.\",\n    images: {\n      lg: 'hiccup-lg.png',\n      md: 'hiccup-md.png',\n      sm: 'hiccup-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQ6EE6gkVzAQUdQLLM7CyrnME6LZHCoy92ZERW8HXmyjw/hiccup.png',\n    },\n    sortOrder: 999,\n    identifier: 'hiccup',\n    type: NftType.PANCAKE,\n    variationId: 10,\n  },\n  {\n    name: 'Sleepy',\n    description: 'Aww, looks like eating pancakes all day is tough work. Sweet dreams!',\n    images: {\n      lg: 'sleepy-lg.png',\n      md: 'sleepy-md.png',\n      sm: 'sleepy-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sleepy.png',\n      blur: 'sleepy-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sleepy',\n    type: NftType.PANCAKE,\n    variationId: 5,\n  },\n  {\n    name: 'Sunny',\n    description: 'Sunny is always cheerful when there are pancakes around. Smile!',\n    images: {\n      lg: 'sunny-lg.png',\n      md: 'sunny-md.png',\n      sm: 'sunny-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sunny.png',\n      blur: 'sunny-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sunny',\n    type: NftType.PANCAKE,\n    variationId: 9,\n  },\n  {\n    name: 'Churro',\n    description: \"Don't let that dopey smile deceive you... Churro's a master CAKE chef!\",\n    images: {\n      lg: 'churro-lg.png',\n      md: 'churro-md.png',\n      sm: 'churro-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/churro.png',\n      blur: 'churro-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'churro',\n    type: NftType.PANCAKE,\n    variationId: 8,\n  },\n  {\n    name: 'Dollop',\n    description: \"Nommm... Oh hi, I'm just meditating on the meaning of CAKE.\",\n    images: {\n      lg: 'dollop-lg.png',\n      md: 'dollop-md.png',\n      sm: 'dollop-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/dollop.png',\n      blur: 'dollop-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'dollop',\n    type: NftType.PANCAKE,\n    variationId: 6,\n  },\n  {\n    name: 'Twinkle',\n    description: \"Three guesses what's put that twinkle in those eyes! (Hint: it's CAKE)\",\n    images: {\n      lg: 'twinkle-lg.png',\n      md: 'twinkle-md.png',\n      sm: 'twinkle-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/twinkle.png',\n      blur: 'twinkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'twinkle',\n    type: NftType.PANCAKE,\n    variationId: 7,\n  },\n  {\n    name: 'Swapsies',\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\n    images: {\n      lg: 'swapsies-lg.png',\n      md: 'swapsies-md.png',\n      sm: 'swapsies-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png',\n      blur: 'swapsies-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'swapsies',\n    type: NftType.PANCAKE,\n    variationId: 0,\n  },\n  {\n    name: 'Drizzle',\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\n    images: {\n      lg: 'drizzle-lg.png',\n      md: 'drizzle-md.png',\n      sm: 'drizzle-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png',\n      blur: 'drizzle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'drizzle',\n    type: NftType.PANCAKE,\n    variationId: 1,\n  },\n  {\n    name: 'Blueberries',\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\n    images: {\n      lg: 'blueberries-lg.png',\n      md: 'blueberries-md.png',\n      sm: 'blueberries-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png',\n      blur: 'blueberries-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'blueberries',\n    type: NftType.PANCAKE,\n    variationId: 2,\n  },\n  {\n    name: 'Circular',\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\n    images: {\n      lg: 'circular-lg.png',\n      md: 'circular-md.png',\n      sm: 'circular-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png',\n      blur: 'circular-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'circular',\n    type: NftType.PANCAKE,\n    variationId: 3,\n  },\n  {\n    name: 'Sparkle',\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\n    images: {\n      lg: 'sparkle-lg.png',\n      md: 'sparkle-md.png',\n      sm: 'sparkle-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png',\n      blur: 'sparkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sparkle',\n    type: NftType.PANCAKE,\n    variationId: 4,\n  },\n]\n\nexport default Nfts\n","import { useEffect, useReducer, useCallback } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { getInterestBreakdown, getPrincipalForInterest, getRoi } from 'utils/compoundApyHelpers'\n\n/**\n * This hook is handling all the calculator state and calculations.\n * UI connected to it is merely representation of the data and buttons to trigger actions\n */\n\n// Mapping from the compounding frequency button index to actual componding frequency\n// in number of compounds per day\nconst compoundingIndexToFrequency = {\n  0: 1,\n  1: 0.142857142,\n  2: 0.071428571, // once every 7 days\n  3: 0.033333333, // once every 30 days\n}\n\nconst TOKEN_PRECISION = 10\nconst USD_PRECISION = 2\n\n// Used to track/react which currency user is editing (i.e. USD amount or Token amount)\nexport enum EditingCurrency {\n  TOKEN,\n  USD,\n}\n\n// Calculator works in 2 modes\nexport enum CalculatorMode {\n  ROI_BASED_ON_PRINCIPAL, // User edits principal value and sees what ROI they get\n  PRINCIPAL_BASED_ON_ROI, // User edits ROI value and sees what principal they need to invest to reach it\n}\n\nexport interface RoiCalculatorReducerState {\n  controls: {\n    compounding: boolean // Compounding checkbox state\n    compoundingFrequency: number // Compounding frequency in number of compounds per day\n    activeCompoundingIndex: number // index of active compounding button in ButtonMenu\n    stakingDuration: number // index of active staking duration button in ButtonMenu\n    mode: CalculatorMode\n    editingCurrency: EditingCurrency\n  }\n  data: {\n    principalAsToken: string // Used as value for Inputs\n    principalAsUSD: string // Used as value for Inputs\n    roiUSD: number\n    roiTokens: number\n    roiPercentage: number // ROI expressed in percentage relative to principal\n  }\n}\n\nconst initialState: RoiCalculatorReducerState = {\n  controls: {\n    compounding: true,\n    compoundingFrequency: 1, // how many compoound in a day , e.g. 1 = once a day, 0.071 - once per 2 weeks\n    activeCompoundingIndex: 0, // active compounding selected in\n    stakingDuration: 3,\n    mode: CalculatorMode.ROI_BASED_ON_PRINCIPAL,\n    editingCurrency: EditingCurrency.USD,\n  },\n  data: {\n    principalAsToken: '0.00',\n    principalAsUSD: '',\n    roiUSD: 0,\n    roiTokens: 0,\n    roiPercentage: 0,\n  },\n}\n\nconst roiCalculatorReducer = (\n  state: RoiCalculatorReducerState,\n  action: { type: string; payload?: any },\n): RoiCalculatorReducerState => {\n  switch (action.type) {\n    case 'setStakingDuration': {\n      const controls = { ...state.controls, stakingDuration: action.payload }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'toggleCompounding': {\n      const toggledCompounding = !state.controls.compounding\n      const controls = { ...state.controls, compounding: toggledCompounding }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'setCompoundingFrequency': {\n      const { index, autoCompoundFrequency } = action.payload\n      if (autoCompoundFrequency) {\n        return {\n          ...state,\n          controls: {\n            ...state.controls,\n            compoundingFrequency: autoCompoundFrequency,\n          },\n        }\n      }\n      const compoundingFrequency = compoundingIndexToFrequency[index]\n      const controls = { ...state.controls, compoundingFrequency, activeCompoundingIndex: index }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'setPrincipal': {\n      const { principalAsUSD, principalAsToken } = action.payload\n      const data = { ...state.data, principalAsUSD, principalAsToken }\n      const controls = { ...state.controls, mode: CalculatorMode.ROI_BASED_ON_PRINCIPAL }\n      return {\n        controls,\n        data,\n      }\n    }\n    case 'setPrincipalForTargetRoi': {\n      const { principalAsUSD, principalAsToken, roiPercentage } = action.payload\n      const data = { ...state.data, principalAsUSD, principalAsToken, roiPercentage }\n      return {\n        ...state,\n        data,\n      }\n    }\n    case 'setCalculatorMode': {\n      const mode = action.payload\n      const controls = { ...state.controls, mode }\n      if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI) {\n        const roiUSD = parseFloat(state.data.roiUSD.toFixed(USD_PRECISION))\n        const data = { ...state.data, roiUSD }\n        return { controls, data }\n      }\n      return { ...state, controls }\n    }\n    case 'setRoi': {\n      const data = { ...state.data, ...action.payload }\n      return { ...state, data }\n    }\n    case 'setTargetRoi': {\n      const { roiUSD, roiTokens } = action.payload\n      const data = { ...state.data, roiUSD, roiTokens }\n      const controls = { ...state.controls, mode: CalculatorMode.PRINCIPAL_BASED_ON_ROI }\n      return { controls, data }\n    }\n    case 'toggleEditingCurrency': {\n      const currencyAfterChange =\n        state.controls.editingCurrency === EditingCurrency.USD ? EditingCurrency.TOKEN : EditingCurrency.USD\n      const controls = { ...state.controls, editingCurrency: currencyAfterChange }\n      return { ...state, controls }\n    }\n    default:\n      return state\n  }\n}\n\nconst useRoiCalculatorReducer = (\n  stakingTokenPrice: number,\n  earningTokenPrice: number,\n  apr: number,\n  autoCompoundFrequency: number,\n  performanceFee: number,\n) => {\n  const [state, dispatch] = useReducer(roiCalculatorReducer, initialState)\n  const { principalAsUSD, roiUSD } = state.data\n  const { compounding, compoundingFrequency, stakingDuration, mode } = state.controls\n\n  // If pool is auto-compounding set state's compounding frequency to this pool's auto-compound frequency\n  useEffect(() => {\n    if (autoCompoundFrequency > 0) {\n      dispatch({ type: 'setCompoundingFrequency', payload: { autoCompoundFrequency } })\n    }\n  }, [autoCompoundFrequency])\n\n  // Calculates and sets ROI whenever related values change\n  useEffect(() => {\n    if (mode === CalculatorMode.ROI_BASED_ON_PRINCIPAL) {\n      const principalInUSDAsNumber = parseFloat(principalAsUSD)\n      const compoundFrequency = compounding ? compoundingFrequency : 0\n      const interestBreakdown = getInterestBreakdown({\n        principalInUSD: principalInUSDAsNumber,\n        apr,\n        earningTokenPrice,\n        compoundFrequency,\n        performanceFee,\n      })\n      const hasInterest = !Number.isNaN(interestBreakdown[stakingDuration])\n      const roiTokens = hasInterest ? interestBreakdown[stakingDuration] : 0\n      const roiAsUSD = hasInterest ? roiTokens * earningTokenPrice : 0\n      const roiPercentage = hasInterest\n        ? getRoi({\n            amountEarned: roiAsUSD,\n            amountInvested: principalInUSDAsNumber,\n          })\n        : 0\n      dispatch({ type: 'setRoi', payload: { roiUSD: roiAsUSD, roiTokens, roiPercentage } })\n    }\n  }, [principalAsUSD, apr, stakingDuration, earningTokenPrice, performanceFee, compounding, compoundingFrequency, mode])\n\n  // Calculates and sets principal based on expected ROI value\n  useEffect(() => {\n    if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI) {\n      const principalForExpectedRoi = getPrincipalForInterest(\n        roiUSD,\n        apr,\n        compounding ? compoundingFrequency : 0,\n        performanceFee,\n      )\n      const principalUSD = !Number.isNaN(principalForExpectedRoi[stakingDuration])\n        ? principalForExpectedRoi[stakingDuration]\n        : 0\n      const principalToken = new BigNumber(principalUSD).div(stakingTokenPrice)\n      const roiPercentage = getRoi({\n        amountEarned: roiUSD,\n        amountInvested: principalUSD,\n      })\n      dispatch({\n        type: 'setPrincipalForTargetRoi',\n        payload: {\n          principalAsUSD: principalUSD.toFixed(USD_PRECISION),\n          principalAsToken: principalToken.toFixed(TOKEN_PRECISION),\n          roiPercentage,\n        },\n      })\n    }\n  }, [stakingDuration, apr, compounding, compoundingFrequency, mode, roiUSD, stakingTokenPrice, performanceFee])\n\n  // Handler for compounding frequnecy buttons\n  const setCompoundingFrequency = (index: number) => {\n    dispatch({ type: 'setCompoundingFrequency', payload: { index } })\n  }\n\n  // Handler for principal input when in USD mode\n  const setPrincipalFromUSDValue = (amount: string) => {\n    const principalAsTokenBN = new BigNumber(amount).div(stakingTokenPrice)\n    const principalAsToken = principalAsTokenBN.gt(0) ? principalAsTokenBN.toFixed(TOKEN_PRECISION) : '0.00'\n    dispatch({ type: 'setPrincipal', payload: { principalAsUSD: amount, principalAsToken } })\n  }\n\n  // Handler for principal input when in Token mode\n  const setPrincipalFromTokenValue = useCallback(\n    (amount: string) => {\n      const principalAsUsdBN = new BigNumber(amount).times(stakingTokenPrice)\n      const principalAsUsdString = principalAsUsdBN.gt(0) ? principalAsUsdBN.toFixed(USD_PRECISION) : '0.00'\n      dispatch({\n        type: 'setPrincipal',\n        payload: { principalAsUSD: principalAsUsdString, principalAsToken: amount },\n      })\n    },\n    [stakingTokenPrice],\n  )\n\n  // Handler for staking duration buttons\n  const setStakingDuration = (stakingDurationIndex: number) => {\n    dispatch({ type: 'setStakingDuration', payload: stakingDurationIndex })\n  }\n\n  // Handler for compounding checkbox\n  const toggleCompounding = () => {\n    dispatch({ type: 'toggleCompounding' })\n  }\n\n  // Handler for principal input mode switch\n  const toggleEditingCurrency = () => {\n    dispatch({ type: 'toggleEditingCurrency' })\n  }\n\n  const setCalculatorMode = (modeToSet: CalculatorMode) => {\n    dispatch({ type: 'setCalculatorMode', payload: modeToSet })\n  }\n\n  // Handler for ROI input\n  const setTargetRoi = (amount: string) => {\n    const targetRoiAsTokens = new BigNumber(amount).div(stakingTokenPrice)\n    dispatch({\n      type: 'setTargetRoi',\n      payload: { roiUSD: amount, roiTokens: targetRoiAsTokens.isNaN() ? 0 : targetRoiAsTokens.toNumber() },\n    })\n  }\n\n  return {\n    state,\n    setPrincipalFromUSDValue,\n    setPrincipalFromTokenValue,\n    setStakingDuration,\n    toggleCompounding,\n    toggleEditingCurrency,\n    setCompoundingFrequency,\n    setCalculatorMode,\n    setTargetRoi,\n  }\n}\n\nexport default useRoiCalculatorReducer\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Flex, Box, Text, ExpandableLabel, LinkExternal, Grid, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getApy } from 'utils/compoundApyHelpers'\n\nconst Footer = styled(Flex)`\n  width: 100%;\n  background: ${({ theme }) => theme.colors.dropdown};\n`\n\nconst BulletList = styled.ul`\n  list-style-type: none;\n  margin-top: 16px;\n  padding: 0;\n  li {\n    margin: 0;\n    padding: 0;\n  }\n  li::before {\n    content: '•';\n    margin-right: 4px;\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n  li::marker {\n    font-size: 12px;\n  }\n`\n\ninterface RoiCalculatorFooterProps {\n  isFarm: boolean\n  apr: number\n  displayApr: string\n  autoCompoundFrequency: number\n  multiplier: string\n  linkLabel: string\n  linkHref: string\n  performanceFee: number\n}\n\nconst RoiCalculatorFooter: React.FC<RoiCalculatorFooterProps> = ({\n  isFarm,\n  apr,\n  displayApr,\n  autoCompoundFrequency,\n  multiplier,\n  linkLabel,\n  linkHref,\n  performanceFee,\n}) => {\n  const [isExpanded, setIsExpanded] = useState(false)\n  const { t } = useTranslation()\n  const {\n    targetRef: multiplierRef,\n    tooltip: multiplierTooltip,\n    tooltipVisible: multiplierTooltipVisible,\n  } = useTooltip(\n    <>\n      <Text>\n        {t(\n          'The Multiplier represents the proportion of CAKE rewards each farm receives, as a proportion of the CAKE produced each block.',\n        )}\n      </Text>\n      <Text my=\"24px\">\n        {t('For example, if a 1x farm received 1 CAKE per block, a 40x farm would receive 40 CAKE per block.')}\n      </Text>\n      <Text>{t('This amount is already included in all APR calculations for the farm.')}</Text>\n    </>,\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  const gridRowCount = isFarm ? 4 : 2\n  const apy = (getApy(apr, autoCompoundFrequency > 0 ? autoCompoundFrequency : 1, 365, performanceFee) * 100).toFixed(2)\n\n  return (\n    <Footer p=\"16px\" flexDirection=\"column\">\n      <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded((prev) => !prev)}>\n        {isExpanded ? t('Hide') : t('Details')}\n      </ExpandableLabel>\n      {isExpanded && (\n        <Box px=\"8px\">\n          <Grid gridTemplateColumns=\"2.5fr 1fr\" gridRowGap=\"8px\" gridTemplateRows={`repeat(${gridRowCount}, auto)`}>\n            {isFarm && (\n              <>\n                <Text color=\"textSubtle\" small>\n                  {t('APR (incl. LP rewards)')}\n                </Text>\n                <Text small textAlign=\"right\">\n                  {displayApr}%\n                </Text>\n              </>\n            )}\n            <Text color=\"textSubtle\" small>\n              {isFarm ? t('Base APR (CAKE yield only)') : t('APR')}\n            </Text>\n            <Text small textAlign=\"right\">\n              {apr.toFixed(2)}%\n            </Text>\n            <Text color=\"textSubtle\" small>\n              {t('APY (%compoundTimes%x daily compound)', {\n                compoundTimes: autoCompoundFrequency > 0 ? autoCompoundFrequency : 1,\n              })}\n            </Text>\n            <Text small textAlign=\"right\">\n              {apy}%\n            </Text>\n            {isFarm && (\n              <>\n                <Text color=\"textSubtle\" small>\n                  {t('Farm Multiplier')}\n                </Text>\n                <Flex justifyContent=\"flex-end\" alignItems=\"flex-end\">\n                  <Text small textAlign=\"right\" mr=\"4px\">\n                    {multiplier}\n                  </Text>\n                  <span ref={multiplierRef}>\n                    <HelpIcon color=\"textSubtle\" width=\"16px\" height=\"16px\" />\n                  </span>\n                  {multiplierTooltipVisible && multiplierTooltip}\n                </Flex>\n              </>\n            )}\n          </Grid>\n          <BulletList>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Calculated based on current rates.')}\n              </Text>\n            </li>\n            {isFarm && (\n              <li>\n                <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('LP rewards: 0.17% trading fees, distributed proportionally among LP token holders.')}\n                </Text>\n              </li>\n            )}\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t(\n                  'All figures are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n                )}\n              </Text>\n            </li>\n            {performanceFee > 0 && (\n              <li>\n                <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('All estimated rates take into account this pool’s %fee%% performance fee', {\n                    fee: performanceFee,\n                  })}\n                </Text>\n              </li>\n            )}\n          </BulletList>\n          <Flex justifyContent=\"center\" mt=\"24px\">\n            <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n          </Flex>\n        </Box>\n      )}\n    </Footer>\n  )\n}\n\nexport default RoiCalculatorFooter\n","import React, { useRef, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Box, Flex, Text, Input, CheckmarkIcon, PencilIcon, IconButton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { CalculatorMode, RoiCalculatorReducerState } from './useRoiCalculatorReducer'\n\nconst MILLION = 1000000\nconst TRILLION = 1000000000000\n\nconst RoiCardWrapper = styled(Box)`\n  background: linear-gradient(180deg, #53dee9, #7645d9);\n  padding: 1px;\n  width: 100%;\n  border-radius: ${({ theme }) => theme.radii.default};\n`\n\nconst RoiCardInner = styled(Box)`\n  height: 120px;\n  padding: 24px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n`\n\nconst RoiInputContainer = styled(Box)`\n  position: relative;\n  & > input {\n    padding-left: 28px;\n    max-width: 70%;\n  }\n  &:before {\n    position: absolute;\n    content: '$';\n    color: ${({ theme }) => theme.colors.textSubtle};\n    left: 16px;\n    top: 8px;\n  }\n`\n\nconst RoiDisplayContainer = styled(Flex)`\n  max-width: 82%;\n  margin-right: 8px;\n`\n\nconst RoiDollarAmount = styled(Text)<{ fadeOut: boolean }>`\n  position: relative;\n  overflow-x: auto;\n  &::-webkit-scrollbar {\n    height: 0px;\n  }\n\n  ${({ fadeOut, theme }) =>\n    fadeOut &&\n    `\n      &:after {\n        background: linear-gradient(\n          to right,\n          ${theme.colors.background}00,\n          ${theme.colors.background}E6\n        );\n        content: '';\n        height: 100%;\n        pointer-events: none;\n        position: absolute;\n        right: 0;\n        top: 0;\n        width: 40px;\n      }\n  `}\n`\n\ninterface RoiCardProps {\n  earningTokenSymbol: string\n  calculatorState: RoiCalculatorReducerState\n  setTargetRoi: (amount: string) => void\n  setCalculatorMode: (mode: CalculatorMode) => void\n}\n\nconst RoiCard: React.FC<RoiCardProps> = ({ earningTokenSymbol, calculatorState, setTargetRoi, setCalculatorMode }) => {\n  const inputRef = useRef<HTMLInputElement | null>(null)\n  const { roiUSD, roiTokens, roiPercentage } = calculatorState.data\n  const { mode } = calculatorState.controls\n\n  const { t } = useTranslation()\n\n  useEffect(() => {\n    if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI && inputRef.current) {\n      inputRef.current.focus()\n    }\n  }, [mode])\n\n  const onEnterEditing = () => {\n    setCalculatorMode(CalculatorMode.PRINCIPAL_BASED_ON_ROI)\n  }\n\n  const onExitRoiEditing = () => {\n    setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL)\n  }\n  const handleExpectedRoiChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTargetRoi(event.currentTarget.value)\n  }\n  return (\n    <RoiCardWrapper>\n      <RoiCardInner>\n        <Text fontSize=\"12px\" color=\"secondary\" bold textTransform=\"uppercase\">\n          {t('ROI at current rates')}\n        </Text>\n        <Flex justifyContent=\"space-between\" mt=\"4px\" height=\"36px\">\n          {mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI ? (\n            <>\n              <RoiInputContainer>\n                <Input\n                  ref={inputRef}\n                  type=\"number\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  value={roiUSD}\n                  placeholder=\"0.0\"\n                  onChange={handleExpectedRoiChange}\n                />\n              </RoiInputContainer>\n              <IconButton scale=\"sm\" variant=\"text\" onClick={onExitRoiEditing}>\n                <CheckmarkIcon color=\"primary\" />\n              </IconButton>\n            </>\n          ) : (\n            <>\n              <RoiDisplayContainer onClick={onEnterEditing}>\n                {/* Dollar sign is separate cause its not supposed to scroll with a number if number is huge */}\n                <Text fontSize=\"24px\" bold>\n                  $\n                </Text>\n                <RoiDollarAmount fontSize=\"24px\" bold fadeOut={roiUSD > TRILLION}>\n                  {roiUSD.toLocaleString('en', {\n                    minimumFractionDigits: roiUSD > MILLION ? 0 : 2,\n                    maximumFractionDigits: roiUSD > MILLION ? 0 : 2,\n                  })}\n                </RoiDollarAmount>\n              </RoiDisplayContainer>\n              <IconButton scale=\"sm\" variant=\"text\" onClick={onEnterEditing}>\n                <PencilIcon color=\"primary\" />\n              </IconButton>\n            </>\n          )}\n        </Flex>\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          ~ {roiTokens} {earningTokenSymbol} (\n          {roiPercentage.toLocaleString('en', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\n          %)\n        </Text>\n      </RoiCardInner>\n    </RoiCardWrapper>\n  )\n}\n\nexport default RoiCard\n","import React, { useState, useEffect } from 'react'\nimport { Flex, ArrowDownIcon, ArrowUpIcon } from '@pancakeswap/uikit'\nimport styled, { keyframes } from 'styled-components'\nimport { CalculatorMode, RoiCalculatorReducerState } from './useRoiCalculatorReducer'\n\nconst rotate = keyframes`\n  0% {\n    transform: scale(1);\n    stroke-width: 0;\n  }\n  50% {\n    transform: scale(1.3);\n    stroke-width: 2;\n  }\n  100% {\n    transform: scale(1);\n    stroke-width: 0;\n  }\n`\n\nconst ArrowContainer = styled(Flex)`\n  & > svg {\n    animation: 0.2s ${rotate} linear;\n    stroke: ${({ theme }) => `${theme.colors.primary}3D`};\n    stroke-width: 0;\n  }\n`\n\ninterface AnimatedArrowProps {\n  calculatorState: RoiCalculatorReducerState\n}\n\nconst AnimatedArrow: React.FC<AnimatedArrowProps> = ({ calculatorState }) => {\n  const [key, setKey] = useState('roiArrow-0')\n  const { mode } = calculatorState.controls\n\n  // Trigger animation on state change\n  useEffect(() => {\n    setKey((prevKey) => {\n      const prevId = parseInt(prevKey.split('-')[1], 10)\n      return `roiArrow-${prevId + 1}`\n    })\n  }, [calculatorState])\n\n  return (\n    <ArrowContainer justifyContent=\"center\" my=\"24px\" key={key}>\n      {mode === CalculatorMode.ROI_BASED_ON_PRINCIPAL ? (\n        <ArrowDownIcon width=\"24px\" height=\"24px\" color=\"textSubtle\" />\n      ) : (\n        <ArrowUpIcon width=\"24px\" height=\"24px\" color=\"textSubtle\" />\n      )}\n    </ArrowContainer>\n  )\n}\n\nexport default AnimatedArrow\n","import React, { useRef, useEffect } from 'react'\nimport styled from 'styled-components'\nimport {\n  Modal,\n  Text,\n  Button,\n  Flex,\n  ButtonMenu,\n  Checkbox,\n  BalanceInput,\n  HelpIcon,\n  ButtonMenuItem,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport RoiCalculatorFooter from './RoiCalculatorFooter'\nimport RoiCard from './RoiCard'\nimport useRoiCalculatorReducer, { CalculatorMode, EditingCurrency } from './useRoiCalculatorReducer'\nimport AnimatedArrow from './AnimatedArrow'\n\ninterface RoiCalculatorModalProps {\n  onDismiss?: () => void\n  onBack?: () => void\n  earningTokenPrice: number\n  apr: number\n  displayApr?: string\n  linkLabel: string\n  linkHref: string\n  stakingTokenBalance: BigNumber\n  stakingTokenSymbol: string\n  stakingTokenPrice: number\n  earningTokenSymbol?: string\n  multiplier?: string\n  autoCompoundFrequency?: number\n  performanceFee?: number\n  isFarm?: boolean\n  initialValue?: string\n}\n\nconst StyledModal = styled(Modal)`\n  width: 345px;\n  & > :nth-child(2) {\n    padding: 0;\n  }\n`\n\nconst ScrollableContainer = styled.div`\n  padding: 24px;\n  max-height: 500px;\n  overflow-y: auto;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-height: none;\n  }\n`\n\nconst FullWidthButtonMenu = styled(ButtonMenu)<{ disabled?: boolean }>`\n  width: 100%;\n\n  & > button {\n    width: 100%;\n  }\n\n  opacity: ${({ disabled }) => (disabled ? 0.5 : 1)};\n`\n\nconst RoiCalculatorModal: React.FC<RoiCalculatorModalProps> = ({\n  onDismiss,\n  onBack,\n  earningTokenPrice,\n  apr,\n  displayApr,\n  linkLabel,\n  linkHref,\n  stakingTokenBalance,\n  stakingTokenSymbol,\n  stakingTokenPrice,\n  multiplier,\n  initialValue,\n  earningTokenSymbol = 'hMOCHI',\n  autoCompoundFrequency = 0,\n  performanceFee = 0,\n  isFarm = false,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useActiveWeb3React()\n  const balanceInputRef = useRef<HTMLInputElement | null>(null)\n\n  const {\n    state,\n    setPrincipalFromUSDValue,\n    setPrincipalFromTokenValue,\n    setStakingDuration,\n    toggleCompounding,\n    toggleEditingCurrency,\n    setCompoundingFrequency,\n    setCalculatorMode,\n    setTargetRoi,\n  } = useRoiCalculatorReducer(stakingTokenPrice, earningTokenPrice, apr, autoCompoundFrequency, performanceFee)\n\n  const { compounding, activeCompoundingIndex, stakingDuration, editingCurrency } = state.controls\n  const { principalAsUSD, principalAsToken } = state.data\n\n  // Auto-focus input on opening modal\n  useEffect(() => {\n    if (balanceInputRef.current) {\n      balanceInputRef.current.focus()\n    }\n  }, [])\n\n  // If user comes to calculator from staking modal - initialize with whatever they put in there\n  useEffect(() => {\n    if (initialValue) {\n      setPrincipalFromTokenValue(initialValue)\n    }\n  }, [initialValue, setPrincipalFromTokenValue])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    isFarm\n      ? t('“My Balance” here includes both LP Tokens in your wallet, and LP Tokens already staked in this farm.')\n      : t(\n          '“My Balance” here includes both %assetSymbol% in your wallet, and %assetSymbol% already staked in this pool.',\n          { assetSymbol: stakingTokenSymbol },\n        ),\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  const onBalanceFocus = () => {\n    setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL)\n  }\n\n  const editingUnit = editingCurrency === EditingCurrency.TOKEN ? stakingTokenSymbol : 'USD'\n  const editingValue = editingCurrency === EditingCurrency.TOKEN ? principalAsToken : principalAsUSD\n  const conversionUnit = editingCurrency === EditingCurrency.TOKEN ? 'USD' : stakingTokenSymbol\n  const conversionValue = editingCurrency === EditingCurrency.TOKEN ? principalAsUSD : principalAsToken\n  const onUserInput = editingCurrency === EditingCurrency.TOKEN ? setPrincipalFromTokenValue : setPrincipalFromUSDValue\n\n  return (\n    <StyledModal\n      title={t('ROI Calculator')}\n      onDismiss={onBack || onDismiss}\n      onBack={onBack ?? null}\n      headerBackground=\"gradients.cardHeader\"\n    >\n      <ScrollableContainer>\n        <Flex flexDirection=\"column\" mb=\"8px\">\n          <Text color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n            {t('%asset% staked', { asset: stakingTokenSymbol })}\n          </Text>\n          <BalanceInput\n            currencyValue={`${conversionValue} ${conversionUnit}`}\n            innerRef={balanceInputRef}\n            placeholder=\"0.00\"\n            value={editingValue}\n            unit={editingUnit}\n            onUserInput={onUserInput}\n            switchEditingUnits={toggleEditingCurrency}\n            onFocus={onBalanceFocus}\n          />\n          <Flex justifyContent=\"space-between\" mt=\"8px\">\n            <Button\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"68px\"\n              variant=\"tertiary\"\n              onClick={() => setPrincipalFromUSDValue('100')}\n            >\n              $100\n            </Button>\n            <Button\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"68px\"\n              variant=\"tertiary\"\n              onClick={() => setPrincipalFromUSDValue('1000')}\n            >\n              $1000\n            </Button>\n            <Button\n              disabled={stakingTokenBalance.lte(0) || !account}\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"128px\"\n              variant=\"tertiary\"\n              onClick={() =>\n                setPrincipalFromUSDValue(getBalanceNumber(stakingTokenBalance.times(stakingTokenPrice)).toString())\n              }\n            >\n              {t('My Balance').toLocaleUpperCase()}\n            </Button>\n            <span ref={targetRef}>\n              <HelpIcon width=\"16px\" height=\"16px\" color=\"textSubtle\" />\n            </span>\n            {tooltipVisible && tooltip}\n          </Flex>\n          <Text mt=\"24px\" color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n            {t('Staked for')}\n          </Text>\n          <FullWidthButtonMenu activeIndex={stakingDuration} onItemClick={setStakingDuration} scale=\"sm\">\n            <ButtonMenuItem variant=\"tertiary\">{t('1D')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('7D')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('30D')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('1Y')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('5Y')}</ButtonMenuItem>\n          </FullWidthButtonMenu>\n          {autoCompoundFrequency === 0 && (\n            <>\n              <Text mt=\"24px\" color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n                {t('Compounding every')}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Flex flex=\"1\">\n                  <Checkbox scale=\"sm\" checked={compounding} onChange={toggleCompounding} />\n                </Flex>\n                <Flex flex=\"6\">\n                  <FullWidthButtonMenu\n                    disabled={!compounding}\n                    activeIndex={activeCompoundingIndex}\n                    onItemClick={setCompoundingFrequency}\n                    scale=\"sm\"\n                  >\n                    <ButtonMenuItem>{t('1D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('7D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('14D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('30D')}</ButtonMenuItem>\n                  </FullWidthButtonMenu>\n                </Flex>\n              </Flex>\n            </>\n          )}\n        </Flex>\n        <AnimatedArrow calculatorState={state} />\n        <Flex>\n          <RoiCard\n            earningTokenSymbol={earningTokenSymbol}\n            calculatorState={state}\n            setTargetRoi={setTargetRoi}\n            setCalculatorMode={setCalculatorMode}\n          />\n        </Flex>\n      </ScrollableContainer>\n      <RoiCalculatorFooter\n        isFarm={isFarm}\n        apr={apr}\n        displayApr={displayApr}\n        autoCompoundFrequency={autoCompoundFrequency}\n        multiplier={multiplier}\n        linkLabel={linkLabel}\n        linkHref={linkHref}\n        performanceFee={performanceFee}\n      />\n    </StyledModal>\n  )\n}\n\nexport default RoiCalculatorModal\n","import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { ConnectorNames, connectorLocalStorageKey } from '@pancakeswap/uikit'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\nimport useToast from 'hooks/useToast'\nimport { profileClear } from 'state/profile'\nimport { useAppDispatch } from 'state'\nimport { useTranslation } from 'contexts/Localization'\n\nconst useAuth = () => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback(\n    (connectorID: ConnectorNames) => {\n      const connector = connectorsByName[connectorID]\n      if (connector) {\n        activate(connector, async (error: Error) => {\n          if (error instanceof UnsupportedChainIdError) {\n            const hasSetup = await setupNetwork()\n            if (hasSetup) {\n              activate(connector)\n            }\n          } else {\n            window.localStorage.removeItem(connectorLocalStorageKey)\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n              toastError(t('Provider Error'), t('No provider was found'))\n            } else if (\n              error instanceof UserRejectedRequestErrorInjected ||\n              error instanceof UserRejectedRequestErrorWalletConnect\n            ) {\n              if (connector instanceof WalletConnectConnector) {\n                const walletConnector = connector as WalletConnectConnector\n                walletConnector.walletConnectProvider = null\n              }\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\n            } else {\n              toastError(error.name, error.message)\n            }\n          }\n        })\n      } else {\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\n      }\n    },\n    [t, activate, toastError],\n  )\n\n  const logout = useCallback(() => {\n    dispatch(profileClear())\n    deactivate()\n    // This localStorage key is set by @web3-react/walletconnect-connector\n    if (window.localStorage.getItem('walletconnect')) {\n      connectorsByName.walletconnect.close()\n      connectorsByName.walletconnect.walletConnectProvider = null\n    }\n  }, [deactivate, dispatch])\n\n  return { login, logout }\n}\n\nexport default useAuth\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = window.ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error('Failed to setup the network in Metamask:', error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\n  const tokenAdded = await window.ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\n\nexport function currencyId(currency: Currency): string {\n  if (currency === ETHER) return 'BNB'\n  if (currency instanceof Token) return currency.address\n  throw new Error('invalid currency')\n}\n\nexport default currencyId\n","import { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../index'\n\nexport function useBlockNumber(): number | undefined {\n  const { chainId } = useActiveWeb3React()\n\n  return useSelector((state: AppState) => state.application.blockNumber[chainId ?? -1])\n}\n\nexport default useBlockNumber\n","/* eslint-disable no-case-declarations */\n/**\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\n * @param uri to convert to fetch-able http url\n */\nexport default function uriToHttp(uri: string): string[] {\n  const protocol = uri.split(':')[0].toLowerCase()\n  switch (protocol) {\n    case 'https':\n      return [uri]\n    case 'http':\n      return [`https${uri.substr(4)}`, uri]\n    case 'ipfs':\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\n    case 'ipns':\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\n    default:\n      return []\n  }\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n","export const TICKET_LIMIT_PER_REQUEST = 2500\nexport const NUM_ROUNDS_TO_CHECK_FOR_REWARDS = 3\nexport const NUM_ROUNDS_TO_FETCH_FROM_NODES = 3\n","import React, { useCallback } from 'react'\nimport { ChainId, Currency, Token } from '@pancakeswap/sdk'\nimport styled from 'styled-components'\nimport {\n  Button,\n  Text,\n  ErrorIcon,\n  ArrowUpIcon,\n  MetamaskIcon,\n  Flex,\n  Box,\n  Link,\n  Spinner,\n  Modal,\n  InjectedModalProps,\n  AutoRenewIcon\n} from '@pancakeswap/uikit'\nimport { registerToken } from 'utils/wallet'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { RowFixed } from '../Layout/Row'\nimport { AutoColumn, ColumnCenter } from '../Layout/Column'\nimport { getBscScanLink } from '../../utils'\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\nconst Section = styled(AutoColumn)`\n  padding: 24px;\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 24px 0;\n`\n\nfunction ConfirmationPendingContent({ pendingText }: { pendingText: string }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <ConfirmedIcon>\n        {/* <Spinner /> */}\n        <AutoRenewIcon spin color=\"white\" mt=\"5px\" width=\"100px\" />\n      </ConfirmedIcon>\n      <AutoColumn gap=\"12px\" justify=\"center\">\n        <Text fontSize=\"20px\">{t('Waiting For Confirmation')}</Text>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text bold small textAlign=\"center\">\n            {pendingText}\n          </Text>\n        </AutoColumn>\n        <Text small color=\"textSubtle\" textAlign=\"center\">\n          {t('Confirm this transaction in your wallet')}\n        </Text>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nfunction TransactionSubmittedContent({\n  onDismiss,\n  chainId,\n  hash,\n  currencyToAdd,\n}: {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: ChainId\n  currencyToAdd?: Currency | undefined\n}) {\n  const { library } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const token: Token | undefined = wrappedCurrency(currencyToAdd, chainId)\n\n  return (\n    <Wrapper>\n      <Section>\n        <ConfirmedIcon>\n          <ArrowUpIcon strokeWidth={0.5} width=\"90px\" color=\"primary\" />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text fontSize=\"20px\">{t('Transaction Submitted')}</Text>\n          {chainId && hash && (\n            <Link external small href={getBscScanLink(hash, 'transaction', chainId)}>\n              {t('View on Explorer')}\n            </Link>\n          )}\n          {currencyToAdd && library?.provider?.isMetaMask && (\n            <Button\n              variant=\"tertiary\"\n              mt=\"12px\"\n              width=\"fit-content\"\n              onClick={() => registerToken(token.address, token.symbol, token.decimals)}\n            >\n              <RowFixed>\n                {t('Add %asset% to Metamask', { asset: currencyToAdd.symbol })}\n                <MetamaskIcon width=\"16px\" ml=\"6px\" />\n              </RowFixed>\n            </Button>\n          )}\n          <Button onClick={onDismiss} mt=\"20px\">\n            {t('Close')}\n          </Button>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport function ConfirmationModalContent({\n  bottomContent,\n  topContent,\n}: {\n  topContent: () => React.ReactNode\n  bottomContent: () => React.ReactNode\n}) {\n  return (\n    <Wrapper>\n      <Box>{topContent()}</Box>\n      <Box>{bottomContent()}</Box>\n    </Wrapper>\n  )\n}\n\nexport function TransactionErrorContent({ message, onDismiss }: { message: string; onDismiss: () => void }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <AutoColumn justify=\"center\">\n        <ErrorIcon color=\"failure\" width=\"64px\" />\n        <Text color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\n          {message}\n        </Text>\n      </AutoColumn>\n\n      <Flex justifyContent=\"center\" pt=\"24px\">\n        <Button onClick={onDismiss}>{t('Dismiss')}</Button>\n      </Flex>\n    </Wrapper>\n  )\n}\n\ninterface ConfirmationModalProps {\n  title: string\n  customOnDismiss?: () => void\n  hash: string | undefined\n  content: () => React.ReactNode\n  attemptingTxn: boolean\n  pendingText: string\n  currencyToAdd?: Currency | undefined\n}\n\nconst TransactionConfirmationModal: React.FC<InjectedModalProps & ConfirmationModalProps> = ({\n  title,\n  onDismiss,\n  customOnDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  content,\n  currencyToAdd,\n}) => {\n  const { chainId } = useActiveWeb3React()\n\n  const handleDismiss = useCallback(() => {\n    if (customOnDismiss) {\n      customOnDismiss()\n    }\n    onDismiss()\n  }, [customOnDismiss, onDismiss])\n\n  if (!chainId) return null\n\n  return (\n    <Modal title={title} headerBackground=\"gradients.cardHeader\" onDismiss={handleDismiss}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent pendingText={pendingText} />\n      ) : hash ? (\n        <TransactionSubmittedContent\n          chainId={chainId}\n          hash={hash}\n          onDismiss={onDismiss}\n          currencyToAdd={currencyToAdd}\n        />\n      ) : (\n        content()\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionConfirmationModal\n","import { isAddress } from '../../utils'\nimport useENSAddress from './useENSAddress'\nimport useENSName from './useENSName'\n\n/**\n * Given a name or address, does a lookup to resolve to an address and name\n * @param nameOrAddress ENS name or address\n */\nexport default function useENS(nameOrAddress?: string | null): {\n  loading: boolean\n  address: string | null\n  name: string | null\n} {\n  const validated = isAddress(nameOrAddress)\n  const reverseLookup = useENSName(validated || undefined)\n  const lookup = useENSAddress(nameOrAddress)\n\n  return {\n    loading: reverseLookup.loading || lookup.loading,\n    address: validated || lookup.address,\n    name: reverseLookup.ENSName ? reverseLookup.ENSName : !validated && lookup.address ? nameOrAddress || null : null,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport { isAddress } from '../../utils'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a reverse lookup for an address to find its ENS name.\n * Note this is not the same as looking up an ENS name to find an address.\n */\nexport default function useENSName(address?: string): { ENSName: string | null; loading: boolean } {\n  const debouncedAddress = useDebounce(address, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedAddress || !isAddress(debouncedAddress)) return [undefined]\n    try {\n      return debouncedAddress ? [namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedAddress])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const name = useSingleCallResult(resolverContract, 'name', ensNodeArgument)\n\n  const changed = debouncedAddress !== address\n  return {\n    ENSName: changed ? null : name.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || name.loading,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a lookup for an ENS name to find its address.\n */\nexport default function useENSAddress(ensName?: string | null): { loading: boolean; address: string | null } {\n  const debouncedName = useDebounce(ensName, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedName) return [undefined]\n    try {\n      return debouncedName ? [namehash(debouncedName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument)\n\n  const changed = debouncedName !== ensName\n  return {\n    address: changed ? null : addr.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || addr.loading,\n  }\n}\n","import { Trade, Percent, currencyEquals } from '@pancakeswap/sdk'\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../config/constants/index'\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(\n  tradeA: Trade | undefined | null,\n  tradeB: Trade | undefined | null,\n  minimumDelta: Percent = ZERO_PERCENT,\n): boolean | undefined {\n  if (tradeA && !tradeB) return false\n  if (tradeB && !tradeA) return true\n  if (!tradeA || !tradeB) return undefined\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)\n  ) {\n    throw new Error('Trades are not comparable')\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\n  }\n  return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice)\n}\n\nexport default isTradeBetter\n","/* eslint-disable no-param-reassign */\nimport { isTradeBetter } from 'utils/trades'\nimport { Currency, CurrencyAmount, Pair, Token, Trade } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useUserSingleHopOnly } from 'state/user/hooks'\nimport {\n  BASES_TO_CHECK_TRADES_AGAINST,\n  CUSTOM_BASES,\n  BETTER_TRADE_LESS_HOPS_THRESHOLD,\n  ADDITIONAL_BASES,\n} from '../config/constants'\nimport { PairState, usePairs } from './usePairs'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nimport { useUnsupportedTokens } from './Tokens'\n\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n    : [undefined, undefined]\n\n  const bases: Token[] = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs: [Token, Token][] = useMemo(\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\n    [bases],\n  )\n\n  const allPairCombinations: [Token, Token][] = useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            .filter(([tokenA_, tokenB_]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n\n              const customBasesA: Token[] | undefined = customBases?.[tokenA_.address]\n              const customBasesB: Token[] | undefined = customBases?.[tokenB_.address]\n\n              if (!customBasesA && !customBasesB) return true\n\n              if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId],\n  )\n\n  const allPairs = usePairs(allPairCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {}),\n      ),\n    [allPairs],\n  )\n}\n\nconst MAX_HOPS = 3\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade: Trade | null =\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        // if current trade is best yet, save it\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n\n    return null\n  }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly])\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade =\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n    return null\n  }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly])\n}\n\nexport function useIsTransactionUnsupported(currencyIn?: Currency, currencyOut?: Currency): boolean {\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n  const { chainId } = useActiveWeb3React()\n\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\n\n  // if unsupported list loaded & either token on list, mark as unsupported\n  if (unsupportedTokens) {\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n      return true\n    }\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n      return true\n    }\n  }\n\n  return false\n}\n","import { useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { State, ProfileState } from '../types'\nimport { fetchProfile } from '.'\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchProfile(account))\n  }, [account, dispatch])\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n","import { ethers, Contract, Overrides } from 'ethers'\n\n/**\n * Estimate the gas needed to call a function, and add a 10% margin\n * @param contract Used to perform the call\n * @param methodName The name of the methode called\n * @param gasMarginPer10000 The gasMargin per 10000 (i.e. 10% -> 1000)\n * @param args An array of arguments to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const estimateGas = async (\n  contract: Contract,\n  methodName: string,\n  methodArgs: any[],\n  gasMarginPer10000: number,\n) => {\n  if (!contract[methodName]) {\n    throw new Error(`Method ${methodName} doesn't exist on ${contract.address}`)\n  }\n  const rawGasEstimation = await contract.estimateGas[methodName](...methodArgs)\n  // By convention, ethers.BigNumber values are multiplied by 1000 to avoid dealing with real numbers\n  const gasEstimation = rawGasEstimation\n    .mul(ethers.BigNumber.from(10000).add(ethers.BigNumber.from(gasMarginPer10000)))\n    .div(ethers.BigNumber.from(10000))\n  return gasEstimation\n}\n\n/**\n * Perform a contract call with a gas value returned from estimateGas\n * @param contract Used to perform the call\n * @param methodName The name of the method called\n * @param methodArgs An array of arguments to pass to the method\n * @param overrides An overrides object to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const callWithEstimateGas = async (\n  contract: Contract,\n  methodName: string,\n  methodArgs: any[] = [],\n  overrides: Overrides = {},\n  gasMarginPer10000 = 1000,\n): Promise<ethers.providers.TransactionResponse> => {\n  const gasEstimation = estimateGas(contract, methodName, methodArgs, gasMarginPer10000)\n  const tx = await contract[methodName](...methodArgs, {\n    gasLimit: gasEstimation,\n    ...overrides,\n  })\n  return tx\n}\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\nimport getGasPrice from 'utils/getGasPrice'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nexport const stakeFarm = async (masterChefContract, pid, amount) => {\n  const gasPrice = getGasPrice()\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.enterStaking(value, { ...options, gasPrice })\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, value, { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const unstakeFarm = async (masterChefContract, pid, amount) => {\n  const gasPrice = getGasPrice()\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.leaveStaking(value, { ...options, gasPrice })\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.withdraw(pid, value, { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const harvestFarm = async (masterChefContract, pid) => {\n  const gasPrice = getGasPrice()\n  if (pid === 0) {\n    const tx = await await masterChefContract.leaveStaking('0', { ...options, gasPrice })\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, '0', { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const tokenUpgradeSwap = async (swapContract, amount) => {\n  const gasPrice = getGasPrice()\n\n  const tx = await swapContract.swap(amount, { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n","/* eslint-disable import/prefer-default-export */\nimport BigNumber from 'bignumber.js'\nimport pools from 'config/constants/pools'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport multicall from '../multicall'\nimport { simpleRpcProvider } from '../providers'\nimport { getAddress } from '../addressHelpers'\n\n/**\n * Returns the total number of pools that were active at a given block\n */\nexport const getActivePools = async (block?: number) => {\n  const eligiblePools = pools\n    .filter((pool) => pool.sousId !== 0)\n    .filter((pool) => pool.isFinished === false || pool.isFinished === undefined)\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  const startBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress),\n    name: 'startBlock',\n  }))\n  const endBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress),\n    name: 'bonusEndBlock',\n  }))\n  const startBlocks = await multicall(sousChefV2, startBlockCalls)\n  const endBlocks = await multicall(sousChefV2, endBlockCalls)\n\n  return eligiblePools.reduce((accum, poolCheck, index) => {\n    const startBlock = startBlocks[index] ? new BigNumber(startBlocks[index]) : null\n    const endBlock = endBlocks[index] ? new BigNumber(endBlocks[index]) : null\n\n    if (!startBlock || !endBlock) {\n      return accum\n    }\n\n    if (startBlock.gte(blockNumber) || endBlock.lte(blockNumber)) {\n      return accum\n    }\n\n    return [...accum, poolCheck]\n  }, [])\n}\n","import React from 'react'\nimport {\n  Tag,\n  VerifiedIcon,\n  CommunityIcon,\n  RefreshIcon,\n  AutoRenewIcon,\n  TagProps,\n  TimerIcon,\n  BlockIcon,\n  VoteIcon,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst CoreTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Core')}\n    </Tag>\n  )\n}\n\nconst CommunityTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\n      {t('Community')}\n    </Tag>\n  )\n}\n\nconst DualTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textSubtle\" outline {...props}>\n      {t('Dual')}\n    </Tag>\n  )\n}\n\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Manual')}\n    </Tag>\n  )\n}\n\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Auto')}\n    </Tag>\n  )\n}\n\nconst VoteNowTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" startIcon={<VoteIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Vote Now')}\n    </Tag>\n  )\n}\n\nconst SoonTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"binance\" startIcon={<TimerIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Soon')}\n    </Tag>\n  )\n}\n\nconst ClosedTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textDisabled\" startIcon={<BlockIcon width=\"18px\" color=\"textDisabled\" mr=\"4px\" />} {...props}>\n      {t('Closed')}\n    </Tag>\n  )\n}\n\nexport { CoreTag, CommunityTag, DualTag, ManualPoolTag, CompoundingPoolTag, VoteNowTag, SoonTag, ClosedTag }\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from '@pancakeswap/uikit'\nimport { ethers } from 'ethers'\nimport getNodeUrl from './getRpcUrl'\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: rpcUrl },\n  bridge: 'https://pancakeswap.bridge.walletconnect.org/',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\n\nexport const getLibrary = (provider): ethers.providers.Web3Provider => {\n  const library = new ethers.providers.Web3Provider(provider)\n  library.pollingInterval = POLLING_INTERVAL\n  return library\n}\n\n/**\n * BSC Wallet requires a different sign method\n * @see https://docs.binance.org/smart-chain/wallet/wallet_api.html#binancechainbnbsignaddress-string-message-string-promisepublickey-string-signature-string\n */\nexport const signMessage = async (provider: any, account: string, message: string): Promise<string> => {\n  if (window.BinanceChain) {\n    const { signature } = await window.BinanceChain.bnbSign(account, message)\n    return signature\n  }\n\n  /**\n   * Wallet Connect does not sign the message correctly unless you use their method\n   * @see https://github.com/WalletConnect/walletconnect-monorepo/issues/462\n   */\n  if (provider.provider?.wc) {\n    const wcMessage = ethers.utils.hexlify(ethers.utils.toUtf8Bytes(message))\n    const signature = await provider.provider?.wc.signPersonalMessage([wcMessage, account])\n    return signature\n  }\n\n  return provider.getSigner(account).signMessage(message)\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { CheckmarkIcon, CloseIcon, LinkExternal } from '@pancakeswap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport CircleLoader from '../../Loader/CircleLoader'\n\nconst TransactionState = styled.div<{ pending: boolean; success?: boolean }>`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-decoration: none !important;\n  border-radius: 0.5rem;\n  padding: 0.25rem 0rem;\n  font-weight: 500;\n  font-size: 0.825rem;\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst IconWrapper = styled.div<{ pending: boolean; success?: boolean }>`\n  color: ${({ pending, success, theme }) =>\n    pending ? theme.colors.primary : success ? theme.colors.success : theme.colors.failure};\n`\n\nexport default function Transaction({ tx }: { tx: TransactionDetails }) {\n  const { chainId } = useActiveWeb3React()\n\n  const summary = tx?.summary\n  const pending = !tx?.receipt\n  const success = !pending && tx && (tx.receipt?.status === 1 || typeof tx.receipt?.status === 'undefined')\n\n  if (!chainId) return null\n\n  return (\n    <TransactionState pending={pending} success={success}>\n      <LinkExternal href={getBscScanLink(tx.hash, 'transaction', chainId)}>{summary ?? tx.hash}</LinkExternal>\n      <IconWrapper pending={pending} success={success}>\n        {pending ? <CircleLoader /> : success ? <CheckmarkIcon color=\"success\" /> : <CloseIcon color=\"failure\" />}\n      </IconWrapper>\n    </TransactionState>\n  )\n}\n","import React, { useMemo, useCallback } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useDispatch } from 'react-redux'\nimport { Modal, ModalBody, Text, Button, Flex, InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport { AppDispatch } from 'state'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { AutoRow } from '../../Layout/Row'\nimport Transaction from './Transaction'\n\n// we want the latest one to come first, so return negative if a is after b\nfunction newTransactionsFirst(a: TransactionDetails, b: TransactionDetails) {\n  return b.addedTime - a.addedTime\n}\n\nfunction renderTransactions(transactions: TransactionDetails[]) {\n  return (\n    <Flex flexDirection=\"column\">\n      {transactions.map((tx) => {\n        return <Transaction key={tx.hash + tx.addedTime} tx={tx} />\n      })}\n    </Flex>\n  )\n}\n\nconst TransactionsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const { account, chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const allTransactions = useAllTransactions()\n\n  const { t } = useTranslation()\n\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions)\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\n  }, [allTransactions])\n\n  const pending = sortedRecentTransactions.filter((tx) => !tx.receipt)\n  const confirmed = sortedRecentTransactions.filter((tx) => tx.receipt)\n\n  const clearAllTransactionsCallback = useCallback(() => {\n    if (chainId) dispatch(clearAllTransactions({ chainId }))\n  }, [dispatch, chainId])\n\n  return (\n    <Modal title={t('Recent Transactions')} headerBackground=\"gradients.cardHeader\" onDismiss={onDismiss}>\n      {account && (\n        <ModalBody>\n          {!!pending.length || !!confirmed.length ? (\n            <>\n              <AutoRow mb=\"1rem\" style={{ justifyContent: 'space-between' }}>\n                <Text>{t('Recent Transactions')}</Text>\n                <Button variant=\"tertiary\" scale=\"xs\" onClick={clearAllTransactionsCallback}>\n                  {t('clear all')}\n                </Button>\n              </AutoRow>\n              {renderTransactions(pending)}\n              {renderTransactions(confirmed)}\n            </>\n          ) : (\n            <Text>{t('No recent transactions')}</Text>\n          )}\n        </ModalBody>\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionsModal\n","import React from 'react'\nimport { HistoryIcon, Button, useModal } from '@pancakeswap/uikit'\nimport TransactionsModal from './TransactionsModal'\n\nconst Transactions = () => {\n  const [onPresentTransactionsModal] = useModal(<TransactionsModal />)\n  return (\n    <>\n      <Button variant=\"text\" p={0} onClick={onPresentTransactionsModal} ml=\"16px\">\n        <HistoryIcon color=\"textSubtle\" width=\"24px\" />\n      </Button>\n    </>\n  )\n}\n\nexport default Transactions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex, Heading, IconButton, ArrowBackIcon, NotificationDot } from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport GlobalSettings from 'components/Menu/GlobalSettings'\nimport Transactions from './Transactions'\nimport QuestionHelper from '../QuestionHelper'\n\ninterface Props {\n  title: string\n  subtitle: string\n  helper?: string\n  backTo?: string\n  noConfig?: boolean\n}\n\nconst AppHeaderContainer = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  padding: 24px;\n  width: 100%;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst AppHeader: React.FC<Props> = ({ title, subtitle, helper, backTo, noConfig = false }) => {\n  const [expertMode] = useExpertModeManager()\n\n  return (\n    <AppHeaderContainer>\n      <Flex alignItems=\"center\" mr={noConfig ? 0 : '16px'}>\n        {backTo && (\n          <IconButton as={Link} to={backTo}>\n            <ArrowBackIcon width=\"32px\" />\n          </IconButton>\n        )}\n        <Flex flexDirection=\"column\">\n          <Heading as=\"h2\" mb=\"8px\">\n            {title}\n          </Heading>\n          <Flex alignItems=\"center\">\n            {helper && <QuestionHelper text={helper} mr=\"4px\" />}\n            <Text color=\"textSubtle\" fontSize=\"14px\">\n              {subtitle}\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n      {!noConfig && (\n        <Flex alignItems=\"center\">\n          <NotificationDot show={expertMode}>\n            <GlobalSettings />\n          </NotificationDot>\n          <Transactions />\n        </Flex>\n      )}\n    </AppHeaderContainer>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const BodyWrapper = styled(Card)`\n  border-radius: 24px;\n  max-width: 436px;\n  width: 100%;\n  z-index: 1;\n`\n\n/**\n * The styled container element that wraps the content of most pages and the tabs.\n */\nexport default function AppBody({ children }: { children: React.ReactNode }) {\n  return <BodyWrapper>{children}</BodyWrapper>\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BlockState } from '../types'\n\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action: PayloadAction<number>) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload\n      }\n\n      state.currentBlock = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","import sample from 'lodash/sample'\n\n// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  return sample(nodes)\n}\n\nexport default getNodeUrl\n","const ENS_NAME_REGEX = /^(([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\\.)+)eth(\\/.*)?$/\n\nexport function parseENSAddress(ensAddress: string): { ensName: string; ensPath: string | undefined } | undefined {\n  const match = ensAddress.match(ENS_NAME_REGEX)\n  if (!match) return undefined\n  return { ensName: `${match[1].toLowerCase()}eth`, ensPath: match[4] }\n}\n\nexport default parseENSAddress\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\n  animation: 2s ${rotate} linear infinite;\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n  path {\n    stroke: ${({ stroke, theme }) => stroke ?? theme.colors.primary};\n  }\n`\n\n/**\n * Takes in custom size and stroke for circle color, default to primary color as fill,\n * need ...rest for layered styles on top\n */\nexport default function CircleLoader({\n  size = '16px',\n  stroke,\n  ...rest\n}: {\n  size?: string\n  stroke?: string\n  [k: string]: any\n}) {\n  return (\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\n      <path\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\n        strokeWidth=\"2.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </StyledSVG>\n  )\n}\n","/* eslint-disable no-continue */\n/* eslint-disable no-await-in-loop */\nimport { TokenList } from '@uniswap/token-lists'\nimport schema from '@uniswap/token-lists/src/tokenlist.schema.json'\nimport Ajv from 'ajv'\nimport contenthashToUri from './contenthashToUri'\nimport { parseENSAddress } from './ENS/parseENSAddress'\nimport uriToHttp from './uriToHttp'\n\nconst tokenListValidator = new Ajv({ allErrors: true }).compile(schema)\n\n/**\n * Contains the logic for resolving a list URL to a validated token list\n * @param listUrl list url\n * @param resolveENSContentHash resolves an ens name to a contenthash\n */\nexport default async function getTokenList(\n  listUrl: string,\n  resolveENSContentHash: (ensName: string) => Promise<string>,\n): Promise<TokenList> {\n  const parsedENS = parseENSAddress(listUrl)\n  let urls: string[]\n  if (parsedENS) {\n    let contentHashUri\n    try {\n      contentHashUri = await resolveENSContentHash(parsedENS.ensName)\n    } catch (error) {\n      console.error(`Failed to resolve ENS name: ${parsedENS.ensName}`, error)\n      throw new Error(`Failed to resolve ENS name: ${parsedENS.ensName}`)\n    }\n    let translatedUri\n    try {\n      translatedUri = contenthashToUri(contentHashUri)\n    } catch (error) {\n      console.error('Failed to translate contenthash to URI', contentHashUri)\n      throw new Error(`Failed to translate contenthash to URI: ${contentHashUri}`)\n    }\n    urls = uriToHttp(`${translatedUri}${parsedENS.ensPath ?? ''}`)\n  } else {\n    urls = uriToHttp(listUrl)\n  }\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i]\n    const isLast = i === urls.length - 1\n    let response\n    try {\n      response = await fetch(url)\n    } catch (error) {\n      console.error('Failed to fetch list', listUrl, error)\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    if (!response.ok) {\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    const json = await response.json()\n    if (!tokenListValidator(json)) {\n      const validationErrors: string =\n        tokenListValidator.errors?.reduce<string>((memo, error) => {\n          const add = `${(error as any).dataPath} ${error.message ?? ''}`\n          return memo.length > 0 ? `${memo}; ${add}` : `${add}`\n        }, '') ?? 'unknown error'\n      throw new Error(`Token list failed validation: ${validationErrors}`)\n    }\n    return json as TokenList\n  }\n  throw new Error('Unrecognized list URL protocol.')\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { Provider } from '@ethersproject/abstract-provider'\nimport { namehash } from 'ethers/lib/utils'\n\nconst REGISTRAR_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'resolver',\n    outputs: [\n      {\n        name: 'resolverAddress',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\nconst REGISTRAR_ADDRESS = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n\nconst RESOLVER_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'contenthash',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\n\n// cache the resolver contracts since most of them are the public resolver\nfunction resolverContract(resolverAddress: string, provider: Provider): Contract {\n  return new Contract(resolverAddress, RESOLVER_ABI, provider)\n}\n\n/**\n * Fetches and decodes the result of an ENS contenthash lookup on mainnet to a URI\n * @param ensName to resolve\n * @param provider provider to use to fetch the data\n */\nexport default async function resolveENSContentHash(ensName: string, provider: Provider): Promise<string> {\n  const ensRegistrarContract = new Contract(REGISTRAR_ADDRESS, REGISTRAR_ABI, provider)\n  const hash = namehash(ensName)\n  const resolverAddress = await ensRegistrarContract.resolver(hash)\n  return resolverContract(resolverAddress, provider).contenthash(hash)\n}\n","import { nanoid } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch } from '../state'\nimport { fetchTokenList } from '../state/lists/actions'\nimport getTokenList from '../utils/getTokenList'\nimport resolveENSContentHash from '../utils/ENS/resolveENSContentHash'\nimport useWeb3Provider from './useActiveWeb3React'\n\nfunction useFetchListCallback(): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\n  const { library } = useWeb3Provider()\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const ensResolver = useCallback(\n    (ensName: string) => {\n      if (chainId !== ChainId.MAINNET) {\n        throw new Error('Could not construct mainnet ENS resolver')\n      }\n      return resolveENSContentHash(ensName, library)\n    },\n    [chainId, library],\n  )\n\n  // note: prevent dispatch if using for list search or unsupported list\n  return useCallback(\n    async (listUrl: string, sendDispatch = true) => {\n      const requestId = nanoid()\n      if (sendDispatch) {\n        dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      }\n      return getTokenList(listUrl, ensResolver)\n        .then((tokenList) => {\n          if (sendDispatch) {\n            dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          }\n          return tokenList\n        })\n        .catch((error) => {\n          console.error(`Failed to get list at url ${listUrl}`, error)\n          if (sendDispatch) {\n            dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          }\n          throw error\n        })\n    },\n    [dispatch, ensResolver],\n  )\n}\n\nexport default useFetchListCallback\n","import React, { createContext, ReactNode, useCallback, useState } from 'react'\nimport { kebabCase } from 'lodash'\nimport { Toast, toastTypes } from '@pancakeswap/uikit'\nimport { ToastContextApi } from './types'\n\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\n\nexport const ToastsProvider: React.FC = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\n\n  const toast = useCallback(\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\n      setToasts((prevToasts) => {\n        const id = kebabCase(title)\n\n        // Remove any existing toasts with the same id\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\n\n        return [\n          {\n            id,\n            title,\n            description,\n            type,\n          },\n          ...currentToasts,\n        ]\n      })\n    },\n    [setToasts],\n  )\n\n  const toastError = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.DANGER })\n  }\n  const toastInfo = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.INFO })\n  }\n  const toastSuccess = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.SUCCESS })\n  }\n  const toastWarning = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.WARNING })\n  }\n  const clear = () => setToasts([])\n  const remove = (id: string) => {\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\n  }\n\n  return (\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\n      {children}\n    </ToastsContext.Provider>\n  )\n}\n","import React from 'react'\nimport { ToastContainer } from '@pancakeswap/uikit'\nimport useToast from 'hooks/useToast'\n\nconst ToastListener = () => {\n  const { toasts, remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { escapeRegExp } from '../../utils'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: transparent;\n  font-size: 16px;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  const { t } = useTranslation()\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={(event) => {\n        // replace commas with periods, because we exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title={t('Token Amount')}\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n","import React from 'react'\nimport { Currency, Pair } from '@pancakeswap/sdk'\nimport { Button, ChevronDownIcon, Text, useModal, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal'\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../Logo'\n\nimport { RowBetween } from '../Layout/Row'\nimport { Input as NumericalInput } from './NumericalInput'\n\nconst InputRow = styled.div<{ selected: boolean }>`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n`\nconst CurrencySelectButton = styled(Button).attrs({ variant: 'text', scale: 'sm' })`\n  padding: 0 0.5rem;\n`\nconst LabelRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n`\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  background-color: ${({ theme }) => theme.colors.background};\n  z-index: 1;\n`\nconst Container = styled.div<{ hideInput: boolean }>`\n  border-radius: 16px;\n  background-color: ${({ theme }) => theme.colors.input};\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n`\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: string\n  onCurrencySelect: (currency: Currency) => void\n  currency?: Currency | null\n  disableCurrencySelect?: boolean\n  hideBalance?: boolean\n  pair?: Pair | null\n  hideInput?: boolean\n  otherCurrency?: Currency | null\n  id: string\n  showCommonBases?: boolean\n}\nexport default function CurrencyInputPanel({\n  value,\n  onUserInput,\n  onMax,\n  showMaxButton,\n  label,\n  onCurrencySelect,\n  currency,\n  disableCurrencySelect = false,\n  hideBalance = false,\n  pair = null, // used for double token logo\n  hideInput = false,\n  otherCurrency,\n  id,\n  showCommonBases,\n}: CurrencyInputPanelProps) {\n  const { account } = useActiveWeb3React()\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const { t } = useTranslation()\n  const translatedLabel = label || t('Input')\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={onCurrencySelect}\n      selectedCurrency={currency}\n      otherSelectedCurrency={otherCurrency}\n      showCommonBases={showCommonBases}\n    />,\n  )\n  return (\n    <InputPanel id={id}>\n      <Container hideInput={hideInput}>\n        {!hideInput && (\n          <LabelRow>\n            <RowBetween>\n              <Text fontSize=\"14px\">{translatedLabel}</Text>\n              {account && (\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\n                  {!hideBalance && !!currency && selectedCurrencyBalance\n                    ? t('Balance: %amount%', { amount: selectedCurrencyBalance?.toSignificant(6) ?? '' })\n                    : ' -'}\n                </Text>\n              )}\n            </RowBetween>\n          </LabelRow>\n        )}\n        <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\n          {!hideInput && (\n            <>\n              <NumericalInput\n                className=\"token-amount-input\"\n                value={value}\n                onUserInput={(val) => {\n                  onUserInput(val)\n                }}\n              />\n              {account && currency && showMaxButton && label !== 'To' && (\n                <Button onClick={onMax} scale=\"sm\" variant=\"text\">\n                  MAX\n                </Button>\n              )}\n            </>\n          )}\n          <CurrencySelectButton\n            selected={!!currency}\n            className=\"open-currency-select-button\"\n            onClick={() => {\n              if (!disableCurrencySelect) {\n                onPresentCurrencyModal()\n              }\n            }}\n          >\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n              {pair ? (\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\n              ) : currency ? (\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ borderRadius: '50%', marginRight: '8px' }} />\n              ) : null}\n              {pair ? (\n                <Text id=\"pair\">\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\n                </Text>\n              ) : (\n                <Text bold id=\"pair\">\n                  {(currency && currency.symbol && currency.symbol.length > 20\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\n                        currency.symbol.length - 5,\n                        currency.symbol.length,\n                      )}`\n                    : currency?.symbol) || t('Select a currency')}\n                </Text>\n              )}\n              {!disableCurrencySelect && <ChevronDownIcon />}\n            </Flex>\n          </CurrencySelectButton>\n        </InputRow>\n      </Container>\n    </InputPanel>\n  )\n}\n","import { useMemo } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { isAddress } from '../../utils'\n\nexport function filterTokens(tokens: Token[], search: string): Token[] {\n  if (search.length === 0) return tokens\n\n  const searchingAddress = isAddress(search)\n\n  if (searchingAddress) {\n    return tokens.filter((token) => token.address === searchingAddress)\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0)\n\n  if (lowerSearchParts.length === 0) {\n    return tokens\n  }\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s_) => s_.length > 0)\n\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\n  }\n\n  return tokens.filter((token) => {\n    const { symbol, name } = token\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\n  })\n}\n\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\n  return useMemo(() => {\n    if (!tokens) {\n      return []\n    }\n\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0)\n\n    if (symbolMatch.length > 1) {\n      return tokens\n    }\n\n    const exactMatches: Token[] = []\n    const symbolSubtrings: Token[] = []\n    const rest: Token[] = []\n\n    // sort tokens by exact match -> subtring on symbol match -> rest\n    tokens.map((token) => {\n      if (token.symbol?.toLowerCase() === symbolMatch[0]) {\n        return exactMatches.push(token)\n      }\n      if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\n        return symbolSubtrings.push(token)\n      }\n      return rest.push(token)\n    })\n\n    return [...exactMatches, ...symbolSubtrings, ...rest]\n  }, [tokens, searchQuery])\n}\n","import { Campaign } from './types'\n\n/**\n * id: The campaign id (required)\n * type: The type of the achievement\n * title: A string or an object to be translated.\n * Note: If the value is a string it is likely used as data in a translation object\n *\n * badge: Achievement avatar\n */\n\nconst campaigns: Campaign[] = [\n  {\n    id: '511110000',\n    type: 'ifo',\n    title: 'Kalmar',\n    badge: 'ifo-kalm.svg',\n  },\n  {\n    id: '511100000',\n    type: 'ifo',\n    title: 'Hotcross',\n    badge: 'ifo-hotcross.svg',\n  },\n  {\n    id: '511090000',\n    type: 'ifo',\n    title: 'Horizon Protocol',\n    badge: 'ifo-hzn.svg',\n  },\n  {\n    id: '511080000',\n    type: 'ifo',\n    title: 'Belt',\n    badge: 'ifo-belt.svg',\n  },\n  {\n    id: '511070000',\n    type: 'ifo',\n    title: 'Yieldwatch',\n    badge: 'ifo-watch.svg',\n  },\n  {\n    id: '511060000',\n    type: 'ifo',\n    title: 'Berry',\n    badge: 'ifo-bry.svg',\n  },\n  {\n    id: '511050000',\n    type: 'ifo',\n    title: 'Soteria',\n    badge: 'ifo-wsote.svg',\n  },\n  {\n    id: '511040000',\n    type: 'ifo',\n    title: 'Helmet',\n    badge: 'ifo-helmet.svg',\n  },\n  {\n    id: '511030000',\n    type: 'ifo',\n    title: 'Tenet',\n    badge: 'ifo-ten.svg',\n  },\n  {\n    id: '511020000',\n    type: 'ifo',\n    title: 'Ditto',\n    badge: 'ifo-ditto.svg',\n  },\n  {\n    id: '511010000',\n    type: 'ifo',\n    title: 'Blink',\n    badge: 'ifo-blk.svg',\n  },\n  {\n    id: '512010001',\n    type: 'teambattle',\n    title: 'Easter Champion: Gold',\n    badge: 'easter-champion-gold.svg',\n  },\n  {\n    id: '512010002',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010003',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010004',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010005',\n    type: 'teambattle',\n    title: 'Easter Participant: Gold',\n    badge: 'easter-participant-gold.svg',\n  },\n  {\n    id: '512010006',\n    type: 'teambattle',\n    title: 'Easter Champion: Silver',\n    badge: 'easter-champion-silver.svg',\n  },\n  {\n    id: '512010007',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010008',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010009',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010010',\n    type: 'teambattle',\n    title: 'Easter Participant: Silver',\n    badge: 'easter-participant-silver.svg',\n  },\n  {\n    id: '512010011',\n    type: 'teambattle',\n    title: 'Easter Champion: Bronze',\n    badge: 'easter-champion-bronze.svg',\n  },\n  {\n    id: '512010012',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010013',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010014',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010015',\n    type: 'teambattle',\n    title: 'Easter Participant: Bronze',\n    badge: 'easter-participant-bronze.svg',\n  },\n  {\n    id: '513010001',\n    type: 'participation',\n    title: 'Syrup Soaker',\n    description: 'Took a dip in the early days of the Auto CAKE Pool',\n    badge: 'syrup-soaker.svg',\n  },\n  {\n    id: '514010001',\n    type: 'participation',\n    title: 'Clairvoyant',\n    description: 'Played a round of Prediction before round 12,120',\n    badge: 'clairvoyant.svg',\n  },\n]\n\n/**\n * Transform the campaign config into a map. Keeps the config the same\n * as the others and allows easy access to a campaign by id\n */\nexport const campaignMap = new Map<string, Campaign>()\n\ncampaigns.forEach((campaign) => {\n  campaignMap.set(campaign.id, campaign)\n})\n\nexport default campaigns\n","import identity from 'lodash/identity'\nimport { useEffect, useState } from 'react'\n\ninterface UsePersistStateOptions {\n  localStorageKey: string\n  hydrate?: (value: any) => any\n  dehydrate?: (value: any) => any\n}\n\nconst defaultOptions = {\n  hydrate: identity,\n  dehydrate: identity,\n}\n\n/**\n * Same as \"useState\" but saves the value to local storage each time it changes\n */\nconst usePersistState = (initialValue: any, userOptions: UsePersistStateOptions) => {\n  const { localStorageKey, hydrate, dehydrate } = { ...defaultOptions, ...userOptions }\n  const [value, setValue] = useState(() => {\n    try {\n      const valueFromLS = localStorage.getItem(localStorageKey)\n\n      return valueFromLS ? hydrate(JSON.parse(valueFromLS)) : initialValue\n    } catch (error) {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, JSON.stringify(dehydrate(value)))\n  }, [value, localStorageKey, dehydrate])\n\n  return [value, setValue]\n}\n\nexport default usePersistState\n","import styled from 'styled-components'\n\nconst Dots = styled.span`\n  &::after {\n    display: inline-block;\n    animation: ellipsis 1.25s infinite;\n    content: '.';\n    width: 1em;\n    text-align: left;\n  }\n  @keyframes ellipsis {\n    0% {\n      content: '.';\n    }\n    33% {\n      content: '..';\n    }\n    66% {\n      content: '...';\n    }\n  }\n`\n\nexport default Dots\n","import { Team } from './types'\n\nconst teams: Team[] = [\n  {\n    id: 1,\n    name: 'Syrup Storm',\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\n    images: {\n      lg: 'syrup-storm-lg.png',\n      md: 'syrup-storm-md.png',\n      sm: 'syrup-storm-sm.png',\n      alt: 'syrup-storm-alt.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png',\n    },\n    background: 'syrup-storm-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 2,\n    name: 'Fearsome Flippers',\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped, too!\",\n    images: {\n      lg: 'fearsome-flippers-lg.png',\n      md: 'fearsome-flippers-md.png',\n      sm: 'fearsome-flippers-sm.png',\n      alt: 'fearsome-flippers-alt.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png',\n    },\n    background: 'fearsome-flippers-bg.svg',\n    textColor: '#FFFFFF',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 3,\n    name: 'Chaotic Cakers',\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\n    images: {\n      lg: 'chaotic-cakers-lg.png',\n      md: 'chaotic-cakers-md.png',\n      sm: 'chaotic-cakers-sm.png',\n      alt: 'chaotic-cakers-alt.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png',\n    },\n    background: 'chaotic-cakers-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n]\n\nexport default teams\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nfunction useTotalSupply(token?: Token): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\n\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\n}\n\nexport default useTotalSupply\n","import { useMemo } from 'react'\nimport { ChainId, Token } from '@pancakeswap/sdk'\nimport { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../../index'\nimport { deserializeToken } from './helpers'\n\nexport default function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n","import merge from 'lodash/merge'\nimport teamsList from 'config/constants/teams'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Team } from 'config/constants/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { TeamsById } from 'state/types'\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\n\nconst profileContract = getProfileContract()\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = await profileContract.getTeamProfile(teamId)\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers.toNumber(),\n      points: numberPoints.toNumber(),\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.numberTeams()\n\n    const calls = []\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push({\n        address: getPancakeProfileAddress(),\n        name: 'getTeamProfile',\n        params: [i],\n      })\n    }\n    const teamData = await multicallv2(profileABI, calls)\n\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: numberUsers.toNumber(),\n          points: numberPoints.toNumber(),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","import React from 'react'\nimport { Box, BoxProps } from '@pancakeswap/uikit'\n\nconst Container: React.FC<BoxProps> = ({ children, ...props }) => (\n  <Box px={['16px', '24px']} mx=\"auto\" maxWidth=\"1200px\" {...props}>\n    {children}\n  </Box>\n)\n\nexport default Container\n","import { ContextApi } from 'contexts/Localization/types'\nimport { PageMeta } from './types'\n\nexport const DEFAULT_META: PageMeta = {\n  title: 'PancakeSwap',\n  description:\n    'The mochiest AMM on Harmony! Earn hMOCHI through yield farming!!!',\n  image: 'https://pancakeswap.finance/images/hero.png',\n}\n\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\n  switch (path) {\n    case '/':\n      return {\n        title: `${t('Home')} | ${t('Onemoon')}`,\n      }\n    case '/competition':\n      return {\n        title: `${t('Trading Battle')} | ${t('Onemoon')}`,\n      }\n    case '/prediction':\n      return {\n        title: `${t('Prediction')} | ${t('Onemoon')}`,\n      }\n    case '/farms':\n      return {\n        title: `${t('Farms')} | ${t('Onemoon')}`,\n      }\n    case '/pools':\n      return {\n        title: `${t('Pools')} | ${t('Onemoon')}`,\n      }\n    case '/lottery':\n      return {\n        title: `${t('Lottery')} | ${t('Onemoon')}`,\n      }\n    case '/collectibles':\n      return {\n        title: `${t('Collectibles')} | ${t('Onemoon')}`,\n      }\n    case '/ifo':\n      return {\n        title: `${t('Initial Farm Offering')} | ${t('Onemoon')}`,\n      }\n    case '/teams':\n      return {\n        title: `${t('Leaderboard')} | ${t('Onemoon')}`,\n      }\n    case '/profile/tasks':\n      return {\n        title: `${t('Task Center')} | ${t('Onemoon')}`,\n      }\n    case '/profile':\n      return {\n        title: `${t('Your Profile')} | ${t('Onemoon')}`,\n      }\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Helmet } from 'react-helmet-async'\nimport { useLocation } from 'react-router'\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport Container from './Container'\n\nconst StyledPage = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nconst PageMeta = () => {\n  const { t } = useTranslation()\n  const { pathname } = useLocation()\n  const cakePriceUsd = usePriceCakeBusd()\n  const cakePriceUsdDisplay = cakePriceUsd.gt(0)\n    ? `$${cakePriceUsd.toNumber().toLocaleString(undefined, {\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3,\n      })}`\n    : ''\n\n  const pageMeta = getCustomMeta(pathname, t) || {}\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\n  const pageTitle = cakePriceUsdDisplay ? [title, cakePriceUsdDisplay].join(' - ') : title\n\n  return (\n    <Helmet>\n      <title>{pageTitle}</title>\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n    </Helmet>\n  )\n}\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <>\n      <PageMeta />\n      <StyledPage {...props}>{children}</StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import Nfts, { IPFS_GATEWAY, nftSources } from 'config/constants/nfts'\nimport { Nft, NftType } from 'config/constants/types'\nimport { getAddress } from './addressHelpers'\nimport { getErc721Contract } from './contractHelpers'\n\n/**\n * Gets the identifier key based on the nft address\n * Helpful for looking up the key when all you have is the address\n */\nexport const getIdentifierKeyFromAddress = (nftAddress: string) => {\n  const nftSource = Object.values(nftSources).find((nftSourceEntry) => {\n    const address = getAddress(nftSourceEntry.address)\n    return address === nftAddress\n  })\n\n  return nftSource ? nftSource.identifierKey : null\n}\n\n/**\n * Some sources like Pancake do not return HTTP tokenURI's\n */\nexport const getTokenUrl = (tokenUri: string) => {\n  if (tokenUri.startsWith('ipfs://')) {\n    return `${IPFS_GATEWAY}/ipfs/${tokenUri.slice(6)}`\n  }\n\n  return tokenUri\n}\n\nexport const getAddressByType = (type: NftType) => {\n  return getAddress(nftSources[type].address)\n}\n\nexport const getTokenUriData = async (nftAddress: string, tokenId: number) => {\n  try {\n    const contract = getErc721Contract(nftAddress)\n    const tokenUri = await contract.tokenURI(tokenId)\n    const uriDataResponse = await fetch(getTokenUrl(tokenUri))\n\n    if (!uriDataResponse.ok) {\n      return null\n    }\n\n    const uriData = await uriDataResponse.json()\n    return uriData\n  } catch (error) {\n    console.error('getTokenUriData', error)\n    return null\n  }\n}\n\nexport const getNftByTokenId = async (nftAddress: string, tokenId: number): Promise<Nft | null> => {\n  const uriData = await getTokenUriData(nftAddress, tokenId)\n  const identifierKey = getIdentifierKeyFromAddress(nftAddress)\n\n  // Bail out early if we have no uriData, identifierKey, or the value does not\n  // exist in the object\n  if (!uriData) {\n    return null\n  }\n\n  if (!identifierKey) {\n    return null\n  }\n\n  if (!uriData[identifierKey]) {\n    return null\n  }\n\n  return Nfts.find((nft) => {\n    return uriData[identifierKey].includes(nft.identifier)\n  })\n}\n","import { useEffect, useRef } from 'react'\n\n/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nconst usePreviousValue = (value: any) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n\n  return ref.current\n}\n\nexport default usePreviousValue\n","import React from 'react'\nimport {\n  TokenPairImage as UIKitTokenPairImage,\n  TokenPairImageProps as UIKitTokenPairImageProps,\n  TokenImage as UIKitTokenImage,\n  ImageProps,\n} from '@pancakeswap/uikit'\nimport tokens from 'config/constants/tokens'\nimport { Token } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface TokenPairImageProps extends Omit<UIKitTokenPairImageProps, 'primarySrc' | 'secondarySrc'> {\n  primaryToken: Token\n  secondaryToken: Token\n}\n\nconst getImageUrlFromToken = (token: Token) => {\n  const address = getAddress(token.symbol === 'WONE' ? tokens.wone.address : token.address)\n  return `/images/tokens/${address}.svg`\n}\n\nexport const TokenPairImage: React.FC<TokenPairImageProps> = ({ primaryToken, secondaryToken, ...props }) => {\n  return (\n    <UIKitTokenPairImage\n      primarySrc={getImageUrlFromToken(primaryToken)}\n      secondarySrc={getImageUrlFromToken(secondaryToken)}\n      {...props}\n    />\n  )\n}\n\ninterface TokenImageProps extends ImageProps {\n  token: Token\n}\n\nexport const TokenImage: React.FC<TokenImageProps> = ({ token, ...props }) => {\n  return <UIKitTokenImage src={getImageUrlFromToken(token)} {...props} />\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem, LinkExternal, Flex, Svg, Image, Button } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n  margin-top: 16px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    justify-content: space-between;\n    flex-direction: row;\n  }\n`\n\nconst BubbleWrapper = styled(Flex)`\n  svg {\n    fill: ${({ theme }) => theme.colors.textSubtle};\n    transition: background-color 0.2s, opacity 0.2s;\n  }\n  &:hover {\n    svg {\n      opacity: 0.65;\n    }\n  }\n  &:active {\n    svg {\n      opacity: 0.85;\n    }\n  }\n`\n\nconst Footer = () => {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <Flex flexDirection={['column', 'column', 'row']} alignItems=\"center\">\n        {/* <ButtonMenu variant=\"subtle\" scale=\"sm\" activeIndex={0}>\n          <ButtonMenuItem>V2</ButtonMenuItem>\n          <ButtonMenuItem as=\"a\" href=\"https://v1exchange.pancakeswap.finance/#/\">\n            V1 (old)\n          </ButtonMenuItem>\n        </ButtonMenu> */}\n        {/* <LinkExternal\n          href=\"https://www.binance.org/en/bridge?utm_source=PancakeSwap\"\n          ml={[0, 0, '40px']}\n          mt={['20px', '20px', 0]}\n          mb={['8px', '8px', 0]}\n        >\n          {t('Convert ERC-20 to BEP-20')}\n        </LinkExternal> */}\n      </Flex>\n      <Flex\n        flexGrow={1}\n        alignItems=\"center\"\n        width={['100%', '100%', '100%', 'auto']}\n        justifyContent={['center', 'center', 'center', 'flex-end']}\n      >\n        <BubbleWrapper>\n          <Button\n            id=\"clickExchangeHelp\"\n            as=\"a\"\n            external\n            href=\"https://docs.onemoon.io\"\n            variant=\"subtle\"\n          >\n            {t('Need help ?')}\n          </Button>\n          <Svg viewBox=\"0 0 16 16\">\n            <path d=\"M0 16V0C0 0 3 1 6 1C9 1 16 -2 16 3.5C16 10.5 7.5 16 0 16Z\" />\n          </Svg>\n        </BubbleWrapper>\n        <Image src=\"/images/help.svg\" alt=\"Get some help\" width={160} height={108} />\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledNav = styled.nav`\n  margin-bottom: 40px;\n`\n\nconst getActiveIndex = (pathname: string): number => {\n  if (\n    pathname.includes('/pool') ||\n    pathname.includes('/create') ||\n    pathname.includes('/add') ||\n    pathname.includes('/remove') ||\n    pathname.includes('/find') ||\n    pathname.includes('/liquidity')\n  ) {\n    return 1\n  }\n  return 0\n}\n\nconst Nav = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  return (\n    <StyledNav>\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/swap\" as={Link}>\n          {t('Swap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/pool\" as={Link}>\n          {t('Liquidity')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </StyledNav>\n  )\n}\n\nexport default Nav\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex } from '@pancakeswap/uikit'\nimport Footer from 'components/Menu/Footer'\nimport SubNav from 'components/Menu/SubNav'\n\nconst StyledPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: 16px;\n  padding-bottom: 0;\n  min-height: calc(100vh - 64px);\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    background-size: auto;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 24px;\n    padding-bottom: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    min-height: calc(100vh - 64px);\n  }\n`\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <StyledPage {...props}>\n      <SubNav />\n      {children}\n      <Flex flexGrow={1} />\n      <Footer />\n    </StyledPage>\n  )\n}\n\nexport default Page\n","import { useCallback, useState } from 'react'\nimport usePreviousValue from './usePreviousValue'\n\n/**\n * A helper hook to keep track of the time between events\n * Can also be used to force an effect to re-run\n */\nconst useLastUpdated = () => {\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\n  const previousLastUpdated = usePreviousValue(lastUpdated)\n\n  const setLastUpdated = useCallback(() => {\n    setStateLastUpdated(Date.now())\n  }, [setStateLastUpdated])\n\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\n}\n\nexport default useLastUpdated\n","import tokens from './tokens'\nimport farms from './farms'\nimport { Ifo, Token } from './types'\n\nconst cakeBnbLpToken: Token = {\n  symbol: farms[1].lpSymbol,\n  address: farms[1].lpAddresses,\n  decimals: 18,\n}\n\nconst ifos: Ifo[] = [\n  // {\n  //   id: 'kalmar',\n  //   address: '0x1aFB32b76696CdF05593Ca3f3957AEFB23a220FB',\n  //   isActive: true,\n  //   name: 'Kalmar (KALM)',\n  //   poolBasic: {\n  //     saleAmount: '375,000 KALM',\n  //     raiseAmount: '$750,000',\n  //     cakeToBurn: '$375,000',\n  //     distributionRatio: 0.3,\n  //   },\n  //   poolUnlimited: {\n  //     saleAmount: '875,000 KALM',\n  //     raiseAmount: '$2,500,000',\n  //     cakeToBurn: '$1,250,000',\n  //     distributionRatio: 0.7,\n  //   },\n  //   currency: cakeBnbLpToken,\n  //   token: tokens.kalm,\n  //   releaseBlockNumber: 7707736,\n  //   campaignId: '511110000',\n  //   articleUrl: 'https://pancakeswap.medium.com/kalmar-kalm-ifo-to-be-hosted-on-pancakeswap-4540059753e4',\n  //   tokenOfferingPrice: 2.0,\n  //   version: 2,\n  // },\n  // {\n  //   id: 'hotcross',\n  //   address: '0xb664cdbe385656F8c54031c0CB12Cea55b584b63',\n  //   isActive: false,\n  //   name: 'Hot Cross (HOTCROSS)',\n  //   poolBasic: {\n  //     saleAmount: '15,000,000 HOTCROSS',\n  //     raiseAmount: '$750,000',\n  //     cakeToBurn: '$375,000',\n  //     distributionRatio: 0.3,\n  //   },\n  //   poolUnlimited: {\n  //     saleAmount: '35,000,000 HOTCROSS',\n  //     raiseAmount: '$1,750,000',\n  //     cakeToBurn: '$875,000',\n  //     distributionRatio: 0.7,\n  //   },\n  //   currency: cakeBnbLpToken,\n  //   token: tokens.hotcross,\n  //   releaseBlockNumber: 7477900,\n  //   campaignId: '511100000',\n  //   articleUrl: 'https://pancakeswap.medium.com/hot-cross-hotcross-ifo-to-be-hosted-on-pancakeswap-10e70f1f6841',\n  //   tokenOfferingPrice: 0.05,\n  //   version: 2,\n  // },\n  // {\n  //   id: 'horizon',\n  //   address: '0x6137B571f7F1E44839ae10310a08be86D1A4D03B',\n  //   isActive: false,\n  //   name: 'Horizon Protocol (HZN)',\n  //   poolBasic: {\n  //     saleAmount: '3,000,000 HZN',\n  //     raiseAmount: '$750,000',\n  //     cakeToBurn: '$375,000',\n  //     distributionRatio: 0.3,\n  //   },\n  //   poolUnlimited: {\n  //     saleAmount: '7,000,000 HZN',\n  //     raiseAmount: '$1,750,000',\n  //     cakeToBurn: '$875,000',\n  //     distributionRatio: 0.7,\n  //   },\n  //   currency: cakeBnbLpToken,\n  //   token: tokens.hzn,\n  //   releaseBlockNumber: 6581111,\n  //   campaignId: '511090000',\n  //   articleUrl: 'https://pancakeswap.medium.com/horizon-protocol-hzn-ifo-to-be-hosted-on-pancakeswap-51f79601c9d8',\n  //   tokenOfferingPrice: 0.25,\n  //   version: 2,\n  // },\n  // {\n  //   id: 'belt',\n  //   address: '0xc9FBedC033a1c479a6AD451ffE463025E92a1d38',\n  //   isActive: false,\n  //   name: 'Belt (BELT)',\n  //   poolUnlimited: {\n  //     saleAmount: '150,000 BELT',\n  //     raiseAmount: '$3,000,000',\n  //     cakeToBurn: '$1,500,000',\n  //     distributionRatio: 1,\n  //   },\n  //   currency: cakeBnbLpToken,\n  //   token: tokens.belt,\n  //   releaseBlockNumber: 5493919,\n  //   campaignId: '511080000',\n  //   articleUrl: 'https://pancakeswap.medium.com/belt-fi-belt-ifo-to-be-hosted-on-pancakeswap-353585117e32',\n  //   tokenOfferingPrice: null,\n  //   version: 1,\n  // },\n  // {\n  //   id: 'watch',\n  //   address: '0x55344b55C71Ad8834C397E6e08dF5195cF84fe6d',\n  //   isActive: false,\n  //   name: 'Yieldwatch (WATCH)',\n  //   poolUnlimited: {\n  //     saleAmount: '8,000,000 WATCH',\n  //     raiseAmount: '$800,000',\n  //     cakeToBurn: '$400,000',\n  //     distributionRatio: 1,\n  //   },\n  //   currency: cakeBnbLpToken,\n  //   token: tokens.watch,\n  //   releaseBlockNumber: 5294924,\n  //   campaignId: '511070000',\n  //   articleUrl: 'https://pancakeswap.medium.com/yieldwatch-watch-ifo-to-be-hosted-on-pancakeswap-d24301f17241',\n  //   tokenOfferingPrice: null,\n  //   version: 1,\n  // },\n  // {\n  //   id: 'berry',\n  //   address: '0x5d028cE3435B2bB9AceBfaC599EEbA1ccD63d7dd',\n  //   isActive: false,\n  //   name: 'Berry (BRY)',\n  //   poolUnlimited: {\n  //     saleAmount: '2,000,000 BRY',\n  //     raiseAmount: '$1,000,000',\n  //     cakeToBurn: '$500,000',\n  //     distributionRatio: 1,\n  //   },\n  //   currency: cakeBnbLpToken,\n  //   token: tokens.bry,\n  //   releaseBlockNumber: 4750968,\n  //   campaignId: '511060000',\n  //   articleUrl: 'https://pancakeswap.medium.com/berry-bry-ifo-to-be-hosted-on-pancakeswap-b4f9095e9cdb',\n  //   tokenOfferingPrice: null,\n  //   version: 1,\n  // },\n  // {\n  //   id: 'soteria',\n  //   address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n  //   isActive: false,\n  //   name: 'Soteria (wSOTE)',\n  //   poolUnlimited: {\n  //     saleAmount: '1,500,000 wSOTE',\n  //     raiseAmount: '$525,000',\n  //     cakeToBurn: '$262,500',\n  //     distributionRatio: 1,\n  //   },\n  //   currency: cakeBnbLpToken,\n  //   token: tokens.wsote,\n  //   releaseBlockNumber: 4086064,\n  //   campaignId: '511050000',\n  //   articleUrl: 'https://pancakeswap.medium.com/soteria-sota-ifo-to-be-hosted-on-pancakeswap-64b727c272ae',\n  //   tokenOfferingPrice: null,\n  //   version: 1,\n  // },\n  // {\n  //   id: 'helmet',\n  //   address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\n  //   isActive: false,\n  //   name: 'Helmet.insure (Helmet)',\n  //   poolUnlimited: {\n  //     saleAmount: '10,000,000 Helmet',\n  //     raiseAmount: '$1,000,000',\n  //     cakeToBurn: '$500,000',\n  //     distributionRatio: 1,\n  //   },\n  //   currency: cakeBnbLpToken,\n  //   token: tokens.helmet,\n  //   releaseBlockNumber: 3771926,\n  //   campaignId: '511040000',\n  //   articleUrl: 'https://pancakeswap.medium.com/1-000-000-helmet-helmet-ifo-to-be-hosted-on-pancakeswap-3379a2a89a67',\n  //   tokenOfferingPrice: null,\n  //   version: 1,\n  // },\n  // {\n  //   id: 'tenet',\n  //   address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\n  //   isActive: false,\n  //   name: 'Tenet (TEN)',\n  //   poolUnlimited: {\n  //     saleAmount: '1,000,000 TEN',\n  //     raiseAmount: '$1,000,000',\n  //     cakeToBurn: '$500,000',\n  //     distributionRatio: 1,\n  //   },\n  //   currency: cakeBnbLpToken,\n  //   token: tokens.ten,\n  //   releaseBlockNumber: 3483883,\n  //   campaignId: '511030000',\n  //   articleUrl: 'https://pancakeswap.medium.com/tenet-ten-ifo-to-be-hosted-on-pancakeswap-b7e1eb4cb272',\n  //   tokenOfferingPrice: null,\n  //   version: 1,\n  // },\n  // {\n  //   id: 'ditto',\n  //   address: '0x570c9eB19553526Fb35895a531928E19C7D20788',\n  //   isActive: false,\n  //   name: 'Ditto (DITTO)',\n  //   poolUnlimited: {\n  //     saleAmount: '700,000 DITTO',\n  //     raiseAmount: '$630,000',\n  //     cakeToBurn: '$315,000',\n  //     distributionRatio: 1,\n  //   },\n  //   currency: cakeBnbLpToken,\n  //   token: tokens.ditto,\n  //   releaseBlockNumber: 3279767,\n  //   campaignId: '511020000',\n  //   articleUrl: 'https://pancakeswap.medium.com/ditto-money-ditto-ifo-to-be-hosted-on-pancakeswap-342da3059a66',\n  //   tokenOfferingPrice: null,\n  //   version: 1,\n  // },\n  // {\n  //   id: 'blink',\n  //   address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\n  //   isActive: false,\n  //   name: 'BLINk (BLK)',\n  //   poolUnlimited: {\n  //     saleAmount: '100,000,000 BLINK',\n  //     raiseAmount: '$1,000,000',\n  //     cakeToBurn: '$500,000',\n  //     distributionRatio: 1,\n  //   },\n  //   currency: cakeBnbLpToken,\n  //   token: tokens.blink,\n  //   releaseBlockNumber: 3279767,\n  //   campaignId: '511010000',\n  //   articleUrl: 'https://medium.com/pancakeswap/1-000-000-ifo-blink-joins-pancakeswap-15841800bdd8',\n  //   tokenOfferingPrice: null,\n  //   version: 1,\n  // },\n]\n\nexport default ifos\n","import { BigNumber } from 'ethers'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../state'\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp'\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline)\n  const blockTimestamp = useCurrentBlockTimestamp()\n  return useMemo(() => {\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\n    return undefined\n  }, [blockTimestamp, ttl])\n}\n","import { BigNumber } from 'ethers'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useMulticallContract } from './useContract'\n\n// gets the current timestamp from the blockchain\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\n  const multicall = useMulticallContract()\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport const updateBlockNumber = createAction<{ chainId: number; blockNumber: number }>('application/updateBlockNumber')\n\nexport default updateBlockNumber\n","import { Interface } from '@ethersproject/abi'\nimport ERC20_ABI from './erc20.json'\nimport ERC20_BYTES32_ABI from './erc20_bytes32.json'\n\nconst ERC20_INTERFACE = new Interface(ERC20_ABI)\n\nconst ERC20_BYTES32_INTERFACE = new Interface(ERC20_BYTES32_ABI)\n\nexport default ERC20_INTERFACE\nexport { ERC20_ABI, ERC20_BYTES32_INTERFACE, ERC20_BYTES32_ABI }\n","import CID from 'cids'\nimport { getCodec, rmPrefix } from 'multicodec'\nimport { decode, toB58String } from 'multihashes'\n\nfunction hexToUint8Array(hex: string): Uint8Array {\n  // eslint-disable-next-line no-param-reassign\n  hex = hex.startsWith('0x') ? hex.substr(2) : hex\n  if (hex.length % 2 !== 0) throw new Error('hex must have length that is multiple of 2')\n  const arr = new Uint8Array(hex.length / 2)\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = parseInt(hex.substr(i * 2, 2), 16)\n  }\n  return arr\n}\n\nconst UTF_8_DECODER = new TextDecoder()\n\n/**\n * Returns the URI representation of the content hash for supported codecs\n * @param contenthash to decode\n */\nexport default function contenthashToUri(contenthash: string): string {\n  const buff = hexToUint8Array(contenthash)\n  const codec = getCodec(buff as Buffer) // the typing is wrong for @types/multicodec\n  switch (codec) {\n    case 'ipfs-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      return `ipfs://${toB58String(cid.multihash)}`\n    }\n    case 'ipns-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      const multihash = decode(cid.multihash)\n      if (multihash.name === 'identity') {\n        return `ipns://${UTF_8_DECODER.decode(multihash.digest).trim()}`\n      }\n      return `ipns://${toB58String(cid.multihash)}`\n    }\n    default:\n      throw new Error(`Unrecognized codec: ${codec}`)\n  }\n}\n","import BigNumber from 'bignumber.js'\nimport { Farm, Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | Pool['userData']\n  | {\n      allowance: number | string\n      stakingTokenBalance: number | string\n      stakedBalance: number | string\n      pendingReward: number | string\n    }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nexport const transformPool = (pool: Pool): Pool => {\n  const { totalStaked, stakingLimit, userData, ...rest } = pool\n\n  return {\n    ...rest,\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit),\n  } as Pool\n}\n\nexport const getTokenPricesFromFarm = (farms: Farm[]) => {\n  return farms.reduce((prices, farm) => {\n    const quoteTokenAddress = getAddress(farm.quoteToken.address).toLocaleLowerCase()\n    const tokenAddress = getAddress(farm.token.address).toLocaleLowerCase()\n    // debugger; // eslint-disable-line no-debugger\n    /* eslint-disable no-param-reassign */\n    if (!prices[quoteTokenAddress]) {\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteToken.busdPrice).toNumber()\n    }\n    if (!prices[tokenAddress]) {\n      prices[tokenAddress] = new BigNumber(farm.token.busdPrice).toNumber()\n    }\n    /* eslint-enable no-param-reassign */\n    return prices\n  }, {})\n}\n","import React, { useState, useEffect, useRef } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// Check if the tab is active in the user browser\nconst useIsBrowserTabActive = () => {\n  const isBrowserTabActiveRef = useRef(true)\n\n  useEffect(() => {\n    const onVisibilityChange = () => {\n      isBrowserTabActiveRef.current = !document.hidden\n    }\n\n    window.addEventListener('visibilitychange', onVisibilityChange)\n\n    return () => {\n      window.removeEventListener('visibilitychange', onVisibilityChange)\n    }\n  }, [])\n\n  return isBrowserTabActiveRef\n}\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n  const isBrowserTabActiveRef = useIsBrowserTabActive()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setFast((prev) => prev + 1)\n      }\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setSlow((prev) => prev + 1)\n      }\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import React from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport { Button, Text, Modal, useModal, InjectedModalProps, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { AutoRow } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { useUnsupportedTokens } from '../hooks/Tokens'\n\ninterface Props extends InjectedModalProps {\n  currencies: (Currency | undefined)[]\n}\n\nconst DetailsFooter = styled.div`\n  padding: 8px 0;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.colors.text};\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  text-align: center;\n`\n\nconst UnsupportedModal: React.FC<Props> = ({ currencies, onDismiss }) => {\n  const { chainId } = useActiveWeb3React()\n  const tokens =\n    chainId && currencies\n      ? currencies.map((currency) => {\n          return wrappedCurrency(currency, chainId)\n        })\n      : []\n\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n\n  return (\n    <Modal title=\"Unsupported Assets\" maxWidth=\"420px\" onDismiss={onDismiss}>\n      <AutoColumn gap=\"lg\">\n        {tokens.map((token) => {\n          return (\n            token &&\n            unsupportedTokens &&\n            Object.keys(unsupportedTokens).includes(token.address) && (\n              <AutoColumn key={token.address?.concat('not-supported')} gap=\"10px\">\n                <AutoRow gap=\"5px\" align=\"center\">\n                  <CurrencyLogo currency={token} size=\"24px\" />\n                  <Text>{token.symbol}</Text>\n                </AutoRow>\n                {chainId && (\n                  <Link external small color=\"primaryDark\" href={getBscScanLink(token.address, 'address', chainId)}>\n                    {token.address}\n                  </Link>\n                )}\n              </AutoColumn>\n            )\n          )\n        })}\n        <AutoColumn gap=\"lg\">\n          <Text>\n            Some assets are not available through this interface because they may not work well with our smart contract\n            or we are unable to allow trading for legal reasons.\n          </Text>\n        </AutoColumn>\n      </AutoColumn>\n    </Modal>\n  )\n}\n\nexport default function UnsupportedCurrencyFooter({ currencies }: { currencies: (Currency | undefined)[] }) {\n  const [onPresentModal] = useModal(<UnsupportedModal currencies={currencies} />)\n\n  return (\n    <DetailsFooter>\n      <Button variant=\"text\" onClick={onPresentModal}>\n        Read more about unsupported assets\n      </Button>\n    </DetailsFooter>\n  )\n}\n","import React, { useState } from 'react'\nimport { HelpIcon } from '@pancakeswap/uikit'\n\nconst BAD_SRCS: { [tokenAddress: string]: true } = {}\n\nexport interface LogoProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  srcs: string[]\n}\n\n/**\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\n */\nconst Logo: React.FC<LogoProps> = ({ srcs, alt, ...rest }) => {\n  const [, refresh] = useState<number>(0)\n\n  const src: string | undefined = srcs.find((s) => !BAD_SRCS[s])\n\n  if (src) {\n    return (\n      <img\n        {...rest}\n        alt={alt}\n        src={src}\n        onError={() => {\n          if (src) BAD_SRCS[src] = true\n          refresh((i) => i + 1)\n        }}\n      />\n    )\n  }\n\n  return <HelpIcon {...rest} />\n}\n\nexport default Logo\n","import React, { useState } from 'react'\nimport { Token, Currency } from '@pancakeswap/sdk'\nimport { Button, Text, ErrorIcon, Flex, Message, Checkbox, Link, Tag, Grid } from '@pancakeswap/uikit'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { useAddUserToken } from 'state/user/hooks'\nimport { getBscScanLink } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport { ListLogo } from 'components/Logo'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  tokens: Token[]\n  handleCurrencySelect?: (currency: Currency) => void\n}\n\nfunction ImportToken({ tokens, handleCurrencySelect }: ImportProps) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [confirmed, setConfirmed] = useState(false)\n\n  const addToken = useAddUserToken()\n\n  // use for showing import source on inactive tokens\n  const inactiveTokenList = useCombinedInactiveList()\n\n  return (\n    <AutoColumn gap=\"lg\">\n      <Message variant=\"warning\">\n        <Text>\n          {t(\n            'Anyone can create a HRC20 token on Harmony with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.',\n          )}\n          <br />\n          <br />\n          {t('If you purchase an arbitrary token, you may be unable to sell it back.')}\n        </Text>\n      </Message>\n\n      {tokens.map((token) => {\n        const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n        const address = token.address\n          ? `${token.address.substring(0, 6)}...${token.address.substring(token.address.length - 4)}`\n          : null\n        return (\n          <Grid key={token.address} gridTemplateRows=\"1fr 1fr 1fr\" gridGap=\"4px\">\n            {list !== undefined ? (\n              <Tag\n                variant=\"success\"\n                outline\n                scale=\"sm\"\n                startIcon={list.logoURI && <ListLogo logoURI={list.logoURI} size=\"12px\" />}\n              >\n                {t('via')} {list.name}\n              </Tag>\n            ) : (\n              <Tag variant=\"failure\" outline scale=\"sm\" startIcon={<ErrorIcon color=\"failure\" />}>\n                {t('Unknown Source')}\n              </Tag>\n            )}\n            <Flex alignItems=\"center\">\n              <Text mr=\"8px\">{token.name}</Text>\n              <Text>({token.symbol})</Text>\n            </Flex>\n            {chainId && (\n              <Flex justifyContent=\"space-between\" width=\"100%\">\n                <Text mr=\"4px\">{address}</Text>\n                <Link href={getBscScanLink(token.address, 'address', chainId)} external>\n                  ({t('View on Explorer')})\n                </Link>\n              </Flex>\n            )}\n          </Grid>\n        )\n      })}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex alignItems=\"center\" onClick={() => setConfirmed(!confirmed)}>\n          <Checkbox\n            scale=\"sm\"\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={confirmed}\n            onChange={() => setConfirmed(!confirmed)}\n          />\n          <Text ml=\"8px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n        <Button\n          variant=\"danger\"\n          disabled={!confirmed}\n          onClick={() => {\n            tokens.map((token) => addToken(token))\n            if (handleCurrencySelect) {\n              handleCurrencySelect(tokens[0])\n            }\n          }}\n          className=\".token-dismiss-button\"\n        >\n          {t('Import')}\n        </Button>\n      </Flex>\n    </AutoColumn>\n  )\n}\n\nexport default ImportToken\n","import { CurrencyAmount, ETHER, JSBI } from '@pancakeswap/sdk'\nimport { MIN_BNB } from '../config/constants'\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\n  if (!currencyAmount) return undefined\n  if (currencyAmount.currency === ETHER) {\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_BNB)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_BNB))\n    }\n    return CurrencyAmount.ether(JSBI.BigInt(0))\n  }\n  return currencyAmount\n}\n\nexport default maxAmountSpend\n","import React, { useState } from 'react'\nimport { Text, Button, Input, Flex, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useUserSlippageTolerance, useUserTransactionTTL } from 'state/user/hooks'\nimport QuestionHelper from '../../QuestionHelper'\n\nenum SlippageError {\n  InvalidInput = 'InvalidInput',\n  RiskyLow = 'RiskyLow',\n  RiskyHigh = 'RiskyHigh',\n}\n\nenum DeadlineError {\n  InvalidInput = 'InvalidInput',\n}\n\nconst SlippageTabs = () => {\n  const [userSlippageTolerance, setUserslippageTolerance] = useUserSlippageTolerance()\n  const [ttl, setTtl] = useUserTransactionTTL()\n  const [slippageInput, setSlippageInput] = useState('')\n  const [deadlineInput, setDeadlineInput] = useState('')\n\n  const { t } = useTranslation()\n\n  const slippageInputIsValid =\n    slippageInput === '' || (userSlippageTolerance / 100).toFixed(2) === Number.parseFloat(slippageInput).toFixed(2)\n  const deadlineInputIsValid = deadlineInput === '' || (ttl / 60).toString() === deadlineInput\n\n  let slippageError: SlippageError | undefined\n  if (slippageInput !== '' && !slippageInputIsValid) {\n    slippageError = SlippageError.InvalidInput\n  } else if (slippageInputIsValid && userSlippageTolerance < 50) {\n    slippageError = SlippageError.RiskyLow\n  } else if (slippageInputIsValid && userSlippageTolerance > 500) {\n    slippageError = SlippageError.RiskyHigh\n  } else {\n    slippageError = undefined\n  }\n\n  let deadlineError: DeadlineError | undefined\n  if (deadlineInput !== '' && !deadlineInputIsValid) {\n    deadlineError = DeadlineError.InvalidInput\n  } else {\n    deadlineError = undefined\n  }\n\n  const parseCustomSlippage = (value: string) => {\n    setSlippageInput(value)\n\n    try {\n      const valueAsIntFromRoundedFloat = Number.parseInt((Number.parseFloat(value) * 100).toString())\n      if (!Number.isNaN(valueAsIntFromRoundedFloat) && valueAsIntFromRoundedFloat < 5000) {\n        setUserslippageTolerance(valueAsIntFromRoundedFloat)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  const parseCustomDeadline = (value: string) => {\n    setDeadlineInput(value)\n\n    try {\n      const valueAsInt: number = Number.parseInt(value) * 60\n      if (!Number.isNaN(valueAsInt) && valueAsInt > 0) {\n        setTtl(valueAsInt)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\" mb=\"24px\">\n        <Flex mb=\"12px\">\n          <Text>{t('Slippage Tolerance')}</Text>\n          <QuestionHelper\n            text={t(\n              'Setting a high slippage tolerance can help transactions succeed, but you may not get such a good price. Use with caution.',\n            )}\n            ml=\"4px\"\n          />\n        </Flex>\n        <Flex flexWrap=\"wrap\">\n          <Button\n            mt=\"4px\"\n            mr=\"4px\"\n            scale=\"sm\"\n            onClick={() => {\n              setSlippageInput('')\n              setUserslippageTolerance(10)\n            }}\n            variant={userSlippageTolerance === 10 ? 'primary' : 'tertiary'}\n          >\n            0.1%\n          </Button>\n          <Button\n            mt=\"4px\"\n            mr=\"4px\"\n            scale=\"sm\"\n            onClick={() => {\n              setSlippageInput('')\n              setUserslippageTolerance(50)\n            }}\n            variant={userSlippageTolerance === 50 ? 'primary' : 'tertiary'}\n          >\n            0.5%\n          </Button>\n          <Button\n            mr=\"4px\"\n            mt=\"4px\"\n            scale=\"sm\"\n            onClick={() => {\n              setSlippageInput('')\n              setUserslippageTolerance(100)\n            }}\n            variant={userSlippageTolerance === 100 ? 'primary' : 'tertiary'}\n          >\n            1.0%\n          </Button>\n          <Flex alignItems=\"center\">\n            <Box width=\"76px\" mt=\"4px\">\n              <Input\n                scale=\"sm\"\n                placeholder={(userSlippageTolerance / 100).toFixed(2)}\n                value={slippageInput}\n                onBlur={() => {\n                  parseCustomSlippage((userSlippageTolerance / 100).toFixed(2))\n                }}\n                onChange={(e) => parseCustomSlippage(e.target.value)}\n                isWarning={!slippageInputIsValid}\n                isSuccess={![10, 50, 100].includes(userSlippageTolerance)}\n              />\n            </Box>\n            <Text color=\"primary\" bold ml=\"2px\">\n              %\n            </Text>\n          </Flex>\n        </Flex>\n        {!!slippageError && (\n          <Text fontSize=\"14px\" color={slippageError === SlippageError.InvalidInput ? 'red' : '#F3841E'} mt=\"8px\">\n            {slippageError === SlippageError.InvalidInput\n              ? t('Enter a valid slippage percentage')\n              : slippageError === SlippageError.RiskyLow\n              ? t('Your transaction may fail')\n              : t('Your transaction may be frontrun')}\n          </Text>\n        )}\n      </Flex>\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Flex alignItems=\"center\">\n          <Text>{t('Tx deadline (mins)')}</Text>\n          <QuestionHelper\n            text={t('Your transaction will revert if it is left confirming for longer than this time.')}\n            ml=\"4px\"\n          />\n        </Flex>\n        <Flex>\n          <Box width=\"52px\" mt=\"4px\">\n            <Input\n              scale=\"sm\"\n              color={deadlineError ? 'red' : undefined}\n              onBlur={() => {\n                parseCustomDeadline((ttl / 60).toString())\n              }}\n              placeholder={(ttl / 60).toString()}\n              value={deadlineInput}\n              onChange={(e) => parseCustomDeadline(e.target.value)}\n            />\n          </Box>\n        </Flex>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default SlippageTabs\n","import React, { useState } from 'react'\nimport { Button, Text, Flex, Message, Modal, InjectedModalProps, Checkbox } from '@pancakeswap/uikit'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ExpertModalProps extends InjectedModalProps {\n  setShowConfirmExpertModal: (boolean) => void\n  setRememberExpertModeAcknowledgement: (boolean) => void\n}\n\nconst ExpertModal: React.FC<ExpertModalProps> = ({\n  setShowConfirmExpertModal,\n  setRememberExpertModeAcknowledgement,\n}) => {\n  const [, toggleExpertMode] = useExpertModeManager()\n  const [isRememberChecked, setIsRememberChecked] = useState(false)\n\n  const { t } = useTranslation()\n\n  return (\n    <Modal\n      title={t('Expert Mode')}\n      onBack={() => setShowConfirmExpertModal(false)}\n      onDismiss={() => setShowConfirmExpertModal(false)}\n      headerBackground=\"gradients.cardHeader\"\n      style={{ maxWidth: '360px' }}\n    >\n      <Message variant=\"warning\" mb=\"24px\">\n        <Text>\n          {t(\n            \"Expert mode turns off the 'Confirm' transaction prompt, and allows high slippage trades that often result in bad rates and lost funds.\",\n          )}\n        </Text>\n      </Message>\n      <Text mb=\"24px\">{t('Only use this mode if you know what you’re doing.')}</Text>\n      <Flex alignItems=\"center\" mb=\"24px\">\n        <Checkbox\n          name=\"confirmed\"\n          type=\"checkbox\"\n          checked={isRememberChecked}\n          onChange={() => setIsRememberChecked(!isRememberChecked)}\n          scale=\"sm\"\n        />\n        <Text ml=\"10px\" color=\"textSubtle\" style={{ userSelect: 'none' }}>\n          {t('Don’t show this again')}\n        </Text>\n      </Flex>\n      <Button\n        mb=\"8px\"\n        id=\"confirm-expert-mode\"\n        onClick={() => {\n          // eslint-disable-next-line no-alert\n          if (window.prompt(`Please type the word \"confirm\" to enable expert mode.`) === 'confirm') {\n            toggleExpertMode()\n            setShowConfirmExpertModal(false)\n            if (isRememberChecked) {\n              setRememberExpertModeAcknowledgement(true)\n            }\n          }\n        }}\n      >\n        {t('Turn On Expert Mode')}\n      </Button>\n      <Button\n        variant=\"secondary\"\n        onClick={() => {\n          setShowConfirmExpertModal(false)\n        }}\n      >\n        {t('Cancel')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default ExpertModal\n","import React from 'react'\nimport { Flex, Button, Text } from '@pancakeswap/uikit'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport { GAS_PRICE_GWEI, GAS_PRICE } from 'state/user/hooks/helpers'\nimport { useGasPriceManager } from 'state/user/hooks'\n\nconst GasSettings = () => {\n  const { t } = useTranslation()\n  const [gasPrice, setGasPrice] = useGasPriceManager()\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex mb=\"12px\" alignItems=\"center\">\n        <Text>{t('Default Transaction Speed (GWEI)')}</Text>\n        <QuestionHelper\n          text={t(\n            'Adjusts the gas price (transaction fee) for your transaction. Higher GWEI = higher speed = higher fees',\n          )}\n          ml=\"4px\"\n        />\n      </Flex>\n      <Flex flexWrap=\"wrap\">\n        <Button\n          mt=\"4px\"\n          mr=\"4px\"\n          scale=\"sm\"\n          onClick={() => {\n            setGasPrice(GAS_PRICE_GWEI.default)\n          }}\n          variant={gasPrice === GAS_PRICE_GWEI.default ? 'primary' : 'tertiary'}\n        >\n          {t('Standard (%gasPrice%)', { gasPrice: GAS_PRICE.default })}\n        </Button>\n        <Button\n          mt=\"4px\"\n          mr=\"4px\"\n          scale=\"sm\"\n          onClick={() => {\n            setGasPrice(GAS_PRICE_GWEI.fast)\n          }}\n          variant={gasPrice === GAS_PRICE_GWEI.fast ? 'primary' : 'tertiary'}\n        >\n          {t('Fast (%gasPrice%)', { gasPrice: GAS_PRICE.fast })}\n        </Button>\n        <Button\n          mr=\"4px\"\n          mt=\"4px\"\n          scale=\"sm\"\n          onClick={() => {\n            setGasPrice(GAS_PRICE_GWEI.instant)\n          }}\n          variant={gasPrice === GAS_PRICE_GWEI.instant ? 'primary' : 'tertiary'}\n        >\n          {t('Instant (%gasPrice%)', { gasPrice: GAS_PRICE.instant })}\n        </Button>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default GasSettings\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, PancakeToggle, Toggle, Flex, Modal, InjectedModalProps } from '@pancakeswap/uikit'\nimport { useAudioModeManager, useExpertModeManager, useUserSingleHopOnly } from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { useSwapActionHandlers } from 'state/swap/hooks'\nimport usePersistState from 'hooks/usePersistState'\nimport useTheme from 'hooks/useTheme'\nimport QuestionHelper from '../../QuestionHelper'\nimport TransactionSettings from './TransactionSettings'\nimport ExpertModal from './ExpertModal'\nimport GasSettings from './GasSettings'\n\n// TODO: Temporary. Once uikit is merged with this style change, this can be removed.\nconst PancakeToggleWrapper = styled.div`\n  .pancakes {\n    position: absolute;\n  }\n`\n\nconst SettingsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const [showConfirmExpertModal, setShowConfirmExpertModal] = useState(false)\n  const [rememberExpertModeAcknowledgement, setRememberExpertModeAcknowledgement] = usePersistState(false, {\n    localStorageKey: 'pancake_expert_mode_remember_acknowledgement',\n  })\n  const [expertMode, toggleExpertMode] = useExpertModeManager()\n  const [singleHopOnly, setSingleHopOnly] = useUserSingleHopOnly()\n  const [audioPlay, toggleSetAudioMode] = useAudioModeManager()\n  const { onChangeRecipient } = useSwapActionHandlers()\n\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  if (showConfirmExpertModal) {\n    return (\n      <ExpertModal\n        setShowConfirmExpertModal={setShowConfirmExpertModal}\n        onDismiss={onDismiss}\n        setRememberExpertModeAcknowledgement={setRememberExpertModeAcknowledgement}\n      />\n    )\n  }\n\n  const handleExpertModeToggle = () => {\n    if (expertMode) {\n      onChangeRecipient(null)\n      toggleExpertMode()\n    } else if (rememberExpertModeAcknowledgement) {\n      onChangeRecipient(null)\n      toggleExpertMode()\n    } else {\n      setShowConfirmExpertModal(true)\n    }\n  }\n\n  return (\n    <Modal\n      title={t('Settings')}\n      headerBackground=\"gradients.cardHeader\"\n      onDismiss={onDismiss}\n      style={{ maxWidth: '420px' }}\n    >\n      <Flex flexDirection=\"column\">\n        <Flex pb=\"24px\" flexDirection=\"column\">\n          <Text bold textTransform=\"uppercase\" fontSize=\"12px\" color=\"secondary\" mb=\"24px\">\n            {t('Global')}\n          </Text>\n          <GasSettings />\n        </Flex>\n        <Flex pt=\"24px\" flexDirection=\"column\" borderTop={`1px ${theme.colors.cardBorder} solid`}>\n          <Text bold textTransform=\"uppercase\" fontSize=\"12px\" color=\"secondary\" mb=\"24px\">\n            {t('Swaps & Liquidity')}\n          </Text>\n        </Flex>\n        <TransactionSettings />\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n          <Flex alignItems=\"center\">\n            <Text>{t('Expert Mode')}</Text>\n            <QuestionHelper\n              text={t('Bypasses confirmation modals and allows high slippage trades. Use at your own risk.')}\n              ml=\"4px\"\n            />\n          </Flex>\n          <Toggle id=\"toggle-expert-mode-button\" scale=\"md\" checked={expertMode} onChange={handleExpertModeToggle} />\n        </Flex>\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n          <Flex alignItems=\"center\">\n            <Text>{t('Disable Multihops')}</Text>\n            <QuestionHelper text={t('Restricts swaps to direct pairs only.')} ml=\"4px\" />\n          </Flex>\n          <Toggle\n            id=\"toggle-disable-multihop-button\"\n            checked={singleHopOnly}\n            scale=\"md\"\n            onChange={() => {\n              setSingleHopOnly(!singleHopOnly)\n            }}\n          />\n        </Flex>\n        {/* <Flex justifyContent=\"space-between\" alignItems=\"center\">\n          <Flex alignItems=\"center\">\n            <Text>{t('Flippy sounds')}</Text>\n            <QuestionHelper\n              text={t('Fun sounds to make a truly immersive pancake-flipping trading experience')}\n              ml=\"4px\"\n            />\n          </Flex>\n          <PancakeToggleWrapper>\n            <PancakeToggle checked={audioPlay} onChange={toggleSetAudioMode} scale=\"md\" />\n          </PancakeToggleWrapper>\n        </Flex> */}\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default SettingsModal\n","import React from 'react'\nimport { Flex, IconButton, CogIcon, useModal } from '@pancakeswap/uikit'\nimport SettingsModal from './SettingsModal'\n\nconst GlobalSettings = () => {\n  const [onPresentSettingsModal] = useModal(<SettingsModal />)\n\n  return (\n    <Flex>\n      <IconButton onClick={onPresentSettingsModal} variant=\"text\" scale=\"sm\" mr=\"8px\">\n        <CogIcon height={22} width={22} color=\"textSubtle\" />\n      </IconButton>\n    </Flex>\n  )\n}\n\nexport default GlobalSettings\n","import { useMemo } from 'react'\nimport contenthashToUri from 'utils/contenthashToUri'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport uriToHttp from 'utils/uriToHttp'\nimport useENSContentHash from './ENS/useENSContentHash'\n\nexport default function useHttpLocations(uri: string | undefined): string[] {\n  const ens = useMemo(() => (uri ? parseENSAddress(uri) : undefined), [uri])\n  const resolvedContentHash = useENSContentHash(ens?.ensName)\n  return useMemo(() => {\n    if (ens) {\n      return resolvedContentHash.contenthash ? uriToHttp(contenthashToUri(resolvedContentHash.contenthash)) : []\n    }\n    return uri ? uriToHttp(uri) : []\n  }, [ens, resolvedContentHash.contenthash, uri])\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\n\n/**\n * Does a lookup for an ENS name to find its contenthash.\n */\nexport default function useENSContentHash(ensName?: string | null): { loading: boolean; contenthash: string | null } {\n  const ensNodeArgument = useMemo(() => {\n    if (!ensName) return [undefined]\n    try {\n      return ensName ? [namehash(ensName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [ensName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddressResult = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddress = resolverAddressResult.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddress && isZero(resolverAddress) ? undefined : resolverAddress,\n    false,\n  )\n  const contenthash = useSingleCallResult(resolverContract, 'contenthash', ensNodeArgument)\n\n  return {\n    contenthash: contenthash.result?.[0] ?? null,\n    loading: resolverAddressResult.loading || contenthash.loading,\n  }\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  LIQUIDITY_PERCENT = 'LIQUIDITY_PERCENT',\n  LIQUIDITY = 'LIQUIDITY',\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('burn/typeInputBurn')\n","import { ethers } from 'ethers'\nimport { Campaign } from 'config/constants/types'\nimport ifosList from 'config/constants/ifo'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { Achievement, TranslatableText } from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { getPointCenterIfoAddress } from 'utils/addressHelpers'\nimport pointCenterIfoABI from 'config/abi/pointCenterIfo.json'\n\ninterface IfoMapResponse {\n  thresholdToClaim: string\n  campaignId: string\n  numberPoints: ethers.BigNumber\n}\n\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'IFO Shopper: %title%',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.title\n  }\n}\n\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'Committed more than $5 worth of LP in the %title% IFO',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.description\n  }\n}\n\n/**\n * Checks if a wallet is eligible to claim points from valid IFO's\n */\nexport const getClaimableIfoData = async (account: string): Promise<Achievement[]> => {\n  const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\n\n  // Returns the claim status of every IFO with a campaign ID\n  const claimStatusCalls = ifoCampaigns.map(({ address }) => {\n    return {\n      address: getPointCenterIfoAddress(),\n      name: 'checkClaimStatus',\n      params: [account, address],\n    }\n  })\n\n  const claimStatuses = (await multicallv2(pointCenterIfoABI, claimStatusCalls, { requireSuccess: false })) as\n    | [boolean][]\n    | null\n\n  // Get IFO data for all IFO's that are eligible to claim\n  const claimableIfoData = (await multicallv2(\n    pointCenterIfoABI,\n    claimStatuses.reduce((accum, claimStatusArr, index) => {\n      if (claimStatusArr === null) {\n        return accum\n      }\n\n      const [claimStatus] = claimStatusArr\n\n      if (claimStatus === true) {\n        return [...accum, { address: getPointCenterIfoAddress(), name: 'ifos', params: [index] }]\n      }\n\n      return accum\n    }, []),\n  )) as IfoMapResponse[]\n\n  // Transform response to an Achievement\n  return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\n    if (!campaignMap.has(claimableIfoDataItem.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(claimableIfoDataItem.campaignId)\n    const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableIfoDataItem.campaignId)\n\n    return [\n      ...accum,\n      {\n        address,\n        id: claimableIfoDataItem.campaignId,\n        type: 'ifo',\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: claimableIfoDataItem.numberPoints.toNumber(),\n      },\n    ]\n  }, [])\n}\n","export const Latinise = {\n  latin_map: {\n    τ: 't',\n    Τ: 'T',\n  },\n}\n\nexport const latinise = (input: string) => {\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Pair, Percent, Price, TokenAmount } from '@pancakeswap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { PairState, usePair } from 'hooks/usePairs'\nimport useTotalSupply from 'hooks/useTotalSupply'\n\nimport { wrappedCurrency, wrappedCurrencyAmount } from 'utils/wrappedCurrency'\nimport { AppDispatch, AppState } from '../index'\nimport { tryParseAmount } from '../swap/hooks'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, typeInput } from './actions'\n\nconst ZERO = JSBI.BigInt(0)\n\nexport function useMintState(): AppState['mint'] {\n  return useSelector<AppState, AppState['mint']>((state) => state.mint)\n}\n\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n  }\n}\n\nexport function useDerivedMintInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n): {\n  dependentField: Field\n  currencies: { [field in Field]?: Currency }\n  pair?: Pair | null\n  pairState: PairState\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  price?: Price\n  noLiquidity?: boolean\n  liquidityMinted?: TokenAmount\n  poolTokenPercentage?: Percent\n  error?: string\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // tokens\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB],\n  )\n\n  // pair\n  const [pairState, pair] = usePair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\n\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  const noLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.raw, ZERO))\n\n  // balances\n  const balances = useCurrencyBalances(account ?? undefined, [\n    currencies[Field.CURRENCY_A],\n    currencies[Field.CURRENCY_B],\n  ])\n  const currencyBalances: { [field in Field]?: CurrencyAmount } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // amounts\n  const independentAmount: CurrencyAmount | undefined = tryParseAmount(typedValue, currencies[independentField])\n  const dependentAmount: CurrencyAmount | undefined = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\n      }\n      return undefined\n    }\n    if (independentAmount) {\n      // we wrap the currencies just to get the price in terms of the other token\n      const wrappedIndependentAmount = wrappedCurrencyAmount(independentAmount, chainId)\n      const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n        const dependentTokenAmount =\n          dependentField === Field.CURRENCY_B\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\n        return dependentCurrency === ETHER ? CurrencyAmount.ether(dependentTokenAmount.raw) : dependentTokenAmount\n      }\n      return undefined\n    }\n    return undefined\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, chainId, currencyB, pair])\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount | undefined } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }),\n    [dependentAmount, independentAmount, independentField],\n  )\n\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n      if (currencyAAmount && currencyBAmount) {\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, currencyAAmount.raw, currencyBAmount.raw)\n      }\n      return undefined\n    }\n    const wrappedCurrencyA = wrappedCurrency(currencyA, chainId)\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\n  }, [chainId, currencyA, noLiquidity, pair, parsedAmounts])\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n    const [tokenAmountA, tokenAmountB] = [\n      wrappedCurrencyAmount(currencyAAmount, chainId),\n      wrappedCurrencyAmount(currencyBAmount, chainId),\n    ]\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\n    }\n    return undefined\n  }, [parsedAmounts, chainId, pair, totalSupply])\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw)\n    }\n    return undefined\n  }, [liquidityMinted, totalSupply])\n\n  let error: string | undefined\n  if (!account) {\n    error = 'Connect Wallet'\n  }\n\n  if (pairState === PairState.INVALID) {\n    error = error ?? 'Invalid pair'\n  }\n\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? 'Enter an amount'\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_A]?.symbol} balance`\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_B]?.symbol} balance`\n  }\n\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  }\n}\n","import { Currency, CurrencyAmount, Fraction, Percent } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { Button, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\nimport { CurrencyLogo } from '../../components/Logo'\nimport { Field } from '../../state/mint/actions'\n\nfunction ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd,\n}: {\n  noLiquidity?: boolean\n  price?: Fraction\n  currencies: { [field in Field]?: Currency }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  poolTokenPercentage?: Percent\n  onAdd: () => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Rates')}</Text>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\n            currencies[Field.CURRENCY_B]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\n            currencies[Field.CURRENCY_A]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Share of Pool')}:</Text>\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\n      </RowBetween>\n      <Button onClick={onAdd} mt=\"20px\">\n        {noLiquidity ? t('Create Pool & Supply') : t('Confirm Supply')}\n      </Button>\n    </>\n  )\n}\n\nexport default ConfirmAddModalBottom\n","import { Currency, Percent, Price } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { AutoColumn } from '../../components/Layout/Column'\nimport { AutoRow } from '../../components/Layout/Row'\nimport { ONE_BIPS } from '../../config/constants'\nimport { Field } from '../../state/mint/actions'\n\nfunction PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price,\n}: {\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow justify=\"space-around\" gap=\"4px\">\n        <AutoColumn justify=\"center\">\n          <Text>{price?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_B]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_A]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>\n            {noLiquidity && price\n              ? '100'\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\n            %\n          </Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('Share of Pool')}\n          </Text>\n        </AutoColumn>\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n\nexport default PoolPriceBar\n","import React, { useCallback, useState } from 'react'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@pancakeswap/sdk'\nimport { Button, Text, Flex, AddIcon, CardBody, Message, useModal } from '@pancakeswap/uikit'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport { useTranslation } from 'contexts/Localization'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { DoubleCurrencyLogo } from '../../components/Logo'\nimport { AppHeader, AppBody } from '../../components/App'\nimport { MinimalPositionCard } from '../../components/PositionCard'\nimport Row, { RowBetween } from '../../components/Layout/Row'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { ROUTER_ADDRESS } from '../../config/constants'\nimport { PairState } from '../../hooks/usePairs'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { Field } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { useGasPrice, useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\nimport Dots from '../../components/Loader/Dots'\nimport ConfirmAddModalBottom from './ConfirmAddModalBottom'\nimport { currencyId } from '../../utils/currencyId'\nimport PoolPriceBar from './PoolPriceBar'\nimport Page from '../Page'\n\nexport default function AddLiquidity({\n  match: {\n    params: { currencyIdA, currencyIdB },\n  },\n  history,\n}: RouteComponentProps<{ currencyIdA?: string; currencyIdB?: string }>) {\n  const { account, chainId, library } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const gasPrice = useGasPrice()\n\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\n        (currencyB && currencyEquals(currencyB, WETH[chainId]))),\n  )\n\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {},\n  )\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS)\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return\n    const router = getRouterContract(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n\n    let estimate\n    let method: (...args: any) => Promise<TransactionResponse>\n    let args: Array<string | string[] | number>\n    let value: BigNumber | null\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsETH = currencyB === ETHER\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n          gasPrice,\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencies[Field.CURRENCY_A]?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        }),\n      )\n      .catch((err) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (err?.code !== 4001) {\n          console.error(err)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <Flex alignItems=\"center\">\n        <Text fontSize=\"48px\" marginRight=\"10px\">\n          {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\n        </Text>\n        <DoubleCurrencyLogo\n          currency0={currencies[Field.CURRENCY_A]}\n          currency1={currencies[Field.CURRENCY_B]}\n          size={30}\n        />\n      </Flex>\n    ) : (\n      <AutoColumn>\n        <Flex alignItems=\"center\">\n          <Text fontSize=\"48px\" marginRight=\"10px\">\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </Flex>\n        <Row>\n          <Text fontSize=\"24px\">\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\n          </Text>\n        </Row>\n        <Text small textAlign=\"left\" my=\"24px\">\n          {t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\n            slippage: allowedSlippage / 100,\n          })}\n        </Text>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n    symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n  })\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA_: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA_)\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/add/${currencyIdB}/${currencyIdA}`)\n      } else {\n        history.push(`/add/${newCurrencyIdA}/${currencyIdB}`)\n      }\n    },\n    [currencyIdB, history, currencyIdA],\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB_: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB_)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/add/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          history.push(`/add/${newCurrencyIdB}`)\n        }\n      } else {\n        history.push(`/add/${currencyIdA || 'BNB'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, history, currencyIdB],\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  const [onPresentAddLiquidityModal] = useModal(\n    <TransactionConfirmationModal\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\n      pendingText={pendingText}\n      currencyToAdd={pair?.liquidityToken}\n    />,\n    true,\n    true,\n    'addLiquidityModal',\n  )\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader\n          title={t('Add Liquidity')}\n          subtitle={t('Add liquidity to receive LP tokens')}\n          helper={t(\n            'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\n          )}\n          backTo=\"/pool\"\n        />\n        <CardBody>\n          <AutoColumn gap=\"20px\">\n            {noLiquidity && (\n              <ColumnCenter>\n                <Message variant=\"warning\">\n                  <div>\n                    <Text bold mb=\"8px\">\n                      {t('You are the first liquidity provider.')}\n                    </Text>\n                    <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\n                    <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\n                  </div>\n                </Message>\n              </ColumnCenter>\n            )}\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onFieldAInput}\n              onMax={() => {\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n              }}\n              onCurrencySelect={handleCurrencyASelect}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n              currency={currencies[Field.CURRENCY_A]}\n              id=\"add-liquidity-input-tokena\"\n              showCommonBases\n            />\n            <ColumnCenter>\n              <AddIcon width=\"16px\" />\n            </ColumnCenter>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onFieldBInput}\n              onCurrencySelect={handleCurrencyBSelect}\n              onMax={() => {\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n              }}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n              currency={currencies[Field.CURRENCY_B]}\n              id=\"add-liquidity-input-tokenb\"\n              showCommonBases\n            />\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n              <>\n                <LightCard padding=\"0px\" borderRadius=\"0px\">\n                  <RowBetween padding=\"1rem\">\n                    <Text fontSize=\"14px\">\n                      {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\n                    </Text>\n                  </RowBetween>{' '}\n                  <LightCard padding=\"1rem\" borderRadius=\"0px\">\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </LightCard>\n                </LightCard>\n              </>\n            )}\n\n            {addIsUnsupported ? (\n              <Button disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton />\n            ) : (\n              <AutoColumn gap=\"md\">\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveACallback}\n                          disabled={approvalA === ApprovalState.PENDING}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                    </RowBetween>\n                  )}\n                <Button\n                  variant={\n                    !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n                      ? 'danger'\n                      : 'primary'\n                  }\n                  onClick={() => {\n                    if (expertMode) {\n                      onAdd()\n                    } else {\n                      onPresentAddLiquidityModal()\n                    }\n                  }}\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                >\n                  {error ?? t('Supply')}\n                </Button>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n        </CardBody>\n      </AppBody>\n      {!addIsUnsupported ? (\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n          </AutoColumn>\n        ) : null\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\n      )}\n    </Page>\n  )\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport maxBy from 'lodash/maxBy'\nimport merge from 'lodash/merge'\nimport range from 'lodash/range'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Bet, LedgerData, HistoryFilter, PredictionsState, PredictionStatus, ReduxNodeRound } from 'state/types'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport {\n  getBetHistory,\n  transformBetResponse,\n  makeFutureRoundResponse,\n  makeRoundData,\n  getRoundsData,\n  getPredictionData,\n  MarketData,\n  getLedgerData,\n  makeLedgerData,\n  serializePredictionsRoundsResponse,\n  getClaimStatuses,\n} from './helpers'\n\nconst PAST_ROUND_COUNT = 5\nconst FUTURE_ROUND_COUNT = 2\n\n// The estimated time it takes to broadcast\nexport const BLOCK_PADDING = 3\n\nconst initialState: PredictionsState = {\n  status: PredictionStatus.INITIAL,\n  isLoading: false,\n  isHistoryPaneOpen: false,\n  isChartPaneOpen: false,\n  isFetchingHistory: false,\n  historyFilter: HistoryFilter.ALL,\n  currentEpoch: 0,\n  currentRoundStartBlockNumber: 0,\n  intervalBlocks: 100,\n  bufferBlocks: 20,\n  minBetAmount: '1000000000000000',\n  rewardRate: 97,\n  lastOraclePrice: BIG_ZERO.toJSON(),\n  rounds: {},\n  history: {},\n  ledgers: {},\n  claimableStatuses: {},\n}\n\n// Thunks\n// V2 REFACTOR\ntype PredictionInitialization = Pick<\n  PredictionsState,\n  | 'status'\n  | 'currentEpoch'\n  | 'intervalBlocks'\n  | 'bufferBlocks'\n  | 'minBetAmount'\n  | 'rewardRate'\n  | 'rounds'\n  | 'ledgers'\n  | 'claimableStatuses'\n>\nexport const initializePredictions = createAsyncThunk<PredictionInitialization, string>(\n  'predictions/intialize',\n  async (account = null) => {\n    // Static values\n    const marketData = await getPredictionData()\n    const epochs = range(marketData.currentEpoch, marketData.currentEpoch - PAST_ROUND_COUNT)\n\n    // Round data\n    const roundsResponse = await getRoundsData(epochs)\n    const initialRoundData: { [key: string]: ReduxNodeRound } = roundsResponse.reduce((accum, roundResponse) => {\n      const reduxNodeRound = serializePredictionsRoundsResponse(roundResponse)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n\n    const initializedData = {\n      ...marketData,\n      rounds: initialRoundData,\n      ledgers: {},\n      claimableStatuses: {},\n    }\n\n    if (!account) {\n      return initializedData\n    }\n\n    // Bet data\n    const ledgerResponses = await getLedgerData(account, epochs)\n\n    // Claim statuses\n    const claimableStatuses = await getClaimStatuses(account, epochs)\n\n    return merge({}, initializedData, {\n      ledgers: makeLedgerData(account, ledgerResponses, epochs),\n      claimableStatuses,\n    })\n  },\n)\n\nexport const fetchRound = createAsyncThunk<ReduxNodeRound, number>('predictions/fetchRound', async (epoch) => {\n  const predictionContract = getPredictionsContract()\n  const response = await predictionContract.rounds(epoch)\n  return serializePredictionsRoundsResponse(response)\n})\n\nexport const fetchRounds = createAsyncThunk<{ [key: string]: ReduxNodeRound }, number[]>(\n  'predictions/fetchRounds',\n  async (epochs) => {\n    const rounds = await getRoundsData(epochs)\n    return rounds.reduce((accum, round) => {\n      if (!round) {\n        return accum\n      }\n\n      const reduxNodeRound = serializePredictionsRoundsResponse(round)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n  },\n)\n\nexport const fetchMarketData = createAsyncThunk<MarketData>('predictions/fetchMarketData', async () => {\n  const marketData = await getPredictionData()\n  return marketData\n})\n\nexport const fetchLedgerData = createAsyncThunk<LedgerData, { account: string; epochs: number[] }>(\n  'predictions/fetchLedgerData',\n  async ({ account, epochs }) => {\n    const ledgers = await getLedgerData(account, epochs)\n    return makeLedgerData(account, ledgers, epochs)\n  },\n)\n\nexport const fetchClaimableStatuses = createAsyncThunk<\n  PredictionsState['claimableStatuses'],\n  { account: string; epochs: number[] }\n>('predictions/fetchClaimableStatuses', async ({ account, epochs }) => {\n  const ledgers = await getClaimStatuses(account, epochs)\n  return ledgers\n})\n// END V2 REFACTOR\n\nexport const fetchHistory = createAsyncThunk<{ account: string; bets: Bet[] }, { account: string; claimed?: boolean }>(\n  'predictions/fetchHistory',\n  async ({ account, claimed }) => {\n    const response = await getBetHistory({\n      user: account.toLowerCase(),\n      claimed,\n    })\n    const bets = response.map(transformBetResponse)\n\n    return { account, bets }\n  },\n)\n\nexport const predictionsSlice = createSlice({\n  name: 'predictions',\n  initialState,\n  reducers: {\n    setPredictionStatus: (state, action: PayloadAction<PredictionStatus>) => {\n      state.status = action.payload\n    },\n    setHistoryPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isHistoryPaneOpen = action.payload\n      state.historyFilter = HistoryFilter.ALL\n    },\n    setChartPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isChartPaneOpen = action.payload\n    },\n    setHistoryFilter: (state, action: PayloadAction<HistoryFilter>) => {\n      state.historyFilter = action.payload\n    },\n    setCurrentEpoch: (state, action: PayloadAction<number>) => {\n      state.currentEpoch = action.payload\n    },\n    setLastOraclePrice: (state, action: PayloadAction<string>) => {\n      state.lastOraclePrice = action.payload\n    },\n    markBetHistoryAsCollected: (state, action: PayloadAction<{ account: string; betId: string }>) => {\n      const { account, betId } = action.payload\n\n      if (state.history[account]) {\n        const betIndex = state.history[account].findIndex((bet) => bet.id === betId)\n\n        if (betIndex >= 0) {\n          state.history[account][betIndex].claimed = true\n        }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Claimable statuses\n    builder.addCase(fetchClaimableStatuses.fulfilled, (state, action) => {\n      state.claimableStatuses = merge({}, state.claimableStatuses, action.payload)\n    })\n\n    // Ledger (bet) records\n    builder.addCase(fetchLedgerData.fulfilled, (state, action) => {\n      state.ledgers = merge({}, state.ledgers, action.payload)\n    })\n\n    // Get static market data\n    builder.addCase(fetchMarketData.fulfilled, (state, action) => {\n      const { status, currentEpoch, intervalBlocks, bufferBlocks, minBetAmount, rewardRate } = action.payload\n\n      // If the round has change add a new future round\n      if (state.currentEpoch !== currentEpoch) {\n        const newestRound = maxBy(Object.values(state.rounds), 'epoch')\n        const futureRound = makeFutureRoundResponse(\n          newestRound.epoch + 1,\n          newestRound.startBlock + (state.intervalBlocks + BLOCK_PADDING),\n        )\n\n        state.rounds[futureRound.epoch] = futureRound\n        state.currentRoundStartBlockNumber = state.currentRoundStartBlockNumber + state.intervalBlocks + BLOCK_PADDING\n      }\n\n      state.status = status\n      state.currentEpoch = currentEpoch\n      state.intervalBlocks = intervalBlocks\n      state.bufferBlocks = bufferBlocks\n      state.minBetAmount = minBetAmount\n      state.rewardRate = rewardRate\n    })\n\n    // Initialize predictions\n    builder.addCase(initializePredictions.fulfilled, (state, action) => {\n      const { status, currentEpoch, bufferBlocks, intervalBlocks, rounds, claimableStatuses, rewardRate, ledgers } =\n        action.payload\n      const currentRoundStartBlockNumber = action.payload.rounds[currentEpoch].startBlock\n      const futureRounds: ReduxNodeRound[] = []\n\n      for (let i = 1; i <= FUTURE_ROUND_COUNT; i++) {\n        futureRounds.push(\n          makeFutureRoundResponse(\n            currentEpoch + i,\n            currentRoundStartBlockNumber + (intervalBlocks + BLOCK_PADDING) * i,\n          ),\n        )\n      }\n\n      return {\n        ...state,\n        status,\n        currentEpoch,\n        bufferBlocks,\n        intervalBlocks,\n        rewardRate,\n        currentRoundStartBlockNumber,\n        claimableStatuses,\n        ledgers,\n        rounds: merge({}, rounds, makeRoundData(futureRounds)),\n      }\n    })\n\n    // Get single round\n    builder.addCase(fetchRound.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, {\n        [action.payload.epoch.toString()]: action.payload,\n      })\n    })\n\n    // Get multiple rounds\n    builder.addCase(fetchRounds.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, action.payload)\n    })\n\n    // Show History\n    builder.addCase(fetchHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n    })\n    builder.addCase(fetchHistory.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n\n      state.isFetchingHistory = false\n      state.history[account] = bets\n    })\n  },\n})\n\n// Actions\nexport const {\n  setChartPaneState,\n  setCurrentEpoch,\n  setHistoryFilter,\n  setHistoryPaneState,\n  setPredictionStatus,\n  setLastOraclePrice,\n  markBetHistoryAsCollected,\n} = predictionsSlice.actions\n\nexport default predictionsSlice.reducer\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryRoundGraphEntity, LotteryResponse } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries } from './helpers'\n\nconst MAX_LOTTERIES_REQUEST_SIZE = 100\n\nconst applyNodeDataToLotteriesGraphResponse = (\n  nodeData: LotteryResponse[],\n  graphResponse: LotteryRoundGraphEntity[],\n): LotteryRoundGraphEntity[] => {\n  //   If no graph response - return node data\n  if (graphResponse.length === 0) {\n    return nodeData.map((nodeRound) => {\n      return {\n        endTime: nodeRound.endTime,\n        finalNumber: nodeRound.finalNumber.toString(),\n        startTime: nodeRound.startTime,\n        status: nodeRound.status,\n        id: nodeRound.lotteryId.toString(),\n        ticketPrice: nodeRound.priceTicketInCake,\n        totalTickets: '',\n        totalUsers: '',\n        winningTickets: '',\n      }\n    })\n  }\n\n  //   Else if there is a graph response - merge with node data where node data is more reliable\n  const mergedResponse = graphResponse.map((graphRound, index) => {\n    const nodeRound = nodeData[index]\n    // if there is node data for this index, overwrite graph data. Otherwise - return graph data.\n    if (nodeRound) {\n      // if isLoading === true, there has been a node error - return graphRound\n      if (!nodeRound.isLoading) {\n        return {\n          endTime: nodeRound.endTime,\n          finalNumber: nodeRound.finalNumber.toString(),\n          startTime: nodeRound.startTime,\n          status: nodeRound.status,\n          id: graphRound.id,\n          ticketPrice: graphRound.ticketPrice,\n          totalTickets: graphRound.totalTickets,\n          totalUsers: graphRound.totalUsers,\n          winningTickets: graphRound.winningTickets,\n        }\n      }\n      return graphRound\n    }\n    return graphRound\n  })\n  return mergedResponse\n}\n\nexport const getGraphLotteries = async (\n  first = MAX_LOTTERIES_REQUEST_SIZE,\n  skip = 0,\n): Promise<LotteryRoundGraphEntity[]> => {\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getLotteries($first: Int!, $skip: Int!) {\n          lotteries(first: $first, skip: $skip, orderDirection: desc, orderBy: block) {\n            id\n            totalUsers\n            totalTickets\n            winningTickets\n            status\n            finalNumber\n            startTime\n            endTime\n            ticketPrice\n          }\n        }\n      `,\n      { skip, first },\n    )\n    return response.lotteries\n  } catch (error) {\n    console.error(error)\n    return []\n  }\n}\n\nconst getLotteriesData = async (currentLotteryId: string): Promise<LotteryRoundGraphEntity[]> => {\n  const idsForNodesCall = getRoundIdsArray(currentLotteryId)\n  const nodeData = await fetchMultipleLotteries(idsForNodesCall)\n  const graphResponse = await getGraphLotteries()\n  const mergedData = applyNodeDataToLotteriesGraphResponse(nodeData, graphResponse)\n  return mergedData\n}\n\nexport default getLotteriesData\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryTicket } from 'config/constants/types'\nimport { LotteryUserGraphEntity, LotteryResponse, UserRound } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries, hasRoundBeenClaimed } from './helpers'\nimport { fetchUserTicketsForMultipleRounds } from './getUserTicketsData'\n\nconst MAX_USER_LOTTERIES_REQUEST_SIZE = 100\n\n/* eslint-disable camelcase */\ntype UserLotteriesWhere = { lottery_in?: string[] }\n\nconst applyNodeDataToUserGraphResponse = (\n  userNodeData: { roundId: string; userTickets: LotteryTicket[] }[],\n  userGraphData: UserRound[],\n  lotteryNodeData: LotteryResponse[],\n): UserRound[] => {\n  //   If no graph rounds response - return node data\n  if (userGraphData.length === 0) {\n    return lotteryNodeData.map((nodeRound) => {\n      const ticketDataForRound = userNodeData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\n      return {\n        endTime: nodeRound.endTime,\n        status: nodeRound.status,\n        lotteryId: nodeRound.lotteryId.toString(),\n        claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\n        totalTickets: `${ticketDataForRound.userTickets.length.toString()}`,\n        tickets: ticketDataForRound.userTickets,\n      }\n    })\n  }\n\n  //   Else if there is a graph response - merge with node data where node data is more accurate\n  const mergedResponse = userGraphData.map((graphRound, index) => {\n    const nodeRound = lotteryNodeData[index]\n    // if there is node data for this index, overwrite graph data. Otherwise - return graph data.\n    if (nodeRound) {\n      const ticketDataForRound = userNodeData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\n      // if isLoading === true, there has been a node error - return graphRound\n      if (!nodeRound.isLoading) {\n        return {\n          endTime: nodeRound.endTime,\n          status: nodeRound.status,\n          lotteryId: nodeRound.lotteryId.toString(),\n          claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\n          totalTickets: graphRound.totalTickets,\n          tickets: ticketDataForRound.userTickets,\n        }\n      }\n      return graphRound\n    }\n    return graphRound\n  })\n  return mergedResponse\n}\n\nexport const getGraphLotteryUser = async (\n  account: string,\n  first = MAX_USER_LOTTERIES_REQUEST_SIZE,\n  skip = 0,\n  where: UserLotteriesWhere = {},\n): Promise<LotteryUserGraphEntity> => {\n  let user\n  const blankUser = {\n    account,\n    totalCake: '',\n    totalTickets: '',\n    rounds: [],\n  }\n\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getUserLotteries($account: ID!, $first: Int!, $skip: Int!, $where: Round_filter) {\n          user(id: $account) {\n            id\n            totalTickets\n            totalCake\n            rounds(first: $first, skip: $skip, where: $where, orderDirection: desc, orderBy: block) {\n              id\n              lottery {\n                id\n                endTime\n                status\n              }\n              claimed\n              totalTickets\n            }\n          }\n        }\n      `,\n      { account: account.toLowerCase(), first, skip, where },\n    )\n    const userRes = response.user\n\n    // If no user returned - return blank user\n    if (!userRes) {\n      user = blankUser\n    } else {\n      user = {\n        account: userRes.id,\n        totalCake: userRes.totalCake,\n        totalTickets: userRes.totalTickets,\n        rounds: userRes.rounds.map((round) => {\n          return {\n            lotteryId: round?.lottery?.id,\n            endTime: round?.lottery?.endTime,\n            claimed: round?.claimed,\n            totalTickets: round?.totalTickets,\n            status: round?.lottery?.status,\n          }\n        }),\n      }\n    }\n  } catch (error) {\n    console.error(error)\n    user = blankUser\n  }\n\n  return user\n}\n\nconst getUserLotteryData = async (account: string, currentLotteryId: string): Promise<LotteryUserGraphEntity> => {\n  const idsForTicketsNodeCall = getRoundIdsArray(currentLotteryId)\n  const roundDataAndUserTickets = await fetchUserTicketsForMultipleRounds(idsForTicketsNodeCall, account)\n  const userRoundsNodeData = roundDataAndUserTickets.filter((round) => round.userTickets.length > 0)\n  const idsForLotteriesNodeCall = userRoundsNodeData.map((round) => round.roundId)\n\n  const lotteriesNodeData = await fetchMultipleLotteries(idsForLotteriesNodeCall)\n  const graphResponse = await getGraphLotteryUser(account)\n  const mergedRoundData = applyNodeDataToUserGraphResponse(userRoundsNodeData, graphResponse.rounds, lotteriesNodeData)\n  const graphResponseWithNodeRounds = { ...graphResponse, rounds: mergedRoundData }\n  return graphResponseWithNodeRounds\n}\n\nexport default getUserLotteryData\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { LotteryTicket, LotteryStatus } from 'config/constants/types'\nimport { LotteryState, LotteryRoundGraphEntity, LotteryUserGraphEntity, LotteryResponse } from 'state/types'\nimport { fetchLottery, fetchCurrentLotteryIdAndMaxBuy } from './helpers'\nimport getLotteriesData from './getLotteriesData'\nimport getUserLotteryData from './getUserLotteryData'\n\ninterface PublicLotteryData {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n}\n\nconst initialState: LotteryState = {\n  currentLotteryId: null,\n  isTransitioning: false,\n  maxNumberTicketsPerBuyOrClaim: null,\n  currentRound: {\n    isLoading: true,\n    lotteryId: null,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n    userTickets: {\n      isLoading: true,\n      tickets: [],\n    },\n  },\n  lotteriesData: null,\n  userLotteryData: { account: '', totalCake: '', totalTickets: '', rounds: [] },\n}\n\nexport const fetchCurrentLottery = createAsyncThunk<LotteryResponse, { currentLotteryId: string }>(\n  'lottery/fetchCurrentLottery',\n  async ({ currentLotteryId }) => {\n    const lotteryInfo = await fetchLottery(currentLotteryId)\n    return lotteryInfo\n  },\n)\n\nexport const fetchCurrentLotteryId = createAsyncThunk<PublicLotteryData>('lottery/fetchCurrentLotteryId', async () => {\n  const currentIdAndMaxBuy = await fetchCurrentLotteryIdAndMaxBuy()\n  return currentIdAndMaxBuy\n})\n\nexport const fetchUserTicketsAndLotteries = createAsyncThunk<\n  { userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity },\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserTicketsAndLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteriesRes = await getUserLotteryData(account, currentLotteryId)\n  const userParticipationInCurrentRound = userLotteriesRes.rounds?.find((round) => round.lotteryId === currentLotteryId)\n  const userTickets = userParticipationInCurrentRound?.tickets\n\n  // User has not bought tickets for the current lottery, or there has been an error\n  if (!userTickets || userTickets.length === 0) {\n    return { userTickets: null, userLotteries: userLotteriesRes }\n  }\n\n  return { userTickets, userLotteries: userLotteriesRes }\n})\n\nexport const fetchPublicLotteries = createAsyncThunk<LotteryRoundGraphEntity[], { currentLotteryId: string }>(\n  'lottery/fetchPublicLotteries',\n  async ({ currentLotteryId }) => {\n    const lotteries = await getLotteriesData(currentLotteryId)\n    return lotteries\n  },\n)\n\nexport const fetchUserLotteries = createAsyncThunk<\n  LotteryUserGraphEntity,\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteries = await getUserLotteryData(account, currentLotteryId)\n  return userLotteries\n})\n\nexport const setLotteryIsTransitioning = createAsyncThunk<{ isTransitioning: boolean }, { isTransitioning: boolean }>(\n  `lottery/setIsTransitioning`,\n  async ({ isTransitioning }) => {\n    return { isTransitioning }\n  },\n)\n\nexport const LotterySlice = createSlice({\n  name: 'Lottery',\n  initialState,\n  reducers: {\n    setLotteryPublicData: (state, action) => {\n      state = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchCurrentLottery.fulfilled, (state, action: PayloadAction<LotteryResponse>) => {\n      state.currentRound = { ...state.currentRound, ...action.payload }\n    })\n    builder.addCase(fetchCurrentLotteryId.fulfilled, (state, action: PayloadAction<PublicLotteryData>) => {\n      state.currentLotteryId = action.payload.currentLotteryId\n      state.maxNumberTicketsPerBuyOrClaim = action.payload.maxNumberTicketsPerBuyOrClaim\n    })\n    builder.addCase(\n      fetchUserTicketsAndLotteries.fulfilled,\n      (state, action: PayloadAction<{ userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity }>) => {\n        state.currentRound.userTickets.isLoading = false\n        state.currentRound.userTickets.tickets = action.payload.userTickets\n        state.userLotteryData = action.payload.userLotteries\n      },\n    )\n    builder.addCase(fetchPublicLotteries.fulfilled, (state, action: PayloadAction<LotteryRoundGraphEntity[]>) => {\n      state.lotteriesData = action.payload\n    })\n    builder.addCase(fetchUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\n      state.userLotteryData = action.payload\n    })\n    builder.addCase(\n      setLotteryIsTransitioning.fulfilled,\n      (state, action: PayloadAction<{ isTransitioning: boolean }>) => {\n        state.isTransitioning = action.payload.isTransitioning\n      },\n    )\n  },\n})\n\n// Actions\nexport const { setLotteryPublicData } = LotterySlice.actions\n\nexport default LotterySlice.reducer\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '@pancakeswap/uikit'\nimport Page from '../Layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = Math.abs(seconds)\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { CollectiblesState } from 'state/types'\nimport { nftSources } from 'config/constants/nfts'\nimport { NftType } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { ethers } from 'ethers'\n\nconst initialState: CollectiblesState = {\n  isInitialized: false,\n  isLoading: true,\n  data: {},\n}\n\ntype NftSourceItem = [number, string]\n\n// Thunks\nexport const fetchWalletNfts = createAsyncThunk<NftSourceItem[], string>(\n  'collectibles/fetchWalletNfts',\n  async (account) => {\n    // For each nft source get nft data\n    const nftSourcePromises = Object.keys(nftSources).map(async (nftSourceType) => {\n      const { address: addressObj } = nftSources[nftSourceType as NftType]\n      const address = getAddress(addressObj)\n      const contract = getErc721Contract(address)\n\n      const getTokenIdAndData = async (index: number) => {\n        try {\n          const tokenIdBn: ethers.BigNumber = await contract.tokenOfOwnerByIndex(account, index)\n          const tokenId = tokenIdBn.toNumber()\n\n          const walletNft = await getNftByTokenId(address, tokenId)\n          return [tokenId, walletNft.identifier]\n        } catch (error) {\n          console.error('getTokenIdAndData', error)\n          return null\n        }\n      }\n\n      const balanceOfResponse = await contract.balanceOf(account)\n      const balanceOf = balanceOfResponse.toNumber()\n\n      if (balanceOf === 0) {\n        return []\n      }\n\n      const nftDataFetchPromises = []\n\n      // For each index get the tokenId and data associated with it\n      for (let i = 0; i < balanceOf; i++) {\n        nftDataFetchPromises.push(getTokenIdAndData(i))\n      }\n\n      const nftData = await Promise.all(nftDataFetchPromises)\n      return nftData\n    })\n\n    const nftSourceData = await Promise.all(nftSourcePromises)\n\n    return nftSourceData.flat()\n  },\n)\n\nexport const collectiblesSlice = createSlice({\n  name: 'collectibles',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchWalletNfts.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchWalletNfts.fulfilled, (state, action) => {\n      state.isLoading = false\n      state.isInitialized = true\n      state.data = action.payload.reduce((accum, association) => {\n        if (!association) {\n          return accum\n        }\n\n        const [tokenId, identifier] = association as NftSourceItem\n\n        return {\n          ...accum,\n          [identifier]: accum[identifier] ? [...accum[identifier], tokenId] : [tokenId],\n        }\n      }, {})\n    })\n  },\n})\n\nexport default collectiblesSlice.reducer\n","import React, { useState } from 'react'\nimport { JSBI, Pair, Percent } from '@pancakeswap/sdk'\nimport {\n  Button,\n  Text,\n  ChevronUpIcon,\n  ChevronDownIcon,\n  Card,\n  CardBody,\n  Flex,\n  CardProps,\n  AddIcon,\n} from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useTotalSupply from '../../hooks/useTotalSupply'\n\nimport { useTokenBalance } from '../../state/wallet/hooks'\nimport { currencyId } from '../../utils/currencyId'\nimport { unwrappedToken } from '../../utils/wrappedCurrency'\n\nimport { LightCard } from '../Card'\nimport { AutoColumn } from '../Layout/Column'\nimport CurrencyLogo from '../Logo/CurrencyLogo'\nimport { DoubleCurrencyLogo } from '../Logo'\nimport { RowBetween, RowFixed } from '../Layout/Row'\nimport { BIG_INT_ZERO } from '../../config/constants'\nimport Dots from '../Loader/Dots'\n\nconst FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\ninterface PositionCardProps extends CardProps {\n  pair: Pair\n  showUnwrapped?: boolean\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, JSBI.BigInt(0)) ? (\n        <Card>\n          <CardBody>\n            <AutoColumn gap=\"16px\">\n              <FixedHeightRow>\n                <RowFixed>\n                  <Text color=\"secondary\" bold>\n                    {t('LP tokens in your wallet')}\n                  </Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n                <RowFixed>\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\n                  <Text small color=\"textSubtle\">\n                    {currency0.symbol}-{currency1.symbol} LP\n                  </Text>\n                </RowFixed>\n                <RowFixed>\n                  <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <AutoColumn gap=\"4px\">\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Share of Pool')}:\n                  </Text>\n                  <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(6)}%` : '-'}</Text>\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency0.symbol })}:\n                  </Text>\n                  {token0Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency1.symbol })}:\n                  </Text>\n                  {token1Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n              </AutoColumn>\n            </AutoColumn>\n          </CardBody>\n        </Card>\n      ) : (\n        <LightCard>\n          <Text fontSize=\"14px\" style={{ textAlign: 'center' }}>\n            <span role=\"img\" aria-label=\"pancake-icon\">\n              🥞\n            </span>{' '}\n            {t(\n              \"By adding liquidity you'll earn 0.17% of all trades on this pair proportional to your share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\",\n            )}\n          </Text>\n        </LightCard>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ pair, ...props }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <Card style={{ borderRadius: '12px' }} {...props}>\n      <Flex justifyContent=\"space-between\" role=\"button\" onClick={() => setShowMore(!showMore)} p=\"16px\">\n        <Flex flexDirection=\"column\">\n          <Flex alignItems=\"center\" mb=\"4px\">\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\n            <Text bold ml=\"8px\">\n              {!currency0 || !currency1 ? <Dots>Loading</Dots> : `${currency0.symbol}/${currency1.symbol}`}\n            </Text>\n          </Flex>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {userPoolBalance?.toSignificant(4)}\n          </Text>\n        </Flex>\n        {showMore ? <ChevronUpIcon /> : <ChevronDownIcon />}\n      </Flex>\n\n      {showMore && (\n        <AutoColumn gap=\"8px\" style={{ padding: '16px' }}>\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency0} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency0.symbol}\n              </Text>\n            </RowFixed>\n            {token0Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency1} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency1.symbol}\n              </Text>\n            </RowFixed>\n            {token1Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <Text color=\"textSubtle\">Share of pool</Text>\n            <Text>\n              {poolTokenPercentage\n                ? `${poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)}%`\n                : '-'}\n            </Text>\n          </FixedHeightRow>\n\n          {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, BIG_INT_ZERO) && (\n            <Flex flexDirection=\"column\">\n              <Button\n                as={Link}\n                to={`/remove/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"primary\"\n                width=\"100%\"\n                mb=\"8px\"\n              >\n                Remove\n              </Button>\n              <Button\n                as={Link}\n                to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"text\"\n                startIcon={<AddIcon color=\"primary\" />}\n                width=\"100%\"\n              >\n                Add liquidity instead\n              </Button>\n            </Flex>\n          )}\n        </AutoColumn>\n      )}\n    </Card>\n  )\n}\n","import request, { gql } from 'graphql-request'\nimport { SNAPSHOT_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\nimport { Proposal, ProposalState, Vote, VoteWhere } from 'state/types'\nimport { simpleRpcProvider } from 'utils/providers'\n\nexport const getProposals = async (first = 5, skip = 0, state = ProposalState.ACTIVE): Promise<Proposal[]> => {\n  const response: { proposals: Proposal[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposals($first: Int!, $skip: Int!, $state: String!) {\n        proposals(\n          first: $first\n          skip: $skip\n          orderBy: \"end\"\n          orderDirection: desc\n          where: { space_in: \"cake.eth\", state: $state }\n        ) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { first, skip, state },\n  )\n  return response.proposals\n}\n\nexport const getProposal = async (id: string): Promise<Proposal> => {\n  const response: { proposal: Proposal } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposal($id: String) {\n        proposal(id: $id) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { id },\n  )\n  return response.proposal\n}\n\nexport const getVotes = async (first: number, skip: number, where: VoteWhere): Promise<Vote[]> => {\n  const response: { votes: Vote[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getVotes($first: Int, $skip: Int, $where: VoteWhere) {\n        votes(first: $first, skip: $skip, where: $where) {\n          id\n          voter\n          created\n          choice\n          space {\n            id\n            name\n          }\n          proposal {\n            choices\n          }\n          metadata\n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.votes\n}\n\nexport const getVoteVerificationStatuses = async (\n  votes: Vote[],\n  block?: number,\n): Promise<{ [key: string]: boolean }> => {\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n\n  const votesToVerify = votes.map((vote) => ({\n    address: vote.voter,\n    verificationHash: vote.metadata?.verificationHash,\n    total: vote.metadata?.votingPower,\n  }))\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/verify`, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      block: blockNumber,\n      votes: votesToVerify,\n    }),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n  return votes.reduce((accum, vote) => {\n    return {\n      ...accum,\n      [vote.id]: data.data[vote.voter.toLowerCase()]?.isValid === true,\n    }\n  }, {})\n}\n\nexport const getAllVotes = async (proposalId: string, block?: number, votesPerChunk = 1000): Promise<Vote[]> => {\n  // const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  return new Promise((resolve, reject) => {\n    let votes: Vote[] = []\n\n    const fetchVoteChunk = async (newSkip: number) => {\n      try {\n        const voteChunk = await getVotes(votesPerChunk, newSkip, { proposal: proposalId })\n\n        if (voteChunk.length === 0) {\n          resolve(votes)\n        } else {\n          votes = [...votes, ...voteChunk]\n          fetchVoteChunk(newSkip + votesPerChunk)\n        }\n      } catch (error) {\n        reject(error)\n      }\n    }\n\n    fetchVoteChunk(0)\n  })\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { merge } from 'lodash'\nimport { Proposal, ProposalState, VotingStateLoadingStatus, VotingState, Vote, State } from 'state/types'\nimport { getAllVotes, getProposal, getProposals, getVoteVerificationStatuses } from './helpers'\n\nconst initialState: VotingState = {\n  proposalLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  proposals: {},\n  voteLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  votes: {},\n}\n\n// Thunks\nexport const fetchProposals = createAsyncThunk<Proposal[], { first?: number; skip?: number; state?: ProposalState }>(\n  'voting/fetchProposals',\n  async ({ first, skip = 0, state = ProposalState.ACTIVE }) => {\n    const response = await getProposals(first, skip, state)\n    return response\n  },\n)\n\nexport const fetchProposal = createAsyncThunk<Proposal, string>('voting/fetchProposal', async (proposalId) => {\n  const response = await getProposal(proposalId)\n  return response\n})\n\nexport const fetchVotes = createAsyncThunk<\n  { votes: Vote[]; proposalId: string },\n  { proposalId: string; block?: number }\n>('voting/fetchVotes', async ({ proposalId, block }) => {\n  const response = await getAllVotes(proposalId, block)\n  return { votes: response, proposalId }\n})\n\nexport const verifyVotes = createAsyncThunk<\n  { results: { [key: string]: boolean }; proposalId: string },\n  { proposalId: string; snapshot?: string },\n  { state: State }\n>('voting/verifyVotes', async ({ proposalId, snapshot }, { getState }) => {\n  const state = getState()\n  const proposalVotes = state.voting.votes[proposalId]\n  const response = await getVoteVerificationStatuses(proposalVotes, Number(snapshot))\n  return { results: response, proposalId }\n})\n\nexport const votingSlice = createSlice({\n  name: 'voting',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    // Verify Votes\n    builder.addCase(verifyVotes.fulfilled, (state, action) => {\n      const { proposalId, results } = action.payload\n\n      if (state.votes[proposalId]) {\n        state.votes[proposalId] = state.votes[proposalId].map((vote) => {\n          return {\n            ...vote,\n            _inValid: results[vote.id] === false,\n          }\n        })\n      }\n    })\n\n    // Fetch Proposals\n    builder.addCase(fetchProposals.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposals.fulfilled, (state, action) => {\n      const proposals = action.payload.reduce((accum, proposal) => {\n        return {\n          ...accum,\n          [proposal.id]: proposal,\n        }\n      }, {})\n\n      state.proposals = merge({}, state.proposals, proposals)\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Proposal\n    builder.addCase(fetchProposal.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposal.fulfilled, (state, action) => {\n      state.proposals[action.payload.id] = action.payload\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Votes\n    builder.addCase(fetchVotes.pending, (state) => {\n      state.voteLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchVotes.fulfilled, (state, action) => {\n      const { votes, proposalId } = action.payload\n\n      state.votes = {\n        ...state.votes,\n        [proposalId]: votes,\n      }\n      state.voteLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n  },\n})\n\nexport default votingSlice.reducer\n","import { TICKET_LIMIT_PER_REQUEST } from 'config/constants/lottery'\nimport { LotteryTicket } from 'config/constants/types'\nimport { UserTicketsResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\n\nconst lotteryContract = getLotteryV2Contract()\n\nexport const processRawTicketsResponse = (ticketsResponse: UserTicketsResponse): LotteryTicket[] => {\n  const [ticketIds, ticketNumbers, ticketStatuses] = ticketsResponse\n\n  if (ticketIds?.length > 0) {\n    return ticketIds.map((ticketId, index) => {\n      return {\n        id: ticketId.toString(),\n        number: ticketNumbers[index].toString(),\n        status: ticketStatuses[index],\n      }\n    })\n  }\n  return []\n}\n\nexport const viewUserInfoForLotteryId = async (\n  account: string,\n  lotteryId: string,\n  cursor: number,\n  perRequestLimit: number,\n): Promise<LotteryTicket[]> => {\n  try {\n    const data = await lotteryContract.viewUserInfoForLotteryId(account, lotteryId, cursor, perRequestLimit)\n    return processRawTicketsResponse(data)\n  } catch (error) {\n    console.error('viewUserInfoForLotteryId', error)\n    return null\n  }\n}\n\nexport const fetchUserTicketsForOneRound = async (account: string, lotteryId: string): Promise<LotteryTicket[]> => {\n  let cursor = 0\n  let numReturned = TICKET_LIMIT_PER_REQUEST\n  const ticketData = []\n\n  while (numReturned === TICKET_LIMIT_PER_REQUEST) {\n    // eslint-disable-next-line no-await-in-loop\n    const response = await viewUserInfoForLotteryId(account, lotteryId, cursor, TICKET_LIMIT_PER_REQUEST)\n    cursor += TICKET_LIMIT_PER_REQUEST\n    numReturned = response.length\n    ticketData.push(...response)\n  }\n\n  return ticketData\n}\n\nexport const fetchUserTicketsForMultipleRounds = async (\n  idsToCheck: string[],\n  account: string,\n): Promise<{ roundId: string; userTickets: LotteryTicket[] }[]> => {\n  const ticketsForMultipleRounds = []\n  for (let i = 0; i < idsToCheck.length; i += 1) {\n    const roundId = idsToCheck[i]\n    // eslint-disable-next-line no-await-in-loop\n    const ticketsForRound = await fetchUserTicketsForOneRound(account, roundId)\n    ticketsForMultipleRounds.push({\n      roundId,\n      userTickets: ticketsForRound,\n    })\n  }\n  return ticketsForMultipleRounds\n}\n","import { createBrowserHistory } from 'history'\n\n// Manually create the history object so we can access outside the Router e.g. in modals\nconst history = createBrowserHistory()\n\nexport default history\n","import { request, gql } from 'graphql-request'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { GRAPH_API_PROFILE } from 'config/constants/endpoints'\nimport { Achievement } from 'state/types'\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\n\ninterface UserPointIncreaseEvent {\n  campaignId: string\n  id: string // wallet address\n  points: string\n}\n\n/**\n * Gets all user point increase events on the profile filtered by wallet address\n */\nexport const getUserPointIncreaseEvents = async (account: string): Promise<UserPointIncreaseEvent[]> => {\n  try {\n    const { user } = await request(\n      GRAPH_API_PROFILE,\n      gql`\n        query getUserPointIncreaseEvents($account: ID!) {\n          user(id: $account) {\n            points {\n              id\n              campaignId\n              points\n            }\n          }\n        }\n      `,\n      {\n        account: account.toLowerCase(),\n      },\n    )\n\n    return user.points\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets all user point increase events and adds achievement meta\n */\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\n\n  if (!pointIncreaseEvents) {\n    return []\n  }\n\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\n    if (!campaignMap.has(userPoint.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(userPoint.campaignId)\n\n    return [\n      ...accum,\n      {\n        id: userPoint.campaignId,\n        type: campaignMeta.type,\n        address: userPoint.id,\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(userPoint.points),\n      },\n    ]\n  }, [])\n}\n","import { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\nimport { AchievementState, Achievement } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  data: [],\n}\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.data.push(action.payload)\n    },\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = [...state.data, ...action.payload]\n    },\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = action.payload\n    },\n    clearAchievements: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\n\n// Thunks\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\n  try {\n    const achievements = await getAchievements(account)\n    dispatch(setAchievements(achievements))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport default achievementSlice.reducer\n","const ARCHIVED_FARMS_START_PID = 139\nconst ARCHIVED_FARMS_END_PID = 250\n\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\n\nexport default isArchivedPid\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, CAKE_PER_YEAR } from 'config'\nimport lpAprs from 'config/constants/lpAprs.json'\n\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\n/**\n * Get farm APR value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport const getFarmApr = (\n  poolWeight: BigNumber,\n  cakePriceUsd: BigNumber,\n  poolLiquidityUsd: BigNumber,\n  farmAddress: string,\n): { cakeRewardsApr: number; lpRewardsApr: number } => {\n  const yearlyCakeRewardAllocation = CAKE_PER_YEAR.times(poolWeight)\n  const cakeRewardsApr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\n  let cakeRewardsAprAsNumber = null\n  if (!cakeRewardsApr.isNaN() && cakeRewardsApr.isFinite()) {\n    cakeRewardsAprAsNumber = cakeRewardsApr.toNumber()\n  }\n  const lpRewardsApr = lpAprs[farmAddress?.toLocaleLowerCase()] ?? 0\n  return { cakeRewardsApr: cakeRewardsAprAsNumber, lpRewardsApr }\n}\n\nexport default null\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Text } from '@pancakeswap/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\n  cursor: pointer;\n  width: ${({ width }) => width}px;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps {\n  options: OptionProps[]\n  onChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\n  const containerRef = useRef(null)\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0)\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\n\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\n    setIsOpen(!isOpen)\n    event.stopPropagation()\n  }\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n\n    if (onChange) {\n      onChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    setContainerSize({\n      width: dropdownRef.current.offsetWidth, // Consider border\n      height: dropdownRef.current.offsetHeight,\n    })\n\n    const handleClickOutside = () => {\n      setIsOpen(false)\n    }\n\n    document.addEventListener('click', handleClickOutside)\n    return () => {\n      document.removeEventListener('click', handleClickOutside)\n    }\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\n      {containerSize.width !== 0 && (\n        <DropDownHeader onClick={toggling}>\n          <Text>{options[selectedOptionIndex].label}</Text>\n        </DropDownHeader>\n      )}\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import styled from 'styled-components'\n\nconst Loading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","import { useState, useEffect } from 'react'\n\n/**\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\n * This hook \"shows\" element immediately when the isMounted is true\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\n * delayTime should be the same as animation time in most cases.\n */\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\n  const [shouldRender, setShouldRender] = useState(false)\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>\n    if (isMounted && !shouldRender) {\n      setShouldRender(true)\n    } else if (!isMounted && shouldRender) {\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\n    }\n    return () => clearTimeout(timeoutId)\n  }, [isMounted, delayTime, shouldRender])\n  return shouldRender\n}\n\nexport default useDelayedUnmount\n","import React from 'react'\nimport { ChainId, Currency, currencyEquals, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\nimport { SUGGESTED_BASES } from '../../config/constants'\nimport { AutoColumn } from '../Layout/Column'\nimport QuestionHelper from '../QuestionHelper'\nimport { AutoRow } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo'\n\nconst BaseWrapper = styled.div<{ disable?: boolean }>`\n  border: 1px solid ${({ theme, disable }) => (disable ? 'transparent' : theme.colors.dropdown)};\n  border-radius: 10px;\n  display: flex;\n  padding: 6px;\n\n  align-items: center;\n  :hover {\n    cursor: ${({ disable }) => !disable && 'pointer'};\n    background-color: ${({ theme, disable }) => !disable && theme.colors.background};\n  }\n\n  background-color: ${({ theme, disable }) => disable && theme.colors.dropdown};\n  opacity: ${({ disable }) => disable && '0.4'};\n`\n\nexport default function CommonBases({\n  chainId,\n  onSelect,\n  selectedCurrency,\n}: {\n  chainId?: ChainId\n  selectedCurrency?: Currency | null\n  onSelect: (currency: Currency) => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow>\n        <Text fontSize=\"14px\">{t('Common bases')}</Text>\n        <QuestionHelper text={t('These tokens are commonly paired with other tokens.')} ml=\"4px\" />\n      </AutoRow>\n      <AutoRow gap=\"auto\">\n        <BaseWrapper\n          onClick={() => {\n            if (!selectedCurrency || !currencyEquals(selectedCurrency, ETHER)) {\n              onSelect(ETHER)\n            }\n          }}\n          disable={selectedCurrency === ETHER}\n        >\n          <CurrencyLogo currency={ETHER} style={{ borderRadius: '50%', marginRight: 8 }} />\n          <Text>ONE</Text>\n        </BaseWrapper>\n        {(chainId ? SUGGESTED_BASES[chainId] : []).map((token: Token) => {\n          const selected = selectedCurrency instanceof Token && selectedCurrency.address === token.address\n          return (\n            <BaseWrapper onClick={() => !selected && onSelect(token)} disable={selected} key={token.address}>\n              <CurrencyLogo currency={token} style={{ borderRadius: '50%', marginRight: 8 }} />\n              <Text>{token.symbol}</Text>\n            </BaseWrapper>\n          )\n        })}\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n","import React, { CSSProperties } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Button, Text, CheckmarkCircleIcon } from '@pancakeswap/uikit'\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport { ListLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport styled from 'styled-components'\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens'\nimport { useTranslation } from 'contexts/Localization'\n\nconst TokenSection = styled.div<{ dim?: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\n`\n\nconst CheckIcon = styled(CheckmarkCircleIcon)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({ theme }) => theme.colors.success};\n`\n\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`\n\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken,\n}: {\n  token: Token\n  style?: CSSProperties\n  dim?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}) {\n  // globals\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  // check if token comes from list\n  const inactiveTokenList = useCombinedInactiveList()\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n\n  // check if already active on list or local storage tokens\n  const isAdded = useIsUserAddedToken(token)\n  const isActive = useIsTokenActive(token)\n\n  return (\n    <TokenSection style={style}>\n      <CurrencyLogo currency={token} size=\"24px\" style={{ borderRadius: '50%', opacity: dim ? '0.6' : '1' }} />\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\n        <AutoRow>\n          <Text>{token.symbol}</Text>\n          <Text color=\"textDisabled\" ml=\"8px\">\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\n          </Text>\n        </AutoRow>\n        {list && list.logoURI && (\n          <RowFixed>\n            <Text small mr=\"4px\" color=\"textSubtle\">\n              {t('via')} {list.name}\n            </Text>\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\n          </RowFixed>\n        )}\n      </AutoColumn>\n      {!isActive && !isAdded ? (\n        <Button\n          width=\"fit-content\"\n          onClick={() => {\n            if (setImportToken) {\n              setImportToken(token)\n            }\n            showImportView()\n          }}\n        >\n          {t('Import')}\n        </Button>\n      ) : (\n        <RowFixed style={{ minWidth: 'fit-content' }}>\n          <CheckIcon />\n          <Text color=\"success\">Active</Text>\n        </RowFixed>\n      )}\n    </TokenSection>\n  )\n}\n","import React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\nimport { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { FixedSizeList } from 'react-window'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { LightGreyCard } from 'components/Card'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedActiveList } from '../../state/lists/hooks'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport { useIsUserAddedToken, useAllInactiveTokens } from '../../hooks/Tokens'\nimport Column from '../Layout/Column'\nimport { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo'\nimport CircleLoader from '../Loader/CircleLoader'\nimport { isTokenOnList } from '../../utils'\nimport ImportRow from './ImportRow'\n\nfunction currencyKey(currency: Currency): string {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n`\n\nconst FixedContentRow = styled.div`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-gap: 16px;\n  align-items: center;\n`\n\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\n}\n\nconst MenuItem = styled(RowBetween)<{ disabled: boolean; selected: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) minmax(0, 72px);\n  grid-gap: 8px;\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n  :hover {\n    background-color: ${({ theme, disabled }) => !disabled && theme.colors.background};\n  }\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\n`\n\nfunction CurrencyRow({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style,\n}: {\n  currency: Currency\n  onSelect: () => void\n  isSelected: boolean\n  otherSelected: boolean\n  style: CSSProperties\n}) {\n  const { account } = useActiveWeb3React()\n  const key = currencyKey(currency)\n  const selectedTokenList = useCombinedActiveList()\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\n  const customAdded = useIsUserAddedToken(currency)\n  const balance = useCurrencyBalance(account ?? undefined, currency)\n\n  // only show add or remove buttons if not on selected list\n  return (\n    <MenuItem\n      style={style}\n      className={`token-item-${key}`}\n      onClick={() => (isSelected ? null : onSelect())}\n      disabled={isSelected}\n      selected={otherSelected}\n    >\n      <CurrencyLogo currency={currency} size=\"24px\" style={{borderRadius: '50%'}} />\n      <Column>\n        <Text bold>{currency.symbol}</Text>\n        <Text color=\"textSubtle\" small ellipsis maxWidth=\"200px\">\n          {!isOnSelectedList && customAdded && 'Added by user •'} {currency.name}\n        </Text>\n      </Column>\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\n        {balance ? <Balance balance={balance} /> : account ? <CircleLoader /> : null}\n      </RowFixed>\n    </MenuItem>\n  )\n}\n\nexport default function CurrencyList({\n  height,\n  currencies,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showETH,\n  showImportView,\n  setImportToken,\n  breakIndex,\n}: {\n  height: number\n  currencies: Currency[]\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherCurrency?: Currency | null\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\n  showETH: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n  breakIndex: number | undefined\n}) {\n  const itemData: (Currency | undefined)[] = useMemo(() => {\n    let formatted: (Currency | undefined)[] = showETH ? [Currency.ETHER, ...currencies] : currencies\n    if (breakIndex !== undefined) {\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)]\n    }\n    return formatted\n  }, [breakIndex, currencies, showETH])\n\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const inactiveTokens: {\n    [address: string]: Token\n  } = useAllInactiveTokens()\n\n  const Row = useCallback(\n    ({ data, index, style }) => {\n      const currency: Currency = data[index]\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\n      const handleSelect = () => onCurrencySelect(currency)\n\n      const token = wrappedCurrency(currency, chainId)\n\n      const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address)\n\n      if (index === breakIndex || !data) {\n        return (\n          <FixedContentRow style={style}>\n            <LightGreyCard padding=\"8px 12px\" borderRadius=\"8px\">\n              <RowBetween>\n                <Text small>{t('Expanded results from inactive Token Lists')}</Text>\n                <QuestionHelper\n                  text={t(\n                    \"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\",\n                  )}\n                  ml=\"4px\"\n                />\n              </RowBetween>\n            </LightGreyCard>\n          </FixedContentRow>\n        )\n      }\n\n      if (showImport && token) {\n        return (\n          <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />\n        )\n      }\n      return (\n        <CurrencyRow\n          style={style}\n          currency={currency}\n          isSelected={isSelected}\n          onSelect={handleSelect}\n          otherSelected={otherSelected}\n        />\n      )\n    },\n    [\n      chainId,\n      inactiveTokens,\n      onCurrencySelect,\n      otherCurrency,\n      selectedCurrency,\n      setImportToken,\n      showImportView,\n      breakIndex,\n      t,\n    ],\n  )\n\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\n\n  return (\n    <FixedSizeList\n      height={height}\n      ref={fixedListRef as any}\n      width=\"100%\"\n      itemData={itemData}\n      itemCount={itemData.length}\n      itemSize={56}\n      itemKey={itemKey}\n    >\n      {Row}\n    </FixedSizeList>\n  )\n}\n","import { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { useAllTokenBalances } from '../../state/wallet/hooks'\n\n// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\n  }\n  if (balanceA && balanceA.greaterThan('0')) {\n    return -1\n  }\n  if (balanceB && balanceB.greaterThan('0')) {\n    return 1\n  }\n  return 0\n}\n\nfunction getTokenComparator(balances: {\n  [tokenAddress: string]: TokenAmount | undefined\n}): (tokenA: Token, tokenB: Token) => number {\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\n    // -1 = a is first\n    // 1 = b is first\n\n    // sort by balances\n    const balanceA = balances[tokenA.address]\n    const balanceB = balances[tokenB.address]\n\n    const balanceComp = balanceComparator(balanceA, balanceB)\n    if (balanceComp !== 0) return balanceComp\n\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\n    }\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\n  }\n}\n\nfunction useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\n  const balances = useAllTokenBalances()\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\n    }\n    return comparator\n  }, [inverted, comparator])\n}\n\nexport default useTokenComparator\n","import React, { KeyboardEvent, RefObject, useCallback, useMemo, useRef, useState, useEffect } from 'react'\nimport { Currency, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text, Input, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { FixedSizeList } from 'react-window'\nimport { useAudioModeManager } from 'state/user/hooks'\nimport useDebounce from 'hooks/useDebounce'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens'\nimport { isAddress } from '../../utils'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport Row from '../Layout/Row'\nimport CommonBases from './CommonBases'\nimport CurrencyList from './CurrencyList'\nimport { filterTokens, useSortedTokensByQuery } from './filtering'\nimport useTokenComparator from './sorting'\n\nimport ImportRow from './ImportRow'\n\ninterface CurrencySearchProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}\n\nconst swapSound = new Audio('swap.mp3')\n\nfunction CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showCommonBases,\n  showImportView,\n  setImportToken,\n}: CurrencySearchProps) {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n\n  // refs for fixed size lists\n  const fixedList = useRef<FixedSizeList>()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const debouncedQuery = useDebounce(searchQuery, 200)\n\n  const [invertSearchOrder] = useState<boolean>(false)\n\n  const allTokens = useAllTokens()\n\n  // if they input an address, use it\n  const searchToken = useToken(debouncedQuery)\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\n\n  const [audioPlay] = useAudioModeManager()\n\n  const showETH: boolean = useMemo(() => {\n    const s = debouncedQuery.toLowerCase().trim()\n    return s === '' || s === 'b' || s === 'bn' || s === 'bnb'\n  }, [debouncedQuery])\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    return filterTokens(Object.values(allTokens), debouncedQuery)\n  }, [allTokens, debouncedQuery])\n\n  const sortedTokens: Token[] = useMemo(() => {\n    return filteredTokens.sort(tokenComparator)\n  }, [filteredTokens, tokenComparator])\n\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      if (audioPlay) {\n        swapSound.play()\n      }\n    },\n    [audioPlay, onCurrencySelect],\n  )\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n\n  useEffect(() => {\n    inputRef.current.focus()\n  }, [])\n\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = debouncedQuery.toLowerCase().trim()\n        if (s === 'bnb') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\n  )\n\n  // if no results on main list, show option to expand into inactive\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\n  const filteredInactiveTokens: Token[] = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\n\n  return (\n    <>\n      <div>\n        <AutoColumn gap=\"16px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              placeholder={t('Search name or paste address')}\n              scale=\"lg\"\n              autoComplete=\"off\"\n              value={searchQuery}\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              onKeyDown={handleEnter}\n            />\n          </Row>\n          {showCommonBases && (\n            <CommonBases chainId={chainId} onSelect={handleCurrencySelect} selectedCurrency={selectedCurrency} />\n          )}\n        </AutoColumn>\n        {searchToken && !searchTokenIsAdded ? (\n          <Column style={{ padding: '20px 0', height: '100%' }}>\n            <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\n          </Column>\n        ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\n          <Box margin=\"24px -24px\">\n            <CurrencyList\n              height={390}\n              showETH={showETH}\n              currencies={\n                filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\n              }\n              breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\n              onCurrencySelect={handleCurrencySelect}\n              otherCurrency={otherSelectedCurrency}\n              selectedCurrency={selectedCurrency}\n              fixedListRef={fixedList}\n              showImportView={showImportView}\n              setImportToken={setImportToken}\n            />\n          </Box>\n        ) : (\n          <Column style={{ padding: '20px', height: '100%' }}>\n            <Text color=\"textSubtle\" textAlign=\"center\" mb=\"20px\">\n              {t('No results found.')}\n            </Text>\n          </Column>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default CurrencySearch\n","export enum CurrencyModalView {\n  search,\n  manage,\n  importToken,\n  importList,\n}\n\nexport default CurrencyModalView\n","import React, { memo, useCallback, useMemo, useState, useEffect } from 'react'\nimport { Button, Text, CheckmarkIcon, CogIcon, Input, Toggle, LinkExternal, useTooltip } from '@pancakeswap/uikit'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport { TokenList, Version } from '@uniswap/token-lists'\nimport Card from 'components/Card'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport { useTranslation } from 'contexts/Localization'\nimport useFetchListCallback from '../../hooks/useFetchListCallback'\n\nimport { AppDispatch, AppState } from '../../state'\nimport { acceptListUpdate, removeList, disableList, enableList } from '../../state/lists/actions'\nimport { useIsListActive, useAllLists, useActiveListUrls } from '../../state/lists/hooks'\nimport uriToHttp from '../../utils/uriToHttp'\n\nimport Column, { AutoColumn } from '../Layout/Column'\nimport { ListLogo } from '../Logo'\nimport Row, { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyModalView } from './types'\n\nfunction listVersionLabel(version: Version): string {\n  return `v${version.major}.${version.minor}.${version.patch}`\n}\n\nconst Wrapper = styled(Column)`\n  width: 100%;\n  height: 100%;\n`\n\nconst RowWrapper = styled(Row)<{ active: boolean }>`\n  background-color: ${({ active, theme }) => (active ? `${theme.colors.success}19` : 'transparent')};\n  border: solid 1px;\n  border-color: ${({ active, theme }) => (active ? theme.colors.success : theme.colors.tertiary)};\n  transition: 200ms;\n  align-items: center;\n  padding: 1rem;\n  border-radius: 20px;\n`\n\nfunction listUrlRowHTMLId(listUrl: string) {\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\n}\n\nconst ListRow = memo(function ListRow({ listUrl }: { listUrl: string }) {\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n  const dispatch = useDispatch<AppDispatch>()\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\n\n  const isActive = useIsListActive(listUrl)\n\n  const { t } = useTranslation()\n\n  const handleAcceptListUpdate = useCallback(() => {\n    if (!pending) return\n    dispatch(acceptListUpdate(listUrl))\n  }, [dispatch, listUrl, pending])\n\n  const handleRemoveList = useCallback(() => {\n    // eslint-disable-next-line no-alert\n    if (window.confirm('Please confirm you would like to remove this list')) {\n      dispatch(removeList(listUrl))\n    }\n  }, [dispatch, listUrl])\n\n  const handleEnableList = useCallback(() => {\n    dispatch(enableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const handleDisableList = useCallback(() => {\n    dispatch(disableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <div>\n      <Text>{list && listVersionLabel(list.version)}</Text>\n      <LinkExternal external href={`https://tokenlists.org/token-list?url=${listUrl}`}>\n        {t('See')}\n      </LinkExternal>\n      <Button variant=\"danger\" scale=\"xs\" onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\n        {t('Remove')}\n      </Button>\n      {pending && (\n        <Button variant=\"text\" onClick={handleAcceptListUpdate} style={{ fontSize: '12px' }}>\n          {t('Update list')}\n        </Button>\n      )}\n    </div>,\n    { placement: 'right-end', trigger: 'click' },\n  )\n\n  if (!list) return null\n\n  return (\n    <RowWrapper active={isActive} key={listUrl} id={listUrlRowHTMLId(listUrl)}>\n      {tooltipVisible && tooltip}\n      {list.logoURI ? (\n        <ListLogo size=\"40px\" style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\n      ) : (\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\n      )}\n      <Column style={{ flex: '1' }}>\n        <Row>\n          <Text bold>{list.name}</Text>\n        </Row>\n        <RowFixed mt=\"4px\">\n          <Text fontSize=\"12px\" mr=\"6px\" textTransform=\"lowercase\">\n            {list.tokens.length} {t('Tokens')}\n          </Text>\n          <span ref={targetRef}>\n            <CogIcon color=\"text\" width=\"12px\" />\n          </span>\n        </RowFixed>\n      </Column>\n      <Toggle\n        checked={isActive}\n        onChange={() => {\n          if (isActive) {\n            handleDisableList()\n          } else {\n            handleEnableList()\n          }\n        }}\n      />\n    </RowWrapper>\n  )\n})\n\nconst ListContainer = styled.div`\n  padding: 1rem 0;\n  height: 100%;\n  overflow: auto;\n`\n\nfunction ManageLists({\n  setModalView,\n  setImportList,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [listUrlInput, setListUrlInput] = useState<string>('')\n\n  const { t } = useTranslation()\n\n  const lists = useAllLists()\n\n  // sort by active but only if not visible\n  const activeListUrls = useActiveListUrls()\n  const [activeCopy, setActiveCopy] = useState<string[] | undefined>()\n  useEffect(() => {\n    if (!activeCopy && activeListUrls) {\n      setActiveCopy(activeListUrls)\n    }\n  }, [activeCopy, activeListUrls])\n\n  const handleInput = useCallback((e) => {\n    setListUrlInput(e.target.value)\n  }, [])\n\n  const fetchList = useFetchListCallback()\n\n  const validUrl: boolean = useMemo(() => {\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\n  }, [listUrlInput])\n\n  const sortedLists = useMemo(() => {\n    const listUrls = Object.keys(lists)\n    return listUrls\n      .filter((listUrl) => {\n        // only show loaded lists, hide unsupported lists\n        return Boolean(lists[listUrl].current) && !UNSUPPORTED_LIST_URLS.includes(listUrl)\n      })\n      .sort((u1, u2) => {\n        const { current: l1 } = lists[u1]\n        const { current: l2 } = lists[u2]\n\n        // first filter on active lists\n        if (activeCopy?.includes(u1) && !activeCopy?.includes(u2)) {\n          return -1\n        }\n        if (!activeCopy?.includes(u1) && activeCopy?.includes(u2)) {\n          return 1\n        }\n\n        if (l1 && l2) {\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\n            ? -1\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\n            ? 0\n            : 1\n        }\n        if (l1) return -1\n        if (l2) return 1\n        return 0\n      })\n  }, [lists, activeCopy])\n\n  // temporary fetched list for import flow\n  const [tempList, setTempList] = useState<TokenList>()\n  const [addError, setAddError] = useState<string | undefined>()\n\n  useEffect(() => {\n    async function fetchTempList() {\n      fetchList(listUrlInput, false)\n        .then((list) => setTempList(list))\n        .catch(() => setAddError('Error importing list'))\n    }\n    // if valid url, fetch details for card\n    if (validUrl) {\n      fetchTempList()\n    } else {\n      setTempList(undefined)\n      if (listUrlInput !== '') {\n        setAddError('Enter valid list location')\n      }\n    }\n\n    // reset error\n    if (listUrlInput === '') {\n      setAddError(undefined)\n    }\n  }, [fetchList, listUrlInput, validUrl])\n\n  // check if list is already imported\n  const isImported = Object.keys(lists).includes(listUrlInput)\n\n  // set list values and have parent modal switch to import list view\n  const handleImport = useCallback(() => {\n    if (!tempList) return\n    setImportList(tempList)\n    setModalView(CurrencyModalView.importList)\n    setListUrl(listUrlInput)\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"14px\">\n        <Row>\n          <Input\n            id=\"list-add-input\"\n            scale=\"lg\"\n            placeholder={t('https:// or ipfs:// or ENS name')}\n            value={listUrlInput}\n            onChange={handleInput}\n          />\n        </Row>\n        {addError ? (\n          <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n            {addError}\n          </Text>\n        ) : null}\n      </AutoColumn>\n      {tempList && (\n        <AutoColumn style={{ paddingTop: 0 }}>\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {tempList.logoURI && <ListLogo logoURI={tempList.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"4px\" style={{ marginLeft: '20px' }}>\n                  <Text bold>{tempList.name}</Text>\n                  <Text color=\"textSubtle\" small textTransform=\"lowercase\">\n                    {tempList.tokens.length} {t('Tokens')}\n                  </Text>\n                </AutoColumn>\n              </RowFixed>\n              {isImported ? (\n                <RowFixed>\n                  <CheckmarkIcon width=\"16px\" mr=\"10px\" />\n                  <Text>{t('Loaded')}</Text>\n                </RowFixed>\n              ) : (\n                <Button width=\"fit-content\" onClick={handleImport}>\n                  {t('Import')}\n                </Button>\n              )}\n            </RowBetween>\n          </Card>\n        </AutoColumn>\n      )}\n      <ListContainer>\n        <AutoColumn gap=\"md\">\n          {sortedLists.map((listUrl) => (\n            <ListRow key={listUrl} listUrl={listUrl} />\n          ))}\n        </AutoColumn>\n      </ListContainer>\n    </Wrapper>\n  )\n}\n\nexport default ManageLists\n","import React, { useRef, RefObject, useCallback, useState, useMemo } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Text, Button, CloseIcon, IconButton, LinkExternal, Input, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport Row, { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { useToken } from 'hooks/Tokens'\nimport { useRemoveUserAddedToken } from 'state/user/hooks'\nimport useUserAddedTokens from 'state/user/hooks/useUserAddedTokens'\nimport { CurrencyLogo } from 'components/Logo'\nimport { getBscScanLink, isAddress } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport ImportRow from './ImportRow'\nimport { CurrencyModalView } from './types'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 60px);\n  position: relative;\n  padding-bottom: 60px;\n`\n\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport default function ManageTokens({\n  setModalView,\n  setImportToken,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n  }, [])\n\n  // if they input an address, use it\n  const searchToken = useToken(searchQuery)\n\n  // all tokens for local list\n  const userAddedTokens: Token[] = useUserAddedTokens()\n  const removeToken = useRemoveUserAddedToken()\n\n  const handleRemoveAll = useCallback(() => {\n    if (chainId && userAddedTokens) {\n      userAddedTokens.map((token) => {\n        return removeToken(chainId, token.address)\n      })\n    }\n  }, [removeToken, userAddedTokens, chainId])\n\n  const tokenList = useMemo(() => {\n    return (\n      chainId &&\n      userAddedTokens.map((token) => (\n        <RowBetween key={token.address} width=\"100%\">\n          <RowFixed>\n            <CurrencyLogo currency={token} size=\"20px\" />\n            <Link external href={getBscScanLink(token.address, 'address', chainId)} color=\"textSubtle\" ml=\"10px\">\n              {token.symbol}\n            </Link>\n          </RowFixed>\n          <RowFixed>\n            <IconButton variant=\"text\" onClick={() => removeToken(chainId, token.address)}>\n              <CloseIcon />\n            </IconButton>\n            <LinkExternal href={getBscScanLink(token.address, 'address', chainId)} />\n          </RowFixed>\n        </RowBetween>\n      ))\n    )\n  }, [userAddedTokens, chainId, removeToken])\n\n  const isAddressValid = searchQuery === '' || isAddress(searchQuery)\n\n  return (\n    <Wrapper>\n      <Column style={{ width: '100%', flex: '1 1' }}>\n        <AutoColumn gap=\"14px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              scale=\"lg\"\n              placeholder=\"0x0000\"\n              value={searchQuery}\n              autoComplete=\"off\"\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              isWarning={!isAddressValid}\n            />\n          </Row>\n          {!isAddressValid && <Text color=\"failure\">{t('Enter valid token address')}</Text>}\n          {searchToken && (\n            <ImportRow\n              token={searchToken}\n              showImportView={() => setModalView(CurrencyModalView.importToken)}\n              setImportToken={setImportToken}\n              style={{ height: 'fit-content' }}\n            />\n          )}\n        </AutoColumn>\n        {tokenList}\n        <Footer>\n          <Text bold color=\"textSubtle\">\n            {userAddedTokens?.length} {userAddedTokens.length === 1 ? t('Custom Token') : t('Custom Tokens')}\n          </Text>\n          {userAddedTokens.length > 0 && (\n            <Button variant=\"tertiary\" onClick={handleRemoveAll}>\n              {t('Clear all')}\n            </Button>\n          )}\n        </Footer>\n      </Column>\n    </Wrapper>\n  )\n}\n","import React, { useState } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { ButtonMenu, ButtonMenuItem, ModalBody } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport ManageLists from './ManageLists'\nimport ManageTokens from './ManageTokens'\nimport { CurrencyModalView } from './types'\n\nconst StyledButtonMenu = styled(ButtonMenu)`\n  width: 100%;\n`\n\nexport default function Manage({\n  setModalView,\n  setImportList,\n  setImportToken,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [showLists, setShowLists] = useState(true)\n\n  const { t } = useTranslation()\n\n  return (\n    <ModalBody>\n      <StyledButtonMenu\n        activeIndex={showLists ? 0 : 1}\n        onItemClick={() => setShowLists((prev) => !prev)}\n        scale=\"sm\"\n        variant=\"subtle\"\n        mb=\"32px\"\n      >\n        <ButtonMenuItem width=\"50%\">{t('Lists')}</ButtonMenuItem>\n        <ButtonMenuItem width=\"50%\">{t('Tokens')}</ButtonMenuItem>\n      </StyledButtonMenu>\n      {showLists ? (\n        <ManageLists setModalView={setModalView} setImportList={setImportList} setListUrl={setListUrl} />\n      ) : (\n        <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\n      )}\n    </ModalBody>\n  )\n}\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text, Link, Flex, Checkbox, Message } from '@pancakeswap/uikit'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport useTheme from 'hooks/useTheme'\nimport { ListLogo } from 'components/Logo'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from 'state'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport { removeList, enableList } from 'state/lists/actions'\nimport { useAllLists } from 'state/lists/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  listURL: string\n  list: TokenList\n  onImport: () => void\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nconst TextDot = styled.div`\n  height: 3px;\n  width: 3px;\n  background-color: ${({ theme }) => theme.colors.text};\n  border-radius: 50%;\n`\n\nfunction ImportList({ listURL, list, onImport }: ImportProps) {\n  const { theme } = useTheme()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const { t } = useTranslation()\n\n  // user must accept\n  const [confirmed, setConfirmed] = useState(false)\n\n  const lists = useAllLists()\n  const fetchList = useFetchListCallback()\n\n  // monitor is list is loading\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\n  const [addError, setAddError] = useState<string | null>(null)\n\n  const handleAddList = useCallback(() => {\n    if (adding) return\n    setAddError(null)\n    fetchList(listURL)\n      .then(() => {\n        dispatch(enableList(listURL))\n        onImport()\n      })\n      .catch((error) => {\n        setAddError(error.message)\n        dispatch(removeList(listURL))\n      })\n  }, [adding, dispatch, fetchList, listURL, onImport])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"md\">\n        <AutoColumn gap=\"md\">\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\n                  <RowFixed>\n                    <Text bold mr=\"6px\">\n                      {list.name}\n                    </Text>\n                    <TextDot />\n                    <Text small color=\"textSubtle\" ml=\"6px\">\n                      {list.tokens.length} tokens\n                    </Text>\n                  </RowFixed>\n                  <Link\n                    small\n                    external\n                    ellipsis\n                    maxWidth=\"90%\"\n                    href={`https://tokenlists.org/token-list?url=${listURL}`}\n                  >\n                    {listURL}\n                  </Link>\n                </AutoColumn>\n              </RowFixed>\n            </RowBetween>\n          </Card>\n\n          <Message variant=\"danger\">\n            <Flex flexDirection=\"column\">\n              <Text fontSize=\"20px\" textAlign=\"center\" color={theme.colors.failure} mb=\"16px\">\n                {t('Import at your own risk')}\n              </Text>\n              <Text color={theme.colors.failure} mb=\"8px\">\n                {t(\n                  'By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.',\n                )}\n              </Text>\n              <Text bold color={theme.colors.failure} mb=\"16px\">\n                {typeof 'If you purchase a token from this list, you may not be able to sell it back.'}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Checkbox\n                  name=\"confirmed\"\n                  type=\"checkbox\"\n                  checked={confirmed}\n                  onChange={() => setConfirmed(!confirmed)}\n                  scale=\"sm\"\n                />\n                <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n                  {t('I understand')}\n                </Text>\n              </Flex>\n            </Flex>\n          </Message>\n\n          <Button disabled={!confirmed} onClick={handleAddList}>\n            {t('Import')}\n          </Button>\n          {addError ? (\n            <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n              {addError}\n            </Text>\n          ) : null}\n        </AutoColumn>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport default ImportList\n","import React, { useCallback, useState } from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport {\n  ModalContainer,\n  ModalHeader,\n  ModalTitle,\n  ModalBackButton,\n  ModalCloseButton,\n  ModalBody,\n  InjectedModalProps,\n  Heading,\n  Button,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport usePrevious from 'hooks/usePreviousValue'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport CurrencySearch from './CurrencySearch'\nimport ImportToken from './ImportToken'\nimport Manage from './Manage'\nimport ImportList from './ImportList'\nimport { CurrencyModalView } from './types'\n\nconst Footer = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  text-align: center;\n`\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 420px;\n  width: 100%;\n`\n\nconst StyledModalBody = styled(ModalBody)`\n  padding: 24px;\n`\n\ninterface CurrencySearchModalProps extends InjectedModalProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n}\n\nexport default function CurrencySearchModal({\n  onDismiss = () => null,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n  showCommonBases = false,\n}: CurrencySearchModalProps) {\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.search)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onDismiss()\n      onCurrencySelect(currency)\n    },\n    [onDismiss, onCurrencySelect],\n  )\n\n  // for token import view\n  const prevView = usePrevious(modalView)\n\n  // used for import token flow\n  const [importToken, setImportToken] = useState<Token | undefined>()\n\n  // used for import list\n  const [importList, setImportList] = useState<TokenList | undefined>()\n  const [listURL, setListUrl] = useState<string | undefined>()\n\n  const { t } = useTranslation()\n\n  const config = {\n    [CurrencyModalView.search]: { title: t('Select a Token'), onBack: undefined },\n    [CurrencyModalView.manage]: { title: t('Manage'), onBack: () => setModalView(CurrencyModalView.search) },\n    [CurrencyModalView.importToken]: {\n      title: t('Import Tokens'),\n      onBack: () =>\n        setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\n    },\n    [CurrencyModalView.importList]: { title: t('Import List'), onBack: () => setModalView(CurrencyModalView.search) },\n  }\n\n  return (\n    <StyledModalContainer minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          {config[modalView].onBack && <ModalBackButton onBack={config[modalView].onBack} />}\n          <Heading>{config[modalView].title}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </ModalHeader>\n      <StyledModalBody>\n        {modalView === CurrencyModalView.search ? (\n          <CurrencySearch\n            onCurrencySelect={handleCurrencySelect}\n            selectedCurrency={selectedCurrency}\n            otherSelectedCurrency={otherSelectedCurrency}\n            showCommonBases={showCommonBases}\n            showImportView={() => setModalView(CurrencyModalView.importToken)}\n            setImportToken={setImportToken}\n          />\n        ) : modalView === CurrencyModalView.importToken && importToken ? (\n          <ImportToken tokens={[importToken]} handleCurrencySelect={handleCurrencySelect} />\n        ) : modalView === CurrencyModalView.importList && importList && listURL ? (\n          <ImportList list={importList} listURL={listURL} onImport={() => setModalView(CurrencyModalView.manage)} />\n        ) : modalView === CurrencyModalView.manage ? (\n          <Manage\n            setModalView={setModalView}\n            setImportToken={setImportToken}\n            setImportList={setImportList}\n            setListUrl={setListUrl}\n          />\n        ) : (\n          ''\n        )}\n        {modalView === CurrencyModalView.search && (\n          <Footer>\n            <Button\n              scale=\"sm\"\n              variant=\"text\"\n              onClick={() => setModalView(CurrencyModalView.manage)}\n              className=\"list-token-manage-button\"\n            >\n              {t('Manage Tokens')}\n            </Button>\n          </Footer>\n        )}\n      </StyledModalBody>\n    </StyledModalContainer>\n  )\n}\n","import React from 'react'\nimport ReactDatePicker, { ReactDatePickerProps } from 'react-datepicker'\nimport { Input, InputProps } from '@pancakeswap/uikit'\n\nimport 'react-datepicker/dist/react-datepicker.css'\n\nexport interface DatePickerProps extends ReactDatePickerProps {\n  inputProps?: InputProps\n}\n\nconst DatePicker: React.FC<DatePickerProps> = ({ inputProps = {}, ...props }) => {\n  return (\n    <ReactDatePicker customInput={<Input {...inputProps} />} portalId=\"reactDatePicker\" dateFormat=\"PPP\" {...props} />\n  )\n}\n\nexport default DatePicker\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledDatePickerPortal = styled.div`\n  .react-datepicker-wrapper,\n  .react-datepicker__input-container {\n    display: block;\n  }\n\n  .react-datepicker {\n    background: ${({ theme }) => theme.card.background};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n    color: ${({ theme }) => theme.colors.text};\n    font-family: 'Kanit', sans-serif;\n  }\n\n  .react-datepicker__header {\n    background: ${({ theme }) => theme.colors.input};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__current-month,\n  .react-datepicker-time__header,\n  .react-datepicker-year-header,\n  .react-datepicker__day-name,\n  .react-datepicker__day,\n  .react-datepicker__time-name {\n    color: ${({ theme }) => theme.colors.text};\n  }\n\n  .react-datepicker__day:hover,\n  .react-datepicker__month-text:hover,\n  .react-datepicker__quarter-text:hover,\n  .react-datepicker__year-text:hover {\n    background-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::before,\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::after {\n    border-bottom-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__day--selected,\n  .react-datepicker__day--in-selecting-range,\n  .react-datepicker__day--in-range,\n  .react-datepicker__month-text--selected,\n  .react-datepicker__month-text--in-selecting-range,\n  .react-datepicker__month-text--in-range,\n  .react-datepicker__quarter-text--selected,\n  .react-datepicker__quarter-text--in-selecting-range,\n  .react-datepicker__quarter-text--in-range,\n  .react-datepicker__year-text--selected,\n  .react-datepicker__year-text--in-selecting-range,\n  .react-datepicker__year-text--in-range {\n    background-color: ${({ theme }) => theme.colors.primary};\n  }\n\n  .react-datepicker__day--selected:hover,\n  .react-datepicker__day--in-selecting-range:hover,\n  .react-datepicker__day--in-range:hover,\n  .react-datepicker__month-text--selected:hover,\n  .react-datepicker__month-text--in-selecting-range:hover,\n  .react-datepicker__month-text--in-range:hover,\n  .react-datepicker__quarter-text--selected:hover,\n  .react-datepicker__quarter-text--in-selecting-range:hover,\n  .react-datepicker__quarter-text--in-range:hover,\n  .react-datepicker__year-text--selected:hover,\n  .react-datepicker__year-text--in-selecting-range:hover,\n  .react-datepicker__year-text--in-range:hover {\n    background-color: ${({ theme }) => theme.colors.primaryBright};\n  }\n\n  .react-datepicker__day--keyboard-selected,\n  .react-datepicker__month-text--keyboard-selected,\n  .react-datepicker__quarter-text--keyboard-selected,\n  .react-datepicker__year-text--keyboard-selected {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__day--keyboard-selected:hover,\n  .react-datepicker__month-text--keyboard-selected:hover,\n  .react-datepicker__quarter-text--keyboard-selected:hover,\n  .react-datepicker__year-text--keyboard-selected:hover {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__time-container,\n  .react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box {\n    width: 120px;\n  }\n\n  .react-datepicker__header--time {\n    padding: 8px;\n  }\n\n  .react-datepicker__time-container\n    .react-datepicker__time\n    .react-datepicker__time-box\n    ul.react-datepicker__time-list\n    li.react-datepicker__time-list-item {\n    height: auto;\n    padding: 8px;\n  }\n`\n\nconst DatePickerPortal = () => {\n  return <StyledDatePickerPortal id=\"reactDatePicker\" />\n}\n\nexport default DatePickerPortal\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport DatePicker, { DatePickerProps } from './DatePicker'\n\nconst TimePicker: React.FC<DatePickerProps> = (props) => {\n  const { t } = useTranslation()\n\n  return (\n    <DatePicker\n      showTimeSelect\n      showTimeSelectOnly\n      timeIntervals={15}\n      timeCaption={t('Time')}\n      dateFormat=\"ppp\"\n      {...props}\n    />\n  )\n}\n\nexport default TimePicker\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport Container from '../Layout/Container'\n\nconst Outer = styled(Box)<{ background?: string }>`\n  background: ${({ theme, background }) => background || theme.colors.gradients.bubblegum};\n`\n\nconst Inner = styled(Container)`\n  padding-top: 32px;\n  padding-bottom: 32px;\n`\n\nconst PageHeader: React.FC<{ background?: string }> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default PageHeader\n","import React, { useState, useMemo } from 'react'\nimport { Input } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport debounce from 'lodash/debounce'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledInput = styled(Input)`\n  border-radius: 16px;\n  margin-left: auto;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`\n\nconst Container = styled.div<{ toggled: boolean }>``\n\ninterface Props {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  placeholder?: string\n}\n\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\n  const [toggled, setToggled] = useState(false)\n  const [searchText, setSearchText] = useState('')\n\n  const { t } = useTranslation()\n\n  const debouncedOnChange = useMemo(\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\n    [onChangeCallback],\n  )\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value)\n    debouncedOnChange(e)\n  }\n\n  return (\n    <Container toggled={toggled}>\n      <InputWrapper>\n        <StyledInput\n          value={searchText}\n          onChange={onChange}\n          placeholder={t(placeholder)}\n          onBlur={() => setToggled(false)}\n        />\n      </InputWrapper>\n    </Container>\n  )\n}\n\nexport default SearchInput\n","import { useCallback, useEffect, useState } from 'react'\n\nconst VISIBILITY_STATE_SUPPORTED = 'visibilityState' in document\n\nfunction isWindowVisible() {\n  return !VISIBILITY_STATE_SUPPORTED || document.visibilityState !== 'hidden'\n}\n\n/**\n * Returns whether the window is currently visible to the user.\n */\nexport default function useIsWindowVisible(): boolean {\n  const [focused, setFocused] = useState<boolean>(isWindowVisible())\n  const listener = useCallback(() => {\n    setFocused(isWindowVisible())\n  }, [setFocused])\n\n  useEffect(() => {\n    if (!VISIBILITY_STATE_SUPPORTED) return undefined\n\n    document.addEventListener('visibilitychange', listener)\n    return () => {\n      document.removeEventListener('visibilitychange', listener)\n    }\n  }, [listener])\n\n  return focused\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useDebounce from 'hooks/useDebounce'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { updateBlockNumber } from './actions'\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n  const dispatch = useDispatch()\n\n  const windowVisible = useIsWindowVisible()\n\n  const [state, setState] = useState<{ chainId: number | undefined; blockNumber: number | null }>({\n    chainId,\n    blockNumber: null,\n  })\n\n  const blockNumberCallback = useCallback(\n    (blockNumber: number) => {\n      setState((prev) => {\n        if (chainId === prev.chainId) {\n          if (typeof prev.blockNumber !== 'number') return { chainId, blockNumber }\n          return { chainId, blockNumber: Math.max(blockNumber, prev.blockNumber) }\n        }\n        return prev\n      })\n    },\n    [chainId, setState],\n  )\n\n  // attach/detach listeners\n  useEffect(() => {\n    if (!library || !chainId || !windowVisible) return undefined\n\n    setState({ chainId, blockNumber: null })\n\n    library\n      .getBlockNumber()\n      .then(blockNumberCallback)\n      .catch((error) => console.error(`Failed to get block number for chainId: ${chainId}`, error))\n\n    library.on('block', blockNumberCallback)\n    return () => {\n      library.removeListener('block', blockNumberCallback)\n    }\n  }, [dispatch, chainId, library, blockNumberCallback, windowVisible])\n\n  const debouncedState = useDebounce(state, 100)\n\n  useEffect(() => {\n    if (!debouncedState.chainId || !debouncedState.blockNumber || !windowVisible) return\n    dispatch(updateBlockNumber({ chainId: debouncedState.chainId, blockNumber: debouncedState.blockNumber }))\n  }, [windowVisible, dispatch, debouncedState.blockNumber, debouncedState.chainId])\n\n  return null\n}\n","import { useAllLists } from 'state/lists/hooks'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\nimport { useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useAllInactiveTokens } from 'hooks/Tokens'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport useInterval from 'hooks/useInterval'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { AppDispatch } from '../index'\nimport { acceptListUpdate } from './actions'\nimport { useActiveListUrls } from './hooks'\n\nexport default function Updater(): null {\n  const { library } = useWeb3Provider()\n  const dispatch = useDispatch<AppDispatch>()\n  const isWindowVisible = useIsWindowVisible()\n\n  // get all loaded lists, and the active urls\n  const lists = useAllLists()\n  const activeListUrls = useActiveListUrls()\n\n  // initiate loading\n  useAllInactiveTokens()\n\n  const fetchList = useFetchListCallback()\n  const fetchAllListsCallback = useCallback(() => {\n    if (!isWindowVisible) return\n    Object.keys(lists).forEach((url) =>\n      fetchList(url).catch((error) => console.debug('interval list fetching error', error)),\n    )\n  }, [fetchList, isWindowVisible, lists])\n\n  // fetch all lists every 10 minutes, but only after we initialize library\n  useInterval(fetchAllListsCallback, library ? 1000 * 60 * 10 : null)\n\n  // whenever a list is not loaded and not loading, try again to load it\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list.current && !list.loadingRequestId && !list.error) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // if any lists from unsupported lists are loaded, check them too (in case new updates since last visit)\n  useEffect(() => {\n    Object.keys(UNSUPPORTED_LIST_URLS).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list || (!list.current && !list.loadingRequestId && !list.error)) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // automatically update lists if versions are minor/patch\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (list.current && list.pendingUpdate) {\n        const bump = getVersionUpgrade(list.current.version, list.pendingUpdate.version)\n        // eslint-disable-next-line default-case\n        switch (bump) {\n          case VersionUpgrade.NONE:\n            throw new Error('unexpected no version bump')\n          // update any active or inactive lists\n          case VersionUpgrade.PATCH:\n          case VersionUpgrade.MINOR:\n          case VersionUpgrade.MAJOR:\n            dispatch(acceptListUpdate(listUrl))\n        }\n      }\n    })\n  }, [dispatch, lists, activeListUrls])\n\n  return null\n}\n","import { useEffect, useRef } from 'react'\n\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\n  const savedCallback = useRef<() => void>()\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      const { current } = savedCallback\n      if (current) {\n        current()\n      }\n    }\n\n    if (delay !== null) {\n      if (leading) tick()\n      const id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n    return undefined\n  }, [delay, leading])\n}\n","/* eslint-disable */\n\nfunction wait(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nfunction waitRandom(min: number, max: number): Promise<void> {\n  return wait(min + Math.round(Math.random() * Math.max(0, max - min)))\n}\n\n/**\n * This error is thrown if the function is cancelled before completing\n */\nexport class CancelledError extends Error {\n  constructor() {\n    super('Cancelled')\n  }\n}\n\n/**\n * Throw this error if the function should retry\n */\nexport class RetryableError extends Error {}\n\n/**\n * Retries the function that returns the promise until the promise successfully resolves up to n retries\n * @param fn function to retry\n * @param n how many times to retry\n * @param minWait min wait between retries in ms\n * @param maxWait max wait between retries in ms\n */\nexport function retry<T>(\n  fn: () => Promise<T>,\n  { n, minWait, maxWait }: { n: number; minWait: number; maxWait: number },\n): { promise: Promise<T>; cancel: () => void } {\n  let completed = false\n  let rejectCancelled: (error: Error) => void\n  const promise = new Promise<T>(async (resolve, reject) => {\n    rejectCancelled = reject\n    while (true) {\n      let result: T\n      try {\n        result = await fn()\n        if (!completed) {\n          resolve(result)\n          completed = true\n        }\n        break\n      } catch (error) {\n        if (completed) {\n          break\n        }\n        if (n <= 0 || !(error instanceof RetryableError)) {\n          reject(error)\n          completed = true\n          break\n        }\n        n--\n      }\n      await waitRandom(minWait, maxWait)\n    }\n  })\n  return {\n    promise,\n    cancel: () => {\n      if (completed) return\n      completed = true\n      rejectCancelled(new CancelledError())\n    },\n  }\n}\n\n/* eslint-enable */\n","import { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useMulticallContract } from '../../hooks/useContract'\nimport useDebounce from '../../hooks/useDebounce'\nimport { CancelledError, retry, RetryableError } from './retry'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  Call,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  parseCallKey,\n  updateMulticallResults,\n} from './actions'\nimport chunkArray from './chunkArray'\n\n// chunk calls so we do not exceed the gas limit\nconst CALL_CHUNK_SIZE = 500\n\n/**\n * Fetches a chunk of calls, enforcing a minimum block number constraint\n * @param multicallContract multicall contract to fetch against\n * @param chunk chunk of calls to make\n * @param minBlockNumber minimum block number of the result set\n */\nasync function fetchChunk(\n  multicallContract: Contract,\n  chunk: Call[],\n  minBlockNumber: number,\n): Promise<{ results: string[]; blockNumber: number }> {\n  console.debug('Fetching chunk', multicallContract, chunk, minBlockNumber)\n  let resultsBlockNumber\n  let returnData\n  try {\n    // prettier-ignore\n    [resultsBlockNumber, returnData] = await multicallContract.aggregate(\n      chunk.map((obj) => [obj.address, obj.callData])\n    )\n  } catch (error) {\n    console.debug('Failed to fetch chunk inside retry', error)\n    throw error\n  }\n  if (resultsBlockNumber.toNumber() < minBlockNumber) {\n    console.debug(`Fetched results for old block number: ${resultsBlockNumber.toString()} vs. ${minBlockNumber}`)\n    throw new RetryableError('Fetched for old block number')\n  }\n  return { results: returnData, blockNumber: resultsBlockNumber.toNumber() }\n}\n\n/**\n * From the current all listeners state, return each call key mapped to the\n * minimum number of blocks per fetch. This is how often each key must be fetched.\n * @param allListeners the all listeners state\n * @param chainId the current chain id\n */\nexport function activeListeningKeys(\n  allListeners: AppState['multicall']['callListeners'],\n  chainId?: number,\n): { [callKey: string]: number } {\n  if (!allListeners || !chainId) return {}\n  const listeners = allListeners[chainId]\n  if (!listeners) return {}\n\n  return Object.keys(listeners).reduce<{ [callKey: string]: number }>((memo, callKey) => {\n    const keyListeners = listeners[callKey]\n\n    memo[callKey] = Object.keys(keyListeners)\n      .filter((key) => {\n        const blocksPerFetch = parseInt(key)\n        if (blocksPerFetch <= 0) return false\n        return keyListeners[blocksPerFetch] > 0\n      })\n      .reduce((previousMin, current) => {\n        return Math.min(previousMin, parseInt(current))\n      }, Infinity)\n    return memo\n  }, {})\n}\n\n/**\n * Return the keys that need to be refetched\n * @param callResults current call result state\n * @param listeningKeys each call key mapped to how old the data can be in blocks\n * @param chainId the current chain id\n * @param latestBlockNumber the latest block number\n */\nexport function outdatedListeningKeys(\n  callResults: AppState['multicall']['callResults'],\n  listeningKeys: { [callKey: string]: number },\n  chainId: number | undefined,\n  latestBlockNumber: number | undefined,\n): string[] {\n  if (!chainId || !latestBlockNumber) return []\n  const results = callResults[chainId]\n  // no results at all, load everything\n  if (!results) return Object.keys(listeningKeys)\n\n  return Object.keys(listeningKeys).filter((callKey) => {\n    const blocksPerFetch = listeningKeys[callKey]\n\n    const data = callResults[chainId][callKey]\n    // no data, must fetch\n    if (!data) return true\n\n    const minDataBlockNumber = latestBlockNumber - (blocksPerFetch - 1)\n\n    // already fetching it for a recent enough block, don't refetch it\n    if (data.fetchingBlockNumber && data.fetchingBlockNumber >= minDataBlockNumber) return false\n\n    // if data is older than minDataBlockNumber, fetch it\n    return !data.blockNumber || data.blockNumber < minDataBlockNumber\n  })\n}\n\nexport default function Updater(): null {\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['multicall']>((s) => s.multicall)\n  // wait for listeners to settle before triggering updates\n  const debouncedListeners = useDebounce(state.callListeners, 100)\n  const latestBlockNumber = useBlockNumber()\n  const { chainId } = useActiveWeb3React()\n  const multicallContract = useMulticallContract()\n  const cancellations = useRef<{ blockNumber: number; cancellations: (() => void)[] }>()\n\n  const listeningKeys: { [callKey: string]: number } = useMemo(() => {\n    return activeListeningKeys(debouncedListeners, chainId)\n  }, [debouncedListeners, chainId])\n\n  const unserializedOutdatedCallKeys = useMemo(() => {\n    return outdatedListeningKeys(state.callResults, listeningKeys, chainId, latestBlockNumber)\n  }, [chainId, state.callResults, listeningKeys, latestBlockNumber])\n\n  const serializedOutdatedCallKeys = useMemo(\n    () => JSON.stringify(unserializedOutdatedCallKeys.sort()),\n    [unserializedOutdatedCallKeys],\n  )\n\n  useEffect(() => {\n    if (!latestBlockNumber || !chainId || !multicallContract) return\n\n    const outdatedCallKeys: string[] = JSON.parse(serializedOutdatedCallKeys)\n    if (outdatedCallKeys.length === 0) return\n    const calls = outdatedCallKeys.map((key) => parseCallKey(key))\n\n    const chunkedCalls = chunkArray(calls, CALL_CHUNK_SIZE)\n\n    if (cancellations.current?.blockNumber !== latestBlockNumber) {\n      cancellations.current?.cancellations?.forEach((c) => c())\n    }\n\n    dispatch(\n      fetchingMulticallResults({\n        calls,\n        chainId,\n        fetchingBlockNumber: latestBlockNumber,\n      }),\n    )\n\n    cancellations.current = {\n      blockNumber: latestBlockNumber,\n      cancellations: chunkedCalls.map((chunk, index) => {\n        const { cancel, promise } = retry(() => fetchChunk(multicallContract, chunk, latestBlockNumber), {\n          n: Infinity,\n          minWait: 2500,\n          maxWait: 3500,\n        })\n        promise\n          .then(({ results: returnData, blockNumber: fetchBlockNumber }) => {\n            cancellations.current = { cancellations: [], blockNumber: latestBlockNumber }\n\n            // accumulates the length of all previous indices\n            const firstCallKeyIndex = chunkedCalls.slice(0, index).reduce<number>((memo, curr) => memo + curr.length, 0)\n            const lastCallKeyIndex = firstCallKeyIndex + returnData.length\n\n            dispatch(\n              updateMulticallResults({\n                chainId,\n                results: outdatedCallKeys\n                  .slice(firstCallKeyIndex, lastCallKeyIndex)\n                  .reduce<{ [callKey: string]: string | null }>((memo, callKey, i) => {\n                    memo[callKey] = returnData[i] ?? null\n                    return memo\n                  }, {}),\n                blockNumber: fetchBlockNumber,\n              }),\n            )\n          })\n          .catch((error: any) => {\n            if (error instanceof CancelledError) {\n              console.debug('Cancelled fetch for blockNumber', latestBlockNumber)\n              return\n            }\n            console.error('Failed to fetch multicall chunk', chunk, chainId, error)\n            dispatch(\n              errorFetchingMulticallResults({\n                calls: chunk,\n                chainId,\n                fetchingBlockNumber: latestBlockNumber,\n              }),\n            )\n          })\n        return cancel\n      }),\n    }\n  }, [chainId, multicallContract, dispatch, serializedOutdatedCallKeys, latestBlockNumber])\n\n  return null\n}\n","// chunks array into chunks of maximum size\n// evenly distributes items among the chunks\nexport default function chunkArray<T>(items: T[], maxChunkSize: number): T[][] {\n  if (maxChunkSize < 1) throw new Error('maxChunkSize must be gte 1')\n  if (items.length <= maxChunkSize) return [items]\n\n  const numChunks: number = Math.ceil(items.length / maxChunkSize)\n  const chunkSize = Math.ceil(items.length / numChunks)\n\n  return [...Array(numChunks).keys()].map((ix) => items.slice(ix * chunkSize, ix * chunkSize + chunkSize))\n}\n","import React, { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Text, Flex, Link } from '@pancakeswap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport useToast from 'hooks/useToast'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport { checkedTransaction, finalizeTransaction } from './actions'\n\nexport function shouldCheck(\n  lastBlockNumber: number,\n  tx: { addedTime: number; receipt?: any; lastCheckedBlockNumber?: number },\n): boolean {\n  if (tx.receipt) return false\n  if (!tx.lastCheckedBlockNumber) return true\n  const blocksSinceCheck = lastBlockNumber - tx.lastCheckedBlockNumber\n  if (blocksSinceCheck < 1) return false\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60\n  if (minutesPending > 60) {\n    // every 10 blocks if pending for longer than an hour\n    return blocksSinceCheck > 9\n  }\n  if (minutesPending > 5) {\n    // every 3 blocks if pending more than 5 minutes\n    return blocksSinceCheck > 2\n  }\n  // otherwise every block\n  return true\n}\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n\n  const lastBlockNumber = useBlockNumber()\n\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  const transactions = useMemo(() => (chainId ? state[chainId] ?? {} : {}), [chainId, state])\n\n  const { toastError, toastSuccess } = useToast()\n\n  useEffect(() => {\n    if (!chainId || !library || !lastBlockNumber) return\n\n    Object.keys(transactions)\n      .filter((hash) => shouldCheck(lastBlockNumber, transactions[hash]))\n      .forEach((hash) => {\n        library\n          .getTransactionReceipt(hash)\n          .then((receipt) => {\n            if (receipt) {\n              dispatch(\n                finalizeTransaction({\n                  chainId,\n                  hash,\n                  receipt: {\n                    blockHash: receipt.blockHash,\n                    blockNumber: receipt.blockNumber,\n                    contractAddress: receipt.contractAddress,\n                    from: receipt.from,\n                    status: receipt.status,\n                    to: receipt.to,\n                    transactionHash: receipt.transactionHash,\n                    transactionIndex: receipt.transactionIndex,\n                  },\n                }),\n              )\n\n              const toast = receipt.status === 1 ? toastSuccess : toastError\n              toast(\n                'Transaction receipt',\n                <Flex flexDirection=\"column\">\n                  <Text>{transactions[hash]?.summary ?? `Hash: ${hash.slice(0, 8)}...${hash.slice(58, 65)}`}</Text>\n                  {chainId && (\n                    <Link external href={getBscScanLink(hash, 'transaction', chainId)}>\n                      View on Explorer\n                    </Link>\n                  )}\n                </Flex>,\n              )\n            } else {\n              dispatch(checkedTransaction({ chainId, hash, blockNumber: lastBlockNumber }))\n            }\n          })\n          .catch((error) => {\n            console.error(`failed to check transaction hash: ${hash}`, error)\n          })\n      })\n  }, [chainId, library, transactions, lastBlockNumber, dispatch, toastSuccess, toastError])\n\n  return null\n}\n","import { useEffect } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\n\nconst _binanceChainListener = async () =>\n  new Promise<void>((resolve) =>\n    Object.defineProperty(window, 'BinanceChain', {\n      get() {\n        return this.bsc\n      },\n      set(bsc) {\n        this.bsc = bsc\n\n        resolve()\n      },\n    }),\n  )\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    if (connectorId) {\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\n\n      // Currently BSC extension doesn't always inject in time.\n      // We must check to see if it exists, and if not, wait for it before proceeding.\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\n        _binanceChainListener().then(() => login(connectorId))\n\n        return\n      }\n\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap/uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Kanit', sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","import { ChainId, Currency, currencyEquals, JSBI, Price, WETH } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { BUSD, CAKE } from '../config/constants/tokens'\nimport { PairState, usePairs } from './usePairs'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nconst BUSD_MAINNET = BUSD[ChainId.MAINNET]\n\n/**\n * Returns the price in BUSD of the input currency\n * @param currency currency to compute the BUSD price of\n */\nexport default function useBUSDPrice(currency?: Currency): Price | undefined {\n  const { chainId } = useActiveWeb3React()\n  const wrapped = wrappedCurrency(currency, chainId)\n  const tokenPairs: [Currency | undefined, Currency | undefined][] = useMemo(\n    () => [\n      [\n        chainId && wrapped && currencyEquals(WETH[chainId], wrapped) ? undefined : currency,\n        chainId ? WETH[chainId] : undefined,\n      ],\n      [wrapped?.equals(BUSD_MAINNET) ? undefined : wrapped, chainId === ChainId.MAINNET ? BUSD_MAINNET : undefined],\n      [chainId ? WETH[chainId] : undefined, chainId === ChainId.MAINNET ? BUSD_MAINNET : undefined],\n    ],\n    [chainId, currency, wrapped],\n  )\n  console.log('tokenPairs',tokenPairs)\n  const [[ethPairState, ethPair], [busdPairState, busdPair], [busdEthPairState, busdEthPair]] = usePairs(tokenPairs)\n\n  return useMemo(() => {\n    if (!currency || !wrapped || !chainId) {\n      return undefined\n    }\n    // handle weth/eth\n    if (wrapped.equals(WETH[chainId])) {\n      if (busdPair) {\n        const price = busdPair.priceOf(WETH[chainId])\n        return new Price(currency, BUSD_MAINNET, price.denominator, price.numerator)\n      }\n      return undefined\n    }\n    // handle busd\n    if (wrapped.equals(BUSD_MAINNET)) {\n      return new Price(BUSD_MAINNET, BUSD_MAINNET, '1', '1')\n    }\n\n    const ethPairETHAmount = ethPair?.reserveOf(WETH[chainId])\n    const ethPairETHBUSDValue: JSBI =\n      ethPairETHAmount && busdEthPair ? busdEthPair.priceOf(WETH[chainId]).quote(ethPairETHAmount).raw : JSBI.BigInt(0)\n\n    // all other tokens\n    // first try the busd pair\n    if (\n      busdPairState === PairState.EXISTS &&\n      busdPair &&\n      busdPair.reserveOf(BUSD_MAINNET).greaterThan(ethPairETHBUSDValue)\n    ) {\n      const price = busdPair.priceOf(wrapped)\n      return new Price(currency, BUSD_MAINNET, price.denominator, price.numerator)\n    }\n    if (ethPairState === PairState.EXISTS && ethPair && busdEthPairState === PairState.EXISTS && busdEthPair) {\n      if (busdEthPair.reserveOf(BUSD_MAINNET).greaterThan('0') && ethPair.reserveOf(WETH[chainId]).greaterThan('0')) {\n        const ethBusdPrice = busdEthPair.priceOf(BUSD_MAINNET)\n        const currencyEthPrice = ethPair.priceOf(WETH[chainId])\n        const busdPrice = ethBusdPrice.multiply(currencyEthPrice).invert()\n        return new Price(currency, BUSD_MAINNET, busdPrice.denominator, busdPrice.numerator)\n      }\n    }\n    return undefined\n  }, [chainId, currency, ethPair, ethPairState, busdEthPair, busdEthPairState, busdPair, busdPairState, wrapped])\n}\n\nexport const useCakeBusdPrice = (): Price | undefined => {\n  const { chainId } = useActiveWeb3React()\n  const currentChaindId = chainId || ChainId.MAINNET\n  const cakeBusdPrice = useBUSDPrice(CAKE[currentChaindId])\n  // console.log('cakeBusdPrice', cakeBusdPrice)\n  return cakeBusdPrice\n}\n","import React, { useState } from 'react'\nimport {\n  ButtonMenu,\n  ButtonMenuItem,\n  CloseIcon,\n  Heading,\n  IconButton,\n  InjectedModalProps,\n  ModalBody,\n  ModalContainer,\n  ModalHeader as UIKitModalHeader,\n  ModalTitle,\n} from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\nimport WalletInfo from './WalletInfo'\nimport WalletTransactions from './WalletTransactions'\n\nexport enum WalletView {\n  WALLET_INFO,\n  TRANSACTIONS,\n}\n\ninterface WalletModalProps extends InjectedModalProps {\n  initialView?: WalletView\n}\n\nexport const LOW_BNB_BALANCE = new BigNumber('2000000000') // 2 Gwei\n\nconst ModalHeader = styled(UIKitModalHeader)`\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n`\n\nconst Tabs = styled.div`\n  background-color: ${({ theme }) => theme.colors.dropdown};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  padding: 16px 24px;\n`\n\nconst WalletModal: React.FC<WalletModalProps> = ({ initialView = WalletView.WALLET_INFO, onDismiss }) => {\n  const [view, setView] = useState(initialView)\n  const { t } = useTranslation()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\n\n  const handleClick = (newIndex: number) => {\n    setView(newIndex)\n  }\n\n  return (\n    <ModalContainer title={t('Welcome!')} minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          <Heading>{t('Your Wallet')}</Heading>\n        </ModalTitle>\n        <IconButton variant=\"text\" onClick={onDismiss}>\n          <CloseIcon width=\"24px\" color=\"text\" />\n        </IconButton>\n      </ModalHeader>\n      <Tabs>\n        <ButtonMenu scale=\"sm\" variant=\"subtle\" onItemClick={handleClick} activeIndex={view} fullWidth>\n          <ButtonMenuItem>{t('Wallet')}</ButtonMenuItem>\n          <ButtonMenuItem>{t('Transactions')}</ButtonMenuItem>\n        </ButtonMenu>\n      </Tabs>\n      <ModalBody p=\"24px\" maxWidth=\"400px\" width=\"100%\">\n        {view === WalletView.WALLET_INFO && <WalletInfo hasLowBnbBalance={hasLowBnbBalance} onDismiss={onDismiss} />}\n        {view === WalletView.TRANSACTIONS && <WalletTransactions />}\n      </ModalBody>\n    </ModalContainer>\n  )\n}\n\nexport default WalletModal\n","import { MenuEntry } from '@pancakeswap/uikit'\nimport { ContextApi } from 'contexts/Localization/types'\n\nconst config: (t: ContextApi['t']) => MenuEntry[] = (t) => [\n  {\n    label: t('Home'),\n    icon: 'HomeIcon',\n    href: '/',\n  },\n  {\n    label: t('Trade'),\n    icon: 'TradeIcon',\n    items: [\n      {\n        label: t('Exchange'),\n        href: '/swap',\n      },\n      {\n        label: t('Liquidity'),\n        href: '/pool',\n      },\n      // {\n      //   label: t('LP Migration'),\n      //   href: 'https://v1exchange.pancakeswap.finance/#/migrate',\n      // },\n    ],\n  },\n  // {\n  //   label: t('Farms'),\n  //   icon: 'FarmIcon',\n  //   href: '/farms',\n  // },\n  // {\n  //   label: t('Pools'),\n  //   icon: 'PoolIcon',\n  //   href: '/pools',\n  // },\n  // {\n  //   label: t('Token Migration'),\n  //   icon: 'SunIcon',\n  //   href: '/migrate',\n  // },\n  // {\n  //   label: t('V1 Farms'),\n  //   icon: 'FarmIcon',\n  //   href: 'https://harmony-legacy.mochiswap.io',\n  // },\n  // {\n  //   label: t('V1 Farms'),\n  //   icon: 'FarmIcon',\n  //   href: 'https://one.mochiswap.io',\n  // },\n  // {\n  //   label: t('Prediction (BETA)'),\n  //   icon: 'PredictionsIcon',\n  //   href: '/prediction',\n  // },\n  // {\n  //   label: t('Lottery'),\n  //   icon: 'TicketIcon',\n  //   href: '/lottery',\n  // },\n  // {\n  //   label: t('Collectibles'),\n  //   icon: 'NftIcon',\n  //   href: '/collectibles',\n  // },\n  // {\n  //   label: t('Team Battle'),\n  //   icon: 'TeamBattleIcon',\n  //   href: '/competition',\n  // },\n  // {\n  //   label: t('Teams & Profile'),\n  //   icon: 'GroupsIcon',\n  //   items: [\n  //     {\n  //       label: t('Leaderboard'),\n  //       href: '/teams',\n  //     },\n  //     {\n  //       label: t('Task Center'),\n  //       href: '/profile/tasks',\n  //     },\n  //     {\n  //       label: t('Your Profile'),\n  //       href: '/profile',\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: t('Info'),\n  //   icon: 'InfoIcon',\n  //   href: 'https://docs.onemoon.io',\n  // },\n  // {\n  //   label: t('IFO'),\n  //   icon: 'IfoIcon',\n  //   href: '/ifo',\n  // },\n  {\n    label: t('More'),\n    icon: 'MoreIcon',\n    items: [\n      {\n        label: t('Docs'),\n        href: 'https://docs.onemoon.io',\n      },\n      {\n        label: t('Discord'),\n        href: 'https://discord.com/invite/VGdvuBHEyq',\n      },\n      \n      {\n        label: t('Github'),\n        href: 'https://github.com/mochiswap',\n      },\n   \n      // {\n      //   label: t('Merch'),\n      //   href: 'https://mochiswag.com/',\n      // },\n    ],\n  },\n]\n\nexport default config\n","import React, { useState } from 'react'\nimport { Box, CopyIcon, Flex, FlexProps, IconButton } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface CopyAddressProps extends FlexProps {\n  account: string\n}\n\nconst Wrapper = styled(Flex)`\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors.dropdown};\n  border-radius: 16px;\n  position: relative;\n`\n\nconst Address = styled.div`\n  flex: 1;\n  position: relative;\n  padding-left: 16px;\n\n  & > input {\n    background: transparent;\n    border: 0;\n    color: ${({ theme }) => theme.colors.text};\n    display: block;\n    font-weight: 600;\n    font-size: 16px;\n    padding: 0;\n    width: 100%;\n\n    &:focus {\n      outline: 0;\n    }\n  }\n\n  &:after {\n    background: linear-gradient(\n      to right,\n      ${({ theme }) => theme.colors.background}00,\n      ${({ theme }) => theme.colors.background}E6\n    );\n    content: '';\n    height: 100%;\n    pointer-events: none;\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 40px;\n  }\n`\n\nconst Tooltip = styled.div<{ isTooltipDisplayed: boolean }>`\n  display: ${({ isTooltipDisplayed }) => (isTooltipDisplayed ? 'inline-block' : 'none')};\n  position: absolute;\n  padding: 8px;\n  top: -38px;\n  right: 0;\n  text-align: center;\n  background-color: ${({ theme }) => theme.colors.contrast};\n  color: ${({ theme }) => theme.colors.invertedContrast};\n  border-radius: 16px;\n  opacity: 0.7;\n  width: 100px;\n`\n\nconst CopyAddress: React.FC<CopyAddressProps> = ({ account, ...props }) => {\n  const [isTooltipDisplayed, setIsTooltipDisplayed] = useState(false)\n  const { t } = useTranslation()\n\n  const copyAddress = () => {\n    if (navigator.clipboard && navigator.permissions) {\n      navigator.clipboard.writeText(account).then(() => displayTooltip())\n    } else if (document.queryCommandSupported('copy')) {\n      const ele = document.createElement('textarea')\n      ele.value = account\n      document.body.appendChild(ele)\n      ele.select()\n      document.execCommand('copy')\n      document.body.removeChild(ele)\n      displayTooltip()\n    }\n  }\n\n  function displayTooltip() {\n    setIsTooltipDisplayed(true)\n    setTimeout(() => {\n      setIsTooltipDisplayed(false)\n    }, 1000)\n  }\n\n  return (\n    <Box position=\"relative\" {...props}>\n      <Wrapper>\n        <Address title={account}>\n          <input type=\"text\" readOnly value={account} />\n        </Address>\n        <IconButton variant=\"text\" onClick={copyAddress}>\n          <CopyIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n      </Wrapper>\n      <Tooltip isTooltipDisplayed={isTooltipDisplayed}>{t('Copied')}</Tooltip>\n    </Box>\n  )\n}\n\nexport default CopyAddress\n","import React from 'react'\nimport { Box, Button, Flex, InjectedModalProps, LinkExternal, Message, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport useTokenBalance, { useGetBnbBalance } from 'hooks/useTokenBalance'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBscScanLink } from 'utils'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport CopyAddress from './CopyAddress'\n\ninterface WalletInfoProps {\n  hasLowBnbBalance: boolean\n  onDismiss: InjectedModalProps['onDismiss']\n}\n\nconst WalletInfo: React.FC<WalletInfoProps> = ({ hasLowBnbBalance, onDismiss }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { balance } = useGetBnbBalance()\n  const { balance: cakeBalance } = useTokenBalance(getCakeAddress())\n  const { logout } = useAuth()\n\n  const handleLogout = () => {\n    onDismiss()\n    logout()\n  }\n\n  return (\n    <>\n      <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\" mb=\"8px\">\n        {t('Your Address')}\n      </Text>\n      <CopyAddress account={account} mb=\"24px\" />\n      {hasLowBnbBalance && (\n        <Message variant=\"warning\" mb=\"24px\">\n          <Box>\n            <Text fontWeight=\"bold\">{t('ONE Balance Low')}</Text>\n            <Text as=\"p\">{t('You need ONE for transaction fees.')}</Text>\n          </Box>\n        </Message>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text color=\"textSubtle\">{t('ONE Balance')}</Text>\n        <Text>{getFullDisplayBalance(balance, 18, 6)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text color=\"textSubtle\">{t('hMOCHI Balance')}</Text>\n        <Text>{getFullDisplayBalance(cakeBalance, 18, 3)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"end\" mb=\"24px\">\n        <LinkExternal href={getBscScanLink(account, 'address')}>{t('View on Explorer')}</LinkExternal>\n      </Flex>\n      <Button variant=\"secondary\" width=\"100%\" onClick={handleLogout}>\n        {t('Disconnect Wallet')}\n      </Button>\n    </>\n  )\n}\n\nexport default WalletInfo\n","import React from 'react'\nimport { BlockIcon, CheckmarkCircleIcon, Flex, Link, OpenNewIcon, RefreshIcon } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\n\ninterface TransactionRowProps {\n  txn: TransactionDetails\n}\n\nconst TxnIcon = styled(Flex)`\n  align-items: center;\n  flex: none;\n  width: 24px;\n`\n\nconst Summary = styled.div`\n  flex: 1;\n  padding: 0 8px;\n`\n\nconst TxnLink = styled(Link)`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  margin-bottom: 16px;\n  width: 100%;\n\n  &:hover {\n    text-decoration: none;\n  }\n`\n\nconst renderIcon = (txn: TransactionDetails) => {\n  if (!txn.receipt) {\n    return <RefreshIcon spin width=\"24px\" />\n  }\n\n  return txn.receipt?.status === 1 || typeof txn.receipt?.status === 'undefined' ? (\n    <CheckmarkCircleIcon color=\"success\" width=\"24px\" />\n  ) : (\n    <BlockIcon color=\"failure\" width=\"24px\" />\n  )\n}\n\nconst TransactionRow: React.FC<TransactionRowProps> = ({ txn }) => {\n  const { chainId } = useActiveWeb3React()\n\n  if (!txn) {\n    return null\n  }\n\n  return (\n    <TxnLink href={getBscScanLink(txn.hash, 'transaction', chainId)} external>\n      <TxnIcon>{renderIcon(txn)}</TxnIcon>\n      <Summary>{txn.summary ?? txn.hash}</Summary>\n      <TxnIcon>\n        <OpenNewIcon width=\"24px\" color=\"primary\" />\n      </TxnIcon>\n    </TxnLink>\n  )\n}\n\nexport default TransactionRow\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Box, Button, Flex, Text } from '@pancakeswap/uikit'\nimport { AppDispatch } from 'state'\nimport { useAllTransactions } from 'state/transactions/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { orderBy } from 'lodash'\nimport TransactionRow from './TransactionRow'\n\nconst WalletTransactions: React.FC = () => {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const { t } = useTranslation()\n  const allTransactions = useAllTransactions()\n  const sortedTransactions = orderBy(allTransactions, 'addedTime', 'desc')\n\n  const handleClearAll = () => {\n    if (chainId) {\n      dispatch(clearAllTransactions({ chainId }))\n    }\n  }\n\n  return (\n    <Box minHeight=\"120px\">\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\">\n          {t('Recent Transactions')}\n        </Text>\n        {sortedTransactions.length > 0 && (\n          <Button scale=\"sm\" onClick={handleClearAll} variant=\"text\" px=\"0\">\n            {t('Clear all')}\n          </Button>\n        )}\n      </Flex>\n      {sortedTransactions.length > 0 ? (\n        sortedTransactions.map((txn) => <TransactionRow key={txn.hash} txn={txn} />)\n      ) : (\n        <Text textAlign=\"center\">{t('No recent transactions')}</Text>\n      )}\n    </Box>\n  )\n}\n\nexport default WalletTransactions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\n\nexport enum ViewMode {\n  'TABLE' = 'TABLE',\n  'CARD' = 'CARD',\n}\n\ninterface ToggleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-right: 0px;\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n    margin-right: 16px;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import React from 'react'\nimport { Flex, UserMenuItem, WarningIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface WalletUserMenuItemProps {\n  hasLowBnbBalance: boolean\n  onPresentWalletModal: () => void\n}\n\nconst WalletUserMenuItem: React.FC<WalletUserMenuItemProps> = ({ hasLowBnbBalance, onPresentWalletModal }) => {\n  const { t } = useTranslation()\n\n  return (\n    <UserMenuItem as=\"button\" onClick={onPresentWalletModal}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n        {t('Wallet')}\n        {hasLowBnbBalance && <WarningIcon color=\"warning\" width=\"24px\" />}\n      </Flex>\n    </UserMenuItem>\n  )\n}\n\nexport default WalletUserMenuItem\n","import React from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport {\n  Flex,\n  LogoutIcon,\n  useModal,\n  UserMenu as UIKitUserMenu,\n  UserMenuDivider,\n  UserMenuItem,\n} from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useProfile } from 'state/profile/hooks'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport WalletModal, { WalletView, LOW_BNB_BALANCE } from './WalletModal'\nimport ProfileUserMenuItem from './ProfileUserMenutItem'\nimport WalletUserMenuItem from './WalletUserMenuItem'\n\nconst UserMenu = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { logout } = useAuth()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const { isInitialized, isLoading, profile } = useProfile()\n  const [onPresentWalletModal] = useModal(<WalletModal initialView={WalletView.WALLET_INFO} />)\n  const [onPresentTransactionModal] = useModal(<WalletModal initialView={WalletView.TRANSACTIONS} />)\n  const hasProfile = isInitialized && !!profile\n  const avatarSrc = profile && profile.nft ? `/images/nfts/${profile.nft.images.sm}` : undefined\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\n\n  if (!account) {\n    return <ConnectWalletButton scale=\"sm\" />\n  }\n\n  return (\n    <UIKitUserMenu account={account} avatarSrc={avatarSrc}>\n      <WalletUserMenuItem hasLowBnbBalance={hasLowBnbBalance} onPresentWalletModal={onPresentWalletModal} />\n      <UserMenuItem as=\"button\" onClick={onPresentTransactionModal}>\n        {t('Transactions')}\n      </UserMenuItem>\n      {/* <UserMenuDivider />\n      <ProfileUserMenuItem isLoading={isLoading} hasProfile={hasProfile} />\n      <UserMenuDivider /> */}\n      <UserMenuItem as=\"button\" onClick={logout}>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n          {t('Disconnect')}\n          <LogoutIcon />\n        </Flex>\n      </UserMenuItem>\n    </UIKitUserMenu>\n  )\n}\n\nexport default UserMenu\n","import React from 'react'\nimport { Menu as UikitMenu } from '@pancakeswap/uikit'\nimport { languageList } from 'config/localization/languages'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\n// import { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeBusdPrice } from 'hooks/useBUSDPrice'\nimport { useProfile } from 'state/profile/hooks'\nimport config from './config'\nimport UserMenu from './UserMenu'\nimport GlobalSettings from './GlobalSettings'\n\nconst Menu = (props) => {\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = useCakeBusdPrice()\n  \n  const { profile } = useProfile()\n  const { currentLanguage, setLanguage, t } = useTranslation()\n\n  return (\n    <UikitMenu\n      userMenu={<UserMenu />}\n      globalMenu={<GlobalSettings />}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={currentLanguage.code}\n      langs={languageList}\n      setLang={setLanguage}\n      cakePriceUsd={cakePriceUsd}\n      links={config(t)}\n      profile={{\n        username: profile?.username,\n        image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\n        profileLink: '/profile',\n        noProfileLink: '/profile',\n        showPip: !profile?.username,\n      }}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from 'hooks/useRefresh'\nimport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  fetchPoolsStakingLimitsAsync,\n} from '.'\nimport { State, Pool } from '../types'\nimport { transformPool } from './helpers'\n\nexport const useFetchPublicPoolsData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchPoolsPublicData = async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\n    }\n\n    fetchPoolsPublicData()\n    dispatch(fetchPoolsStakingLimitsAsync())\n  }, [dispatch, slowRefresh])\n}\n\nexport const usePools = (account): { pools: Pool[]; userDataLoaded: boolean } => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\n    pools: state.pools.data,\n    userDataLoaded: state.pools.userDataLoaded,\n  }))\n  return { pools: pools.map(transformPool), userDataLoaded }\n}\n\nexport const useFetchCakeVault = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultPublicData())\n  }, [dispatch, fastRefresh])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultUserData({ account }))\n  }, [dispatch, fastRefresh, account])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultFees())\n  }, [dispatch])\n}\n\nexport const useCakeVault = () => {\n  const {\n    totalShares: totalSharesAsString,\n    pricePerFullShare: pricePerFullShareAsString,\n    totalCakeInVault: totalCakeInVaultAsString,\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\n    userData: {\n      isLoading,\n      userShares: userSharesAsString,\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  } = useSelector((state: State) => state.pools.cakeVault)\n    \n  const estimatedCakeBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyRewardAsString)\n  }, [estimatedCakeBountyRewardAsString])\n\n  const totalPendingCakeHarvest = useMemo(() => {\n    return new BigNumber(totalPendingCakeHarvestAsString)\n  }, [totalPendingCakeHarvestAsString])\n\n  const totalShares = useMemo(() => {\n    return new BigNumber(totalSharesAsString)\n  }, [totalSharesAsString])\n\n  const pricePerFullShare = useMemo(() => {\n    return new BigNumber(pricePerFullShareAsString)\n  }, [pricePerFullShareAsString])\n\n  const totalCakeInVault = useMemo(() => {\n    return new BigNumber(totalCakeInVaultAsString)\n  }, [totalCakeInVaultAsString])\n\n  const userShares = useMemo(() => {\n    return new BigNumber(userSharesAsString)\n  }, [userSharesAsString])\n\n  const cakeAtLastUserAction = useMemo(() => {\n    return new BigNumber(cakeAtLastUserActionAsString)\n  }, [cakeAtLastUserActionAsString])\n\n  return {\n    totalShares,\n    pricePerFullShare,\n    totalCakeInVault,\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: {\n      performanceFee,\n      callFee,\n      withdrawalFee,\n      withdrawalFeePeriod,\n    },\n    userData: {\n      isLoading,\n      userShares,\n      cakeAtLastUserAction,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { Pool } from 'state/types'\nimport { getAprData } from 'views/Pools/helpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nconst ApyLabelContainer = styled(Flex)`\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.5;\n  }\n`\n\ninterface AprRowProps {\n  pool: Pool\n  stakedBalance: BigNumber\n  performanceFee?: number\n}\nconst AprRow: React.FC<AprRowProps> = ({ pool, stakedBalance, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, stakingTokenPrice, userData, isAutoVault } =\n    pool\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s hMOCHI is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n\n  const { apr: earningsPercentageToDisplay, autoCompoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${stakingToken.address}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <RoiCalculatorModal\n      earningTokenPrice={earningTokenPrice}\n      stakingTokenPrice={stakingTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      stakingTokenBalance={stakedBalance.plus(stakingTokenBalance)}\n      stakingTokenSymbol={stakingToken.symbol}\n      earningTokenSymbol={earningToken.symbol}\n      autoCompoundFrequency={autoCompoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {earningsPercentageToDisplay || isFinished ? (\n        <ApyLabelContainer alignItems=\"center\" onClick={onPresentApyModal}>\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={isFinished ? 0 : earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n            onClick={onPresentApyModal}\n          />\n          {!isFinished && (\n            <IconButton variant=\"text\" scale=\"sm\">\n              <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n            </IconButton>\n          )}\n        </ApyLabelContainer>\n      ) : (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const StyledCard = styled(Card)<{ isFinished?: boolean }>`\n  max-width: 352px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport default StyledCard\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n  Link,\n  HelpIcon,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBscScanLink } from 'utils'\nimport Balance from 'components/Balance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\n\ninterface ExpandedFooterProps {\n  pool: Pool\n  account: string\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const {\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    sousId,\n    isAutoVault,\n  } = pool\n\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked && totalStaked.gte(0) ? (\n            <>\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n              <span ref={totalStakedTargetRef}>\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\n              </span>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n          {totalStakedTooltipVisible && totalStakedTooltip}\n        </Flex>\n      </Flex>\n      {stakingLimit && stakingLimit.gt(0) && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\n          <Text small>{t('Max. stake per user')}:</Text>\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n        </Flex>\n      )}\n      {shouldShowBlockCountdown && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Text small>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n          {blocksRemaining || blocksUntilStart ? (\n            <Flex alignItems=\"center\">\n              <Link external href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}>\n                <Balance small value={blocksToDisplay} decimals={0} color=\"primary\" />\n                <Text small ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n                  {t('Blocks')}\n                </Text>\n                <TimerIcon ml=\"4px\" color=\"primary\" />\n              </Link>\n            </Flex>\n          ) : (\n            <Skeleton width=\"54px\" height=\"21px\" />\n          )}\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            <Text ml=\"4px\" small>\n              {performanceFee / 100}%\n            </Text>\n          </Flex>\n        </Flex>\n      )}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={`https://explorer.harmony.one/token/${getAddress(earningToken.address)}`} bold={false} small>\n          {t('See Token Info')}\n        </LinkExternal>\n      </Flex>\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n            bold={false}\n            small\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: Pool\n  account: string\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\n  const { isAutoVault } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { TokenPairImage, ImageProps } from '@pancakeswap/uikit'\nimport tokens from 'config/constants/tokens'\nimport { getAddress } from 'utils/addressHelpers'\n\nconst CakeVaultTokenPairImage: React.FC<Omit<ImageProps, 'src'>> = (props) => {\n  const primaryTokenSrc = `/images/tokens/${getAddress(tokens.hmochi.address)}.svg`\n\n  return <TokenPairImage primarySrc={primaryTokenSrc} secondarySrc=\"/images/tokens/autorenew.svg\" {...props} />\n}\n\nexport default CakeVaultTokenPairImage\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Token } from 'config/constants/types'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../CakeVaultCard/CakeVaultTokenPairImage'\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n`\n\nconst StyledCardHeader: React.FC<{\n  earningToken: Token\n  stakingToken: Token\n  isAutoVault?: boolean\n  isFinished?: boolean\n  isStaking?: boolean\n}> = ({ earningToken, stakingToken, isFinished = false, isAutoVault = false, isStaking = false }) => {\n  const { t } = useTranslation()\n  const isCakePool = earningToken.symbol === 'MOCHI' && stakingToken.symbol === 'MOCHI'\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\n\n  const getHeadingPrefix = () => {\n    if (isAutoVault) {\n      // vault\n      return t('Auto')\n    }\n    if (isCakePool) {\n      // manual cake\n      return t('Manual')\n    }\n    // all other pools\n    return t('Earn')\n  }\n\n  const getSubHeading = () => {\n    if (isAutoVault) {\n      return t('Automatic restaking')\n    }\n    if (isCakePool) {\n      return t('Earn MOCHI, stake MOCHI')\n    }\n    return t('Stake %symbol%', { symbol: stakingToken.symbol })\n  }\n\n  return (\n    <Wrapper isFinished={isFinished} background={background}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Flex flexDirection=\"column\">\n          <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"lg\">\n            {`${getHeadingPrefix()} ${earningToken.symbol}`}\n          </Heading>\n          <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\n        </Flex>\n        {isAutoVault ? (\n          <CakeVaultTokenPairImage width={64} height={64} />\n        ) : (\n          <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} width={64} height={64} />\n        )}\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers, Contract } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useSousChef, useCakeVaultContract } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport useLastUpdated from 'hooks/useLastUpdated'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\n\nexport const useApprovePool = (lpContract: Contract, sousId, earningTokenSymbol) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const tx = await callWithGasPrice(lpContract, 'approve', [sousChefContract.address, ethers.constants.MaxUint256])\n      const receipt = await tx.wait()\n\n      dispatch(updateUserAllowance(sousId, account))\n      if (receipt.status) {\n        toastSuccess(\n          t('Contract Enabled'),\n          t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol }),\n        )\n        setRequestedApproval(false)\n      } else {\n        // user rejected tx or didn't go thru\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n    }\n  }, [\n    account,\n    dispatch,\n    lpContract,\n    sousChefContract,\n    sousId,\n    earningTokenSymbol,\n    t,\n    toastError,\n    toastSuccess,\n    callWithGasPrice,\n  ])\n\n  return { handleApprove, requestedApproval }\n}\n\n// Approve hMOCHI auto pool\nexport const useVaultApprove = (setLastUpdated: () => void) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { t } = useTranslation()\n  const { toastSuccess, toastError } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const cakeContract = useCake()\n\n  const handleApprove = async () => {\n    const tx = await callWithGasPrice(cakeContract, 'approve', [cakeVaultContract.address, ethers.constants.MaxUint256])\n    setRequestedApproval(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      toastSuccess(t('Contract Enabled'), t('You can now stake in the %symbol% vault!', { symbol: 'hMOCHI' }))\n      setLastUpdated()\n      setRequestedApproval(false)\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setRequestedApproval(false)\n    }\n  }\n\n  return { handleApprove, requestedApproval }\n}\n\nexport const useCheckVaultApprovalStatus = () => {\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cakeVaultContract = useCakeVaultContract()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      try {\n        const response = await cakeContract.allowance(account, cakeVaultContract.address)\n        const currentAllowance = new BigNumber(response.toString())\n        setIsVaultApproved(currentAllowance.gt(0))\n      } catch (error) {\n        setIsVaultApproved(false)\n      }\n    }\n\n    checkApprovalStatus()\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\n\n  return { isVaultApproved, setLastUpdated }\n}\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport { Pool } from 'state/types'\nimport { useApprovePool } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  pool: Pool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href=\"/swap\">\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      {/* <StyledLink href=\"https://yieldwatch.net\" external>\n        <Button variant=\"secondary\" mt=\"8px\" width=\"100%\">\n          {t('Locate Assets')}\n          <OpenNewIcon color=\"primary\" ml=\"4px\" />\n        </Button>\n      </StyledLink> */}\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stakeFarm } from 'utils/calls'\nimport BigNumber from 'bignumber.js'\nimport { DEFAULT_TOKEN_DECIMAL, DEFAULT_GAS_LIMIT } from 'config'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport getGasPrice from 'utils/getGasPrice'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst sousStake = async (sousChefContract, amount, decimals = 18) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString(), {\n    ...options,\n    gasPrice,\n  })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousStakeBnb = async (sousChefContract, amount) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString(), {\n    ...options,\n    gasPrice,\n  })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useStakePool = (sousId: number, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stakeFarm(masterChefContract, 0, amount)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount)\n      } else {\n        await sousStake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStakePool\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { unstakeFarm } from 'utils/calls'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport getGasPrice from 'utils/getGasPrice'\n\nconst sousUnstake = async (sousChefContract, amount, decimals) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString(), {\n    gasPrice,\n  })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousEmergencyUnstake = async (sousChefContract) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.emergencyWithdraw({ gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useUnstakePool = (sousId, enableEmergencyWithdraw = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await unstakeFarm(masterChefContract, 0, amount)\n      } else if (enableEmergencyWithdraw) {\n        await sousEmergencyUnstake(sousChefContract)\n      } else {\n        await sousUnstake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstakePool\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport {\n  Modal,\n  Text,\n  Flex,\n  Image,\n  Button,\n  Slider,\n  BalanceInput,\n  AutoRenewIcon,\n  Link,\n  CalculateIcon,\n  IconButton,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getInterestBreakdown } from 'utils/compoundApyHelpers'\nimport PercentageButton from './PercentageButton'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useUnstakePool from '../../../hooks/useUnstakePool'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst AnnualRoiContainer = styled(Flex)`\n  cursor: pointer;\n`\n\nconst AnnualRoiDisplay = styled(Text)`\n  width: 72px;\n  max-width: 72px;\n  overflow: hidden;\n  text-align: right;\n  text-overflow: ellipsis;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, earningTokenPrice, apr, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const [showRoiCalculator, setShowRoiCalculator] = useState(false)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n\n  const usdValueStaked = new BigNumber(stakeAmount).times(stakingTokenPrice)\n  const formattedUsdValueStaked = !usdValueStaked.isNaN() && formatNumber(usdValueStaked.toNumber())\n\n  const interestBreakdown = getInterestBreakdown({\n    principalInUSD: !usdValueStaked.isNaN() ? usdValueStaked.toNumber() : 0,\n    apr,\n    earningTokenPrice,\n  })\n  const annualRoi = interestBreakdown[3] * pool.earningTokenPrice\n  const formattedAnnualRoi = formatNumber(annualRoi, annualRoi > 10000 ? 0 : 2, annualRoi > 10000 ? 0 : 2)\n\n  const getTokenLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  if (showRoiCalculator) {\n    return (\n      <RoiCalculatorModal\n        earningTokenPrice={earningTokenPrice}\n        stakingTokenPrice={stakingTokenPrice}\n        apr={apr}\n        linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n        linkHref={getTokenLink}\n        stakingTokenBalance={userData.stakedBalance.plus(stakingTokenBalance)}\n        stakingTokenSymbol={stakingToken.symbol}\n        earningTokenSymbol={earningToken.symbol}\n        onBack={() => setShowRoiCalculator(false)}\n        initialValue={stakeAmount}\n      />\n    )\n  }\n\n  return (\n    <Modal\n      minWidth=\"346px\"\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${formattedUsdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      {!isRemovingStake && (\n        <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Text mr=\"8px\" color=\"textSubtle\">\n            {t('Annual ROI at current rates')}:\n          </Text>\n          <AnnualRoiContainer alignItems=\"center\" onClick={() => setShowRoiCalculator(true)}>\n            <AnnualRoiDisplay>${formattedAnnualRoi}</AnnualRoiDisplay>\n            <IconButton variant=\"text\" scale=\"sm\">\n              <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n            </IconButton>\n          </AnnualRoiContainer>\n        </Flex>\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href={getTokenLink}>\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\n\ninterface StakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { harvestFarm } from 'utils/calls'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport getGasPrice from 'utils/getGasPrice'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport { DEFAULT_GAS_LIMIT } from 'config'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst harvestPool = async (sousChefContract) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit('0', { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst harvestPoolBnb = async (sousChefContract) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit({ ...options, value: BIG_ZERO, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useHarvestPool = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvestFarm(masterChefContract, 0)\n    } else if (isUsingBnb) {\n      await harvestPoolBnb(sousChefContract)\n    } else {\n      await harvestPool(sousChefContract)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvestPool\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { Token } from 'config/constants/types'\nimport { formatNumber } from 'utils/formatBalance'\nimport useHarvestPool from '../../../hooks/useHarvestPool'\nimport useStakePool from '../../../hooks/useStakePool'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: number\n  sousId: number\n  isBnbPool: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useHarvestPool(sousId, isBnbPool)\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake hMOCHI into pool.')}</Text>\n      <Text>{t('Harvest: collect hMOCHI and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          {earningsDollarValue > 0 && (\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\n          )}\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n        {isCompoundPool ? t('Collect') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={earningTokenPrice}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\nimport AprRow from './AprRow'\nimport { StyledCard } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard: React.FC<{ pool: Pool; account: string }> = ({ pool, account }) => {\n  const { sousId, stakingToken, earningToken, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <StyledCardHeader\n        isStaking={accountHasStakedBalance}\n        earningToken={earningToken}\n        stakingToken={stakingToken}\n        isFinished={isFinished && sousId !== 0}\n      />\n      <CardBody>\n        <AprRow pool={pool} stakedBalance={stakedBalance} />\n        <Flex mt=\"24px\" flexDirection=\"column\">\n          {account ? (\n            <CardActions pool={pool} stakedBalance={stakedBalance} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </CardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default PoolCard\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useVaultApprove } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  setLastUpdated: () => void\n  isLoading?: boolean\n}\n\nconst VaultApprovalAction: React.FC<ApprovalActionProps> = ({ isLoading = false, setLastUpdated }) => {\n  const { t } = useTranslation()\n\n  const { handleApprove, requestedApproval } = useVaultApprove(setLastUpdated)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default VaultApprovalAction\n","import BigNumber from 'bignumber.js'\nimport { useEffect, useState } from 'react'\n\nconst useWithdrawalFeeTimer = (lastDepositedTime: number, userShares: BigNumber, withdrawalFeePeriod = 259200) => {\n  const [secondsRemaining, setSecondsRemaining] = useState(null)\n  const [hasUnstakingFee, setHasUnstakingFee] = useState(false)\n  const [currentSeconds, setCurrentSeconds] = useState(Math.floor(Date.now() / 1000))\n\n  useEffect(() => {\n    const feeEndTime = lastDepositedTime + withdrawalFeePeriod\n    const secondsRemainingCalc = feeEndTime - currentSeconds\n    const doesUnstakingFeeApply = userShares.gt(0) && secondsRemainingCalc > 0\n\n    const tick = () => {\n      setCurrentSeconds((prevSeconds) => prevSeconds + 1)\n    }\n    const timerInterval = setInterval(() => tick(), 1000)\n    if (doesUnstakingFeeApply) {\n      setSecondsRemaining(secondsRemainingCalc)\n      setHasUnstakingFee(true)\n    } else {\n      setHasUnstakingFee(false)\n      clearInterval(timerInterval)\n    }\n\n    return () => clearInterval(timerInterval)\n  }, [lastDepositedTime, withdrawalFeePeriod, setSecondsRemaining, currentSeconds, userShares])\n\n  return { hasUnstakingFee, secondsRemaining }\n}\n\nexport default useWithdrawalFeeTimer\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { useTranslation } from 'contexts/Localization'\n\nconst WithdrawalFeeTimer: React.FC<{ secondsRemaining: number }> = ({ secondsRemaining }) => {\n  const { t } = useTranslation()\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\n\n  return <Text fontSize=\"14px\">{t('%day%d : %hour%h : %minute%m', { day: days, hour: hours, minute: minutes })}</Text>\n}\n\nexport default WithdrawalFeeTimer\n","import React from 'react'\nimport { Flex, Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport { useCakeVault } from 'state/pools/hooks'\nimport WithdrawalFeeTimer from './WithdrawalFeeTimer'\n\ninterface UnstakingFeeCountdownRowProps {\n  isTableVariant?: boolean\n}\n\nconst UnstakingFeeCountdownRow: React.FC<UnstakingFeeCountdownRowProps> = ({ isTableVariant }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { lastDepositedTime, userShares },\n    fees: { withdrawalFee, withdrawalFeePeriod },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100 || '-'\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new hMOCHI in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'bottom-start' },\n  )\n\n  const { secondsRemaining, hasUnstakingFee } = useWithdrawalFeeTimer(\n    parseInt(lastDepositedTime, 10),\n    userShares,\n    withdrawalFeePeriod,\n  )\n\n  // The user has made a deposit, but has no fee\n  const noFeeToPay = lastDepositedTime && !hasUnstakingFee && userShares.gt(0)\n\n  // Show the timer if a user is connected, has deposited, and has an unstaking fee\n  const shouldShowTimer = account && lastDepositedTime && hasUnstakingFee\n\n  const getRowText = () => {\n    if (noFeeToPay) {\n      return t('Unstaking Fee').toLowerCase()\n    }\n    if (shouldShowTimer) {\n      return t('unstaking fee until')\n    }\n    return t('unstaking fee if withdrawn within 72h')\n  }\n\n  return (\n    <Flex\n      alignItems={isTableVariant ? 'flex-start' : 'center'}\n      justifyContent=\"space-between\"\n      flexDirection={isTableVariant ? 'column' : 'row'}\n    >\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        {noFeeToPay ? '0' : feeAsDecimal}% {getRowText()}\n      </TooltipText>\n      {shouldShowTimer && <WithdrawalFeeTimer secondsRemaining={secondsRemaining} />}\n    </Flex>\n  )\n}\n\nexport default UnstakingFeeCountdownRow\n","import React from 'react'\nimport { Text, Flex, useTooltip, TooltipText } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\n\ninterface FeeSummaryProps {\n  stakingTokenSymbol: string\n  stakeAmount: string\n}\n\nconst FeeSummary: React.FC<FeeSummaryProps> = ({ stakingTokenSymbol, stakeAmount }) => {\n  const { t } = useTranslation()\n  const {\n    fees: { withdrawalFee },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new hMOCHI in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'top-start' },\n  )\n\n  return (\n    <>\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n        {tooltipVisible && tooltip}\n        <TooltipText ref={targetRef} small>\n          {t('Unstaking Fee')}\n        </TooltipText>\n        <Text fontSize=\"14px\">\n          {stakeAmount ? feeInCake : '-'} {stakingTokenSymbol}\n        </Text>\n      </Flex>\n      <UnstakingFeeCountdownRow />\n    </>\n  )\n}\n\nexport default FeeSummary\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport {\n  Modal,\n  Text,\n  Flex,\n  Image,\n  Button,\n  Slider,\n  BalanceInput,\n  AutoRenewIcon,\n  CalculateIcon,\n  IconButton,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\nimport { fetchCakeVaultUserData } from 'state/pools'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getInterestBreakdown } from 'utils/compoundApyHelpers'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport { convertCakeToShares, convertSharesToCake } from '../../helpers'\nimport FeeSummary from './FeeSummary'\n\ninterface VaultStakeModalProps {\n  pool: Pool\n  stakingMax: BigNumber\n  performanceFee?: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst AnnualRoiContainer = styled(Flex)`\n  cursor: pointer;\n`\n\nconst AnnualRoiDisplay = styled(Text)`\n  width: 72px;\n  max-width: 72px;\n  overflow: hidden;\n  text-align: right;\n  text-overflow: ellipsis;\n`\n\nconst callOptions = {\n  gasLimit: 380000,\n}\n\nconst VaultStakeModal: React.FC<VaultStakeModalProps> = ({\n  pool,\n  stakingMax,\n  performanceFee,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const dispatch = useAppDispatch()\n  const { stakingToken, earningToken, apr, stakingTokenPrice, earningTokenPrice } = pool\n  const { account } = useWeb3React()\n  const cakeVaultContract = useCakeVaultContract()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const {\n    userData: { lastDepositedTime, userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [percent, setPercent] = useState(0)\n  const [showRoiCalculator, setShowRoiCalculator] = useState(false)\n  const { hasUnstakingFee } = useWithdrawalFeeTimer(parseInt(lastDepositedTime, 10), userShares)\n  const cakePriceBusd = usePriceCakeBusd()\n  const usdValueStaked = new BigNumber(stakeAmount).times(cakePriceBusd)\n  const formattedUsdValueStaked = cakePriceBusd.gt(0) && stakeAmount ? formatNumber(usdValueStaked.toNumber()) : ''\n\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n\n  const interestBreakdown = getInterestBreakdown({\n    principalInUSD: !usdValueStaked.isNaN() ? usdValueStaked.toNumber() : 0,\n    apr,\n    earningTokenPrice,\n    performanceFee,\n  })\n  const annualRoi = interestBreakdown[3] * pool.earningTokenPrice\n  const formattedAnnualRoi = formatNumber(annualRoi, annualRoi > 10000 ? 0 : 2, annualRoi > 10000 ? 0 : 2)\n\n  const getTokenLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals))\n      const percentage = Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber())\n      setPercent(percentage > 100 ? 100 : percentage)\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = stakingMax.dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleWithdrawal = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    const shareStakeToWithdraw = convertCakeToShares(convertedStakeAmount, pricePerFullShare)\n    // trigger withdrawAll function if the withdrawal will leave 0.000001 hMOCHI or less\n    const triggerWithdrawAllThreshold = new BigNumber(1000000000000)\n    const sharesRemaining = userShares.minus(shareStakeToWithdraw.sharesAsBigNumber)\n    const isWithdrawingAll = sharesRemaining.lte(triggerWithdrawAllThreshold)\n\n    if (isWithdrawingAll) {\n      try {\n        const tx = await callWithGasPrice(cakeVaultContract, 'withdrawAll', undefined, callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      try {\n        const tx = await callWithGasPrice(\n          cakeVaultContract,\n          'withdraw',\n          [shareStakeToWithdraw.sharesAsBigNumber.toString()],\n          callOptions,\n        )\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  const handleDeposit = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    try {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      const tx = await callWithGasPrice(cakeVaultContract, 'deposit', [convertedStakeAmount.toString()], callOptions)\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(t('Staked!'), t('Your funds have been staked in the pool'))\n        setPendingTx(false)\n        onDismiss()\n        dispatch(fetchCakeVaultUserData({ account }))\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  const handleConfirmClick = async () => {\n    const convertedStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n    if (isRemovingStake) {\n      // unstaking\n      handleWithdrawal(convertedStakeAmount)\n    } else {\n      // staking\n      handleDeposit(convertedStakeAmount)\n    }\n  }\n\n  if (showRoiCalculator) {\n    return (\n      <RoiCalculatorModal\n        earningTokenPrice={earningTokenPrice}\n        stakingTokenPrice={stakingTokenPrice}\n        apr={apr}\n        linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n        linkHref={getTokenLink}\n        stakingTokenBalance={cakeAsBigNumber.plus(stakingMax)}\n        stakingTokenSymbol={stakingToken.symbol}\n        earningTokenSymbol={earningToken.symbol}\n        onBack={() => setShowRoiCalculator(false)}\n        initialValue={stakeAmount}\n        performanceFee={performanceFee}\n      />\n    )\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={cakePriceBusd.gt(0) && `~${formattedUsdValueStaked || 0} USD`}\n        decimals={stakingToken.decimals}\n      />\n      <Text mt=\"8px\" ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', { balance: getFullDisplayBalance(stakingMax, stakingToken.decimals) })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(25)}>\n          25%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(50)}>\n          50%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(75)}>\n          75%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(100)}>\n          {t('Max')}\n        </StyledButton>\n      </Flex>\n      {isRemovingStake && hasUnstakingFee && (\n        <FeeSummary stakingTokenSymbol={stakingToken.symbol} stakeAmount={stakeAmount} />\n      )}\n      {!isRemovingStake && (\n        <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Text mr=\"8px\" color=\"textSubtle\">\n            {t('Annual ROI at current rates')}:\n          </Text>\n          <AnnualRoiContainer alignItems=\"center\" onClick={() => setShowRoiCalculator(true)}>\n            <AnnualRoiDisplay>${formattedAnnualRoi}</AnnualRoiDisplay>\n            <IconButton variant=\"text\" scale=\"sm\">\n              <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n            </IconButton>\n          </AnnualRoiContainer>\n        </Flex>\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <Button mt=\"8px\" as=\"a\" external href={getTokenLink} variant=\"secondary\">\n          {t('Get %symbol%', { symbol: stakingToken.symbol })}\n        </Button>\n      )}\n    </Modal>\n  )\n}\n\nexport default VaultStakeModal\n","import React from 'react'\nimport { Flex, Text, IconButton, AddIcon, MinusIcon, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport { convertSharesToCake } from '../../../helpers'\nimport VaultStakeModal from '../VaultStakeModal'\n\ninterface HasStakeActionProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  performanceFee: number\n}\n\nconst HasSharesActions: React.FC<HasStakeActionProps> = ({ pool, stakingTokenBalance, performanceFee }) => {\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { stakingToken } = pool\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const cakePriceBusd = usePriceCakeBusd()\n  const stakedDollarValue = cakePriceBusd.gt(0)\n    ? getBalanceNumber(cakeAsBigNumber.multipliedBy(cakePriceBusd), stakingToken.decimals)\n    : 0\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(\n    <VaultStakeModal stakingMax={stakingTokenBalance} performanceFee={performanceFee} pool={pool} />,\n  )\n  const [onPresentUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\">\n        <Balance fontSize=\"20px\" bold value={cakeAsNumberBalance} decimals={5} />\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          {cakePriceBusd.gt(0) ? (\n            <Balance value={stakedDollarValue} fontSize=\"12px\" color=\"textSubtle\" decimals={2} prefix=\"~\" unit=\" USD\" />\n          ) : (\n            <Skeleton mt=\"1px\" height={16} width={64} />\n          )}\n        </Text>\n      </Flex>\n      <Flex>\n        <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n        <IconButton variant=\"secondary\" onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n          <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n        </IconButton>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default HasSharesActions\n","import React from 'react'\nimport { Flex, Button, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport VaultStakeModal from '../VaultStakeModal'\nimport HasSharesActions from './HasSharesActions'\n\ninterface VaultStakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  accountHasSharesStaked: boolean\n  performanceFee: number\n  isLoading?: boolean\n}\n\nconst VaultStakeActions: React.FC<VaultStakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  accountHasSharesStaked,\n  performanceFee,\n  isLoading = false,\n}) => {\n  const { stakingToken } = pool\n  const { t } = useTranslation()\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(\n    <VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} performanceFee={performanceFee} />,\n  )\n\n  const renderStakeAction = () => {\n    return accountHasSharesStaked ? (\n      <HasSharesActions pool={pool} stakingTokenBalance={stakingTokenBalance} performanceFee={performanceFee} />\n    ) : (\n      <Button onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>{t('Stake')}</Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default VaultStakeActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport VaultApprovalAction from './VaultApprovalAction'\nimport VaultStakeActions from './VaultStakeActions'\nimport { useCheckVaultApprovalStatus } from '../../../hooks/useApprove'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\nconst CakeVaultCardActions: React.FC<{\n  pool: Pool\n  accountHasSharesStaked: boolean\n  isLoading: boolean\n  performanceFee: number\n}> = ({ pool, accountHasSharesStaked, isLoading, performanceFee }) => {\n  const { stakingToken, userData } = pool\n  const { t } = useTranslation()\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        <Box display=\"inline\">\n          <InlineText\n            color={accountHasSharesStaked ? 'secondary' : 'textSubtle'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText\n            color={accountHasSharesStaked ? 'textSubtle' : 'secondary'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? t('Staked (compounding)') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {isVaultApproved ? (\n          <VaultStakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            accountHasSharesStaked={accountHasSharesStaked}\n            performanceFee={performanceFee}\n          />\n        ) : (\n          <VaultApprovalAction isLoading={isLoading} setLastUpdated={setLastUpdated} />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CakeVaultCardActions\n","import React from 'react'\nimport { Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\n\ninterface RecentCakeProfitBalanceProps {\n  cakeToDisplay: number\n  dollarValueToDisplay: number\n  dateStringToDisplay: string\n}\n\nconst RecentCakeProfitBalance: React.FC<RecentCakeProfitBalanceProps> = ({\n  cakeToDisplay,\n  dollarValueToDisplay,\n  dateStringToDisplay,\n}) => {\n  const { t } = useTranslation()\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={cakeToDisplay} decimals={3} bold unit=\" hMOCHI\" />\n      <Balance fontSize=\"16px\" value={dollarValueToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    {\n      placement: 'bottom-end',\n    },\n  )\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        <Balance fontSize=\"14px\" value={cakeToDisplay} />\n      </TooltipText>\n    </>\n  )\n}\n\nexport default RecentCakeProfitBalance\n","import React from 'react'\nimport { Flex, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport RecentCakeProfitBalance from './RecentCakeProfitBalance'\n\nconst RecentCakeProfitCountdownRow = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    pricePerFullShare,\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    cakePriceBusd.toNumber(),\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Text fontSize=\"14px\">{`${t('Recent hMOCHI profit')}:`}</Text>\n      {hasAutoEarnings && (\n        <RecentCakeProfitBalance\n          cakeToDisplay={autoCakeToDisplay}\n          dollarValueToDisplay={autoUsdToDisplay}\n          dateStringToDisplay={dateStringToDisplay}\n        />\n      )}\n    </Flex>\n  )\n}\n\nexport default RecentCakeProfitCountdownRow\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, CardBody, Flex, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport tokens from 'config/constants/tokens'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport AprRow from '../PoolCard/AprRow'\nimport { StyledCard } from '../PoolCard/StyledCard'\nimport CardFooter from '../PoolCard/CardFooter'\nimport StyledCardHeader from '../PoolCard/StyledCardHeader'\nimport VaultCardActions from './VaultCardActions'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\nimport RecentCakeProfitRow from './RecentCakeProfitRow'\n\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>`\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\n`\n\ninterface CakeVaultProps {\n  pool: Pool\n  showStakedOnly: boolean\n}\n\nconst CakeVaultCard: React.FC<CakeVaultProps> = ({ pool, showStakedOnly }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { userShares, isLoading: isVaultUserDataLoading },\n    fees: { performanceFee },\n    pricePerFullShare,\n  } = useCakeVault()\n  \n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n\n  const accountHasSharesStaked = userShares && userShares.gt(0)\n  const isLoading = !pool.userData || isVaultUserDataLoading\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  if (showStakedOnly && !accountHasSharesStaked) {\n    return null\n  }\n\n  return (\n    <StyledCard isActive>\n      <StyledCardHeader\n        isStaking={accountHasSharesStaked}\n        isAutoVault\n        earningToken={tokens.hmochi}\n        stakingToken={tokens.hmochi}\n      />\n      <StyledCardBody isLoading={isLoading}>\n        <AprRow pool={pool} stakedBalance={cakeAsBigNumber} performanceFee={performanceFeeAsDecimal} />\n        <Box mt=\"24px\">\n          <RecentCakeProfitRow />\n        </Box>\n        <Box mt=\"8px\">\n          <UnstakingFeeCountdownRow />\n        </Box>\n        <Flex mt=\"32px\" flexDirection=\"column\">\n          {account ? (\n            <VaultCardActions\n              pool={pool}\n              accountHasSharesStaked={accountHasSharesStaked}\n              isLoading={isLoading}\n              performanceFee={performanceFeeAsDecimal}\n            />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </StyledCardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default CakeVaultCard\n","import React from 'react'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem, Toggle, Text, NotificationDot } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport ToggleView, { ViewMode } from './ToggleView/ToggleView'\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`\n\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools, viewMode, setViewMode }) => {\n  const { url, isExact } = useRouteMatch()\n  const { t } = useTranslation()\n\n  const viewModeToggle = <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n\n  const liveOrFinishedSwitch = (\n    <Wrapper>\n      <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {t('Live')}\n        </ButtonMenuItem>\n        <NotificationDot show={hasStakeInFinishedPools}>\n          <ButtonMenuItem as={Link} to={`${url}/history`}>\n            {t('Finished')}\n          </ButtonMenuItem>\n        </NotificationDot>\n      </ButtonMenu>\n    </Wrapper>\n  )\n\n  const stakedOnlySwitch = (\n    <ToggleWrapper>\n      <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale=\"sm\" />\n      <Text> {t('Staked only')}</Text>\n    </ToggleWrapper>\n  )\n\n  return (\n    <ViewControls>\n      {viewModeToggle}\n      {stakedOnlySwitch}\n      {liveOrFinishedSwitch}\n    </ViewControls>\n  )\n}\n\nexport default PoolTabButtons\n","import React, { useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Button, HelpIcon, AutoRenewIcon, useTooltip } from '@pancakeswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport Balance from 'components/Balance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\n\ninterface BountyModalProps {\n  onDismiss?: () => void\n  TooltipComponent: React.ElementType\n}\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\n  height: 1px;\n  margin: 16px auto;\n  width: 100%;\n`\n\nconst BountyModal: React.FC<BountyModalProps> = ({ onDismiss, TooltipComponent }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { theme } = useTheme()\n  const { toastError, toastSuccess } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const [pendingTx, setPendingTx] = useState(false)\n  const {\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: { callFee },\n  } = useCakeVault()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const cakePriceBusd = usePriceCakeBusd()\n  const callFeeAsDecimal = callFee / 100\n  const totalYieldToDisplay = getBalanceNumber(totalPendingCakeHarvest, 18)\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom',\n    tooltipPadding: { right: 15 },\n  })\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n    try {\n      const tx = await callWithGasPrice(cakeVaultContract, 'harvest', undefined, { gasLimit: 300000 })\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(t('Bounty collected!'), t('hMOCHI bounty has been sent to your wallet.'))\n        setPendingTx(false)\n        onDismiss()\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  return (\n    <Modal title={t('Claim Bounty')} onDismiss={onDismiss} headerBackground={theme.colors.gradients.cardHeader}>\n      {tooltipVisible && tooltip}\n      <Flex alignItems=\"flex-start\" justifyContent=\"space-between\">\n        <Text>{t('You’ll claim')}</Text>\n        <Flex flexDirection=\"column\">\n          <Balance bold value={cakeBountyToDisplay} decimals={7} unit=\" hMOCHI\" />\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            <Balance\n              fontSize=\"12px\"\n              color=\"textSubtle\"\n              value={dollarBountyToDisplay}\n              decimals={2}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Text>\n        </Flex>\n      </Flex>\n      <Divider />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Pool total pending yield')}\n        </Text>\n        <Balance color=\"textSubtle\" value={totalYieldToDisplay} unit=\" hMOCHI\" />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Bounty')}\n        </Text>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {callFeeAsDecimal}%\n        </Text>\n      </Flex>\n      {account ? (\n        <Button\n          isLoading={pendingTx}\n          disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n          endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          onClick={handleConfirmClick}\n          mb=\"28px\"\n          id=\"autoCakeConfirmBounty\"\n        >\n          {pendingTx ? t('Confirming') : t('Confirm')}\n        </Button>\n      ) : (\n        <ConnectWalletButton mb=\"28px\" />\n      )}\n      <Flex justifyContent=\"center\" alignItems=\"center\">\n        <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n          {t('What’s this?')}\n        </Text>\n        <span ref={targetRef}>\n          <HelpIcon color=\"textSubtle\" />\n        </span>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default BountyModal\n","import React, { useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardBody,\n  Text,\n  Flex,\n  HelpIcon,\n  Button,\n  Heading,\n  Skeleton,\n  useModal,\n  Box,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport Balance from 'components/Balance'\nimport BountyModal from './BountyModal'\n\nconst StyledCard = styled(Card)`\n  width: 100%;\n  flex: 1;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 240px;\n  }\n`\n\nconst BountyCard = () => {\n  const { t } = useTranslation()\n  const {\n    estimatedCakeBountyReward,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const TooltipComponent = ({ fee }: { fee: number }) => (\n    <>\n      <Text mb=\"16px\">{t('This bounty is given as a reward for providing a service to other users.')}</Text>\n      <Text mb=\"16px\">\n        {t(\n          'Whenever you successfully claim the bounty, you’re also helping out by activating the Auto hMOCHI Pool’s compounding function for everyone.',\n        )}\n      </Text>\n      <Text style={{ fontWeight: 'bold' }}>\n        {t('Auto-Compound Bounty: %fee%% of all Auto hMOCHI pool users pending yield', { fee: fee / 100 })}\n      </Text>\n    </>\n  )\n\n  const [onPresentBountyModal] = useModal(<BountyModal TooltipComponent={TooltipComponent} />)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <StyledCard>\n        <CardBody>\n          <Flex flexDirection=\"column\">\n            <Flex alignItems=\"center\" mb=\"12px\">\n              <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n                {t('Auto hMOCHI Bounty')}\n              </Text>\n              <Box ref={targetRef}>\n                <HelpIcon color=\"textSubtle\" />\n              </Box>\n            </Flex>\n          </Flex>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <Flex flexDirection=\"column\" mr=\"12px\">\n              <Heading>\n                {hasFetchedCakeBounty ? (\n                  <Balance fontSize=\"20px\" bold value={cakeBountyToDisplay} decimals={3} />\n                ) : (\n                  <Skeleton height={20} width={96} mb=\"2px\" />\n                )}\n              </Heading>\n              {hasFetchedDollarBounty ? (\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  value={dollarBountyToDisplay}\n                  decimals={2}\n                  unit=\" USD\"\n                  prefix=\"~\"\n                />\n              ) : (\n                <Skeleton height={16} width={62} />\n              )}\n            </Flex>\n            <Button\n              disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n              onClick={onPresentBountyModal}\n              scale=\"sm\"\n              id=\"clickClaimVaultBounty\"\n            >\n              {t('Claim')}\n            </Button>\n          </Flex>\n        </CardBody>\n      </StyledCard>\n    </>\n  )\n}\n\nexport default BountyCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, HelpIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ButtonText = styled(Text)`\n  display: none;\n  ${({ theme }) => theme.mediaQueries.xs} {\n    display: block;\n  }\n`\n\nconst StyledLink = styled(Link)`\n  margin-right: 16px;\n  display: flex;\n  justify-content: flex-end;\n\n  &:hover {\n    text-decoration: none;\n  }\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1;\n  }\n`\n\nconst HelpButton = () => {\n  const { t } = useTranslation()\n  return (\n    <StyledLink external href=\"https://docs.onemoon.io\">\n      <Button px={['14px', null, null, null, '20px']} variant=\"subtle\">\n        <ButtonText color=\"backgroundAlt\" bold fontSize=\"16px\">\n          {t('Help')}\n        </ButtonText>\n        <HelpIcon color=\"backgroundAlt\" ml={[null, null, null, 0, '6px']} />\n      </Button>\n    </StyledLink>\n  )\n}\n\nexport default HelpButton\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseCell = styled.div`\n  color: black;\n\n  padding: 24px 8px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nexport const CellContent = styled(Flex)`\n  flex-direction: column;\n  justify-content: center;\n  max-height: 40px;\n  ${Text} {\n    line-height: 1;\n  }\n`\n\nexport default BaseCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../../CakeVaultCard/CakeVaultTokenPairImage'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface NameCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  padding-left: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`\n\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\n  const {\n    userData: { userShares },\n  } = useCakeVault()\n  const hasVaultShares = userShares && userShares.gt(0)\n\n  const stakingTokenSymbol = stakingToken.symbol\n  const earningTokenSymbol = earningToken.symbol\n\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isStaked = stakedBalance.gt(0)\n  const isManualCakePool = sousId === 0\n\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\n\n  let title = `${t('Earn')} ${earningTokenSymbol}`\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isXs && !isSm)\n\n  if (isAutoVault) {\n    title = t('Auto hMOCHI')\n    subtitle = t('Automatic restaking')\n  } else if (isManualCakePool) {\n    title = t('Manual hMOCHI')\n    subtitle = `${t('Earn')} hMOCHI ${t('Stake').toLocaleLowerCase()} MOCHI`\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      {isAutoVault ? (\n        <CakeVaultTokenPairImage mr=\"8px\" width={40} height={40} />\n      ) : (\n        <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} mr=\"8px\" width={40} height={40} />\n      )}\n      <CellContent>\n        {showStakedTag && (\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\n            {t('Staked')}\n          </Text>\n        )}\n        <Text bold={!isXs && !isSm} small={isXs || isSm}>\n          {title}\n        </Text>\n        {showSubtitle && (\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {subtitle}\n          </Text>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default NameCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface EarningsCellProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst HelpIconWrapper = styled.div`\n  align-self: center;\n`\n\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice, isAutoVault } = pool\n  const isManualCakePool = sousId === 0\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto hMOCHI vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  let hasEarnings = account && earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto hMOCHI vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n    pricePerFullShare,\n  } = useCakeVault()\n  \n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n    \n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  const labelText = isAutoVault ? t('Recent hMOCHI profit') : t('%asset% Earned', { asset: earningToken.symbol })\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" hMOCHI\" />\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    { placement: 'bottom' },\n  )\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isManualCakePool}\n    />,\n  )\n\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            {tooltipVisible && tooltip}\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={!isAutoVault && hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isXs && !isSm}\n                  fontSize={isXs || isSm ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {earningTokenPrice > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n              {isAutoVault && hasEarnings && !isXs && !isSm && (\n                <HelpIconWrapper ref={targetRef}>\n                  <HelpIcon color=\"textSubtle\" />\n                </HelpIconWrapper>\n              )}\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, useModal, CalculateIcon, Skeleton, FlexProps, Button } from '@pancakeswap/uikit'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getAprData } from 'views/Pools/helpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nconst AprLabelContainer = styled(Flex)`\n  &:hover {\n    opacity: 0.5;\n  }\n`\n\ninterface AprProps extends FlexProps {\n  pool: Pool\n  stakedBalance: BigNumber\n  showIcon: boolean\n  performanceFee?: number\n}\n\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, stakedBalance, performanceFee = 0, ...props }) => {\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, stakingTokenPrice, userData, apr } = pool\n  const { t } = useTranslation()\n\n  const { apr: earningsPercentageToDisplay, autoCompoundFrequency } = getAprData(pool, performanceFee)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <RoiCalculatorModal\n      earningTokenPrice={earningTokenPrice}\n      stakingTokenPrice={stakingTokenPrice}\n      stakingTokenBalance={stakedBalance.plus(stakingTokenBalance)}\n      apr={apr}\n      stakingTokenSymbol={stakingToken.symbol}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      autoCompoundFrequency={autoCompoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  const openRoiModal = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentApyModal()\n  }\n\n  return (\n    <AprLabelContainer alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n      {earningsPercentageToDisplay || isFinished ? (\n        <>\n          <Balance\n            onClick={openRoiModal}\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={isFinished ? 0 : earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n          />\n          {!isFinished && showIcon && (\n            <Button onClick={openRoiModal} variant=\"text\" width=\"20px\" height=\"20px\" padding=\"0px\" marginLeft=\"4px\">\n              <CalculateIcon color=\"textSubtle\" width=\"20px\" />\n            </Button>\n          )}\n        </>\n      ) : (\n        <Skeleton width=\"80px\" height=\"16px\" />\n      )}\n    </AprLabelContainer>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\n\ninterface AprCellProps {\n  pool: Pool\n  stakedBalance: BigNumber\n  performanceFee: number\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AprCell: React.FC<AprCellProps> = ({ pool, stakedBalance, performanceFee }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { isAutoVault } = pool\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {isAutoVault ? t('APY') : t('APR')}\n        </Text>\n        <Apr\n          pool={pool}\n          stakedBalance={stakedBalance}\n          performanceFee={isAutoVault ? performanceFee : 0}\n          showIcon={!isXs && !isSm}\n        />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AprCell\n","import React, { useMemo } from 'react'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface TotalStakedCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\n  const { totalCakeInVault } = useCakeVault()\n\n  const isManualCakePool = sousId === 0\n\n  const totalStakedBalance = useMemo(() => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('Total staked')}\n        </Text>\n        {totalStaked && totalStaked.gte(0) ? (\n          <Flex height=\"20px\" alignItems=\"center\">\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\n          </Flex>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport { Pool } from 'state/types'\nimport { useBlock } from 'state/block/hooks'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface FinishCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\n  const { sousId, totalStaked, startBlock, endBlock, isFinished } = pool\n  const { currentBlock } = useBlock()\n  const { t } = useTranslation()\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isCakePool = sousId === 0\n\n  const renderBlocks = shouldShowBlockCountdown ? (\n    <Flex alignItems=\"center\">\n      <Flex flex=\"1.3\">\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\n        <Text ml=\"4px\" textTransform=\"lowercase\">\n          {t('Blocks')}\n        </Text>\n      </Flex>\n      <Flex flex=\"1\">\n        <Link\n          external\n          href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <TimerIcon ml=\"4px\" />\n        </Link>\n      </Flex>\n    </Flex>\n  ) : (\n    <Text>-</Text>\n  )\n\n  // A bit hacky way to determine if public data is loading relying on totalStaked\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\n  // anywhere else\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {hasPoolStarted || !shouldShowBlockCountdown ? t('Ends in') : t('Starts in')}\n        </Text>\n        {showLoading ? <Skeleton width=\"80px\" height=\"16px\" /> : renderBlocks}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EndsInCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell from './BaseCell'\n\ninterface ExpandActionCellProps {\n  expanded: boolean\n  isFullLayout: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 24px;\n`\n\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\n  const { t } = useTranslation()\n  return (\n    <StyledCell role=\"cell\">\n      {isFullLayout && (\n        <Text color=\"primary\" bold>\n          {expanded ? t('Hide') : t('Details')}\n        </Text>\n      )}\n      <ArrowIcon color=\"primary\" toggled={expanded} />\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div<{ isAutoVault?: boolean }>`\n  padding: 16px;\n  border: 1px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    height: ${({ isAutoVault }) => (isAutoVault ? '130px' : 'auto')};\n  }\n}\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 32px;\n    margin-right: 0;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React from 'react'\nimport { Button, Text, useModal, Flex, TooltipText, useTooltip, Skeleton, Heading } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { PoolCategory } from 'config/constants/types'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow'\n\ninterface HarvestActionProps extends Pool {\n  userDataLoaded: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\n  sousId,\n  poolCategory,\n  earningToken,\n  userData,\n  userDataLoaded,\n  isAutoVault,\n  earningTokenPrice,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto hMOCHI vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  let hasEarnings = earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isCompoundPool = sousId === 0\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto hMOCHI vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    pricePerFullShare,\n    fees: { performanceFee },\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const actionTitle = isAutoVault ? (\n    <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n      {t('Recent hMOCHI profit')}\n    </Text>\n  ) : (\n    <>\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n        {earningToken.symbol}{' '}\n      </Text>\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n        {t('Earned')}\n      </Text>\n    </>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Heading>0</Heading>\n          <Button disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer isAutoVault={isAutoVault}>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        {isAutoVault ? (\n          <Flex flex=\"1.3\" flexDirection=\"column\" alignSelf=\"flex-start\" alignItems=\"flex-start\">\n            <UnstakingFeeCountdownRow isTableVariant />\n            <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n              {tooltipVisible && tooltip}\n              <TooltipText ref={targetRef} small>\n                {t('Performance Fee')}\n              </TooltipText>\n              <Flex alignItems=\"center\">\n                <Text ml=\"4px\" small>\n                  {performanceFee / 100}%\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n        ) : (\n          <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n            {isCompoundPool ? t('Collect') : t('Harvest')}\n          </Button>\n        )}\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useERC20 } from 'hooks/useContract'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\nimport { useCheckVaultApprovalStatus, useApprovePool, useVaultApprove } from '../../../hooks/useApprove'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps {\n  pool: Pool\n  userDataLoaded: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    stakingLimit,\n    isFinished,\n    poolCategory,\n    userData,\n    stakingTokenPrice,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useApprovePool(\n    stakingTokenContract,\n    sousId,\n    earningToken.symbol,\n  )\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\n    useVaultApprove(setLastUpdated)\n\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const hasSharesStaked = userShares && userShares.gt(0)\n  const isVaultWithShares = isAutoVault && hasSharesStaked\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\n\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  const onStake = () => {\n    if (isAutoVault) {\n      onPresentVaultStake()\n    } else {\n      onPresentStake()\n    }\n  }\n\n  const onUnstake = () => {\n    if (isAutoVault) {\n      onPresentVaultUnstake()\n    } else {\n      onPresentUnstake()\n    }\n  }\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <ConnectWalletButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (needsApproval) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Enable pool')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n            {t('Enable')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  // Wallet connected, user data loaded and approved\n  if (isNotVaultAndHasStake || isVaultWithShares) {\n    return (\n      <ActionContainer isAutoVault={isAutoVault}>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n            {stakingToken.symbol}{' '}\n          </Text>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n            <Balance\n              lineHeight=\"1\"\n              bold\n              fontSize=\"20px\"\n              decimals={5}\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\n            />\n            <Balance\n              fontSize=\"12px\"\n              display=\"inline\"\n              color=\"textSubtle\"\n              decimals={2}\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Flex>\n          <IconButtonWrapper>\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\n              <MinusIcon color=\"primary\" width=\"14px\" />\n            </IconButton>\n            {reachStakingLimit ? (\n              <span ref={targetRef}>\n                <IconButton variant=\"secondary\" disabled>\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n                </IconButton>\n              </span>\n            ) : (\n              <IconButton\n                variant=\"secondary\"\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n                disabled={isFinished}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            )}\n          </IconButtonWrapper>\n          {tooltipVisible && tooltip}\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n          {t('Stake')}{' '}\n        </Text>\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n          {stakingToken.symbol}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button\n          width=\"100%\"\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n          variant=\"secondary\"\n          disabled={isFinished}\n        >\n          {t('Stake')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport {\n  Box,\n  Button,\n  Flex,\n  HelpIcon,\n  Link,\n  LinkExternal,\n  MetamaskIcon,\n  Skeleton,\n  Text,\n  TimerIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { registerToken } from 'utils/wallet'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { convertSharesToCake, getPoolBlockInfo } from 'views/Pools/helpers'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\nimport Apr from '../Apr'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.dropdown};\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\ntype MediaBreakpoints = {\n  isXs: boolean\n  isSm: boolean\n  isMd: boolean\n  isLg: boolean\n  isXl: boolean\n}\n\ninterface ActionPanelProps {\n  account: string\n  pool: Pool\n  userDataLoaded: boolean\n  expanded: boolean\n  breakpoints: MediaBreakpoints\n}\n\nconst InfoSection = styled(Box)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n  padding: 8px 8px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0;\n    flex-basis: 230px;\n  }\n`\n\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    userData,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const { currentBlock } = useBlock()\n  const { isXs, isSm, isMd } = breakpoints\n  const showSubtitle = (isXs || isSm) && sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n\n  const {\n    totalCakeInVault,\n    userData: { userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const poolStakingTokenBalance = isAutoVault\n    ? cakeAsBigNumber.plus(stakingTokenBalance)\n    : stakedBalance.plus(stakingTokenBalance)\n\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const isManualCakePool = sousId === 0\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible,\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-start',\n  })\n\n  const maxStakeRow = stakingLimit.gt(0) ? (\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\n      <Text>{t('Max. stake per user')}:</Text>\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n    </Flex>\n  ) : null\n\n  const blocksRow =\n    blocksRemaining || blocksUntilStart ? (\n      <Flex mb=\"8px\" justifyContent=\"space-between\">\n        <Text>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n        <Flex>\n          <Link external href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}>\n            <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} color=\"primary\" />\n            <Text ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n              {t('Blocks')}\n            </Text>\n            <TimerIcon ml=\"4px\" color=\"primary\" />\n          </Link>\n        </Flex>\n      </Flex>\n    ) : (\n      <Skeleton width=\"56px\" height=\"16px\" />\n    )\n\n  const aprRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text>{isAutoVault ? t('APY') : t('APR')}:</Text>\n      <Apr\n        pool={pool}\n        showIcon\n        stakedBalance={poolStakingTokenBalance}\n        performanceFee={isAutoVault ? performanceFeeAsDecimal : 0}\n      />\n    </Flex>\n  )\n\n  const totalStakedRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}:</Text>\n      <Flex alignItems=\"center\">\n        {totalStaked && totalStaked.gte(0) ? (\n          <>\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n            <span ref={totalStakedTargetRef}>\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"4px\" />\n            </span>\n          </>\n        ) : (\n          <Skeleton width=\"56px\" height=\"16px\" />\n        )}\n        {totalStakedTooltipVisible && totalStakedTooltip}\n      </Flex>\n    </Flex>\n  )\n\n  return (\n    <StyledActionPanel expanded={expanded}>\n      <InfoSection>\n        {maxStakeRow}\n        {(isXs || isSm) && aprRow}\n        {(isXs || isSm || isMd) && totalStakedRow}\n        {shouldShowBlockCountdown && blocksRow}\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={`https://explorer.harmony.one/token/${getAddress(earningToken.address)}`} bold={false}>\n            {t('See Token Info')}\n          </LinkExternal>\n        </Flex>\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={earningToken.projectLink} bold={false}>\n            {t('View Project Site')}\n          </LinkExternal>\n        </Flex>\n        {poolContractAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <LinkExternal\n              href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n              bold={false}\n            >\n              {t('View Contract')}\n            </LinkExternal>\n          </Flex>\n        )}\n        {account && isMetaMaskInScope && tokenAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <Button\n              variant=\"text\"\n              p=\"0\"\n              height=\"auto\"\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n            >\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\n              <MetamaskIcon ml=\"4px\" />\n            </Button>\n          </Flex>\n        )}\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n        {tagTooltipVisible && tagTooltip}\n        <span ref={tagTargetRef}>\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n        </span>\n      </InfoSection>\n      <ActionContainer>\n        {showSubtitle && (\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} MOCHI ${t('Stake').toLocaleLowerCase()} MOCHI`}\n          </Text>\n        )}\n        <Harvest {...pool} userDataLoaded={userDataLoaded} />\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport NameCell from './Cells/NameCell'\nimport EarningsCell from './Cells/EarningsCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport EndsInCell from './Cells/EndsInCell'\nimport ExpandActionCell from './Cells/ExpandActionCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\n\ninterface PoolRowProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n`\n\nconst PoolRow: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\n  const { isXs, isSm, isMd, isLg, isXl } = useMatchBreakpoints()\n  const [expanded, setExpanded] = useState(false)\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\n\n  const toggleExpanded = () => {\n    setExpanded((prev) => !prev)\n  }\n\n  const { isAutoVault, userData } = pool\n\n  const {\n    userData: { userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  return (\n    <>\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\n        <NameCell pool={pool} />\n        <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        <AprCell\n          pool={pool}\n          stakedBalance={isAutoVault ? cakeAsBigNumber : stakedBalance}\n          performanceFee={performanceFeeAsDecimal}\n        />\n        {(isLg || isXl) && <TotalStakedCell pool={pool} />}\n        {isXl && <EndsInCell pool={pool} />}\n        <ExpandActionCell expanded={expanded} isFullLayout={isMd || isLg || isXl} />\n      </StyledRow>\n      {shouldRenderActionPanel && (\n        <ActionPanel\n          account={account}\n          pool={pool}\n          userDataLoaded={userDataLoaded}\n          expanded={expanded}\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PoolRow\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { Button, ChevronUpIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport PoolRow from './PoolRow'\n\ninterface PoolsTableProps {\n  pools: Pool[]\n  userDataLoaded: boolean\n  account: string\n}\n\nconst StyledTable = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n\n  background-color: ${({ theme }) => theme.card.background};\n  > div:not(:last-child) {\n    border-bottom: 2px solid ${({ theme }) => theme.colors.disabled};\n  }\n`\n\nconst StyledTableBorder = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  padding: 1px 1px 1px 1px;\n  background-size: 400% 400%;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst PoolsTable: React.FC<PoolsTableProps> = ({ pools, userDataLoaded, account }) => {\n  const { t } = useTranslation()\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n  return (\n    <StyledTableBorder>\n      <StyledTable role=\"table\" ref={tableWrapperEl}>\n        {pools.map((pool) => (\n          <PoolRow\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\n            pool={pool}\n            account={account}\n            userDataLoaded={userDataLoaded}\n          />\n        ))}\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {t('To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </StyledTable>\n    </StyledTableBorder>\n  )\n}\n\nexport default PoolsTable\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Flex, Image, Text } from '@pancakeswap/uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport { useTranslation } from 'contexts/Localization'\nimport usePersistState from 'hooks/usePersistState'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools/hooks'\nimport { usePollFarmsData } from 'state/farms/hooks'\nimport { latinise } from 'utils/latinise'\nimport FlexLayout from 'components/Layout/Flex'\nimport Page from 'components/Layout/Page'\nimport PageHeader from 'components/PageHeader'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport { Pool } from 'state/types'\nimport Loading from 'components/Loading'\nimport PoolCard from './components/PoolCard'\nimport CakeVaultCard from './components/CakeVaultCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport BountyCard from './components/BountyCard'\nimport HelpButton from './components/HelpButton'\nimport PoolsTable from './components/PoolsTable/PoolsTable'\nimport { ViewMode } from './components/ToggleView/ToggleView'\nimport { getAprData, getCakeVaultEarnings } from './helpers'\n\nconst CardLayout = styled(FlexLayout)`\n  justify-content: center;\n`\n\nconst StyledHeading = styled(Heading)`\n  font-family: 'Press Start 2P', cursive;\n`\n\nconst PoolControls = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n  margin-bottom: 32px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 16px 32px;\n    margin-bottom: 0;\n  }\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst ControlStretch = styled(Flex)`\n  > div {\n    flex: 1;\n  }\n`\n\nconst NUMBER_OF_POOLS_VISIBLE = 12\n\nconst Pools: React.FC = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\n  const [stakedOnly, setStakedOnly] = usePersistState(false, { localStorageKey: 'pancake_pool_staked' })\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, { localStorageKey: 'pancake_pool_view' })\n  const [searchQuery, setSearchQuery] = useState('')\n  const [sortOption, setSortOption] = useState('hot')\n  const chosenPoolsLength = useRef(0)\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n    totalCakeInVault,\n  } = useCakeVault()\n  const accountHasVaultShares = userShares && userShares.gt(0)\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  const pools = useMemo(() => {\n    const cakePool = poolsWithoutAutoVault.find((pool) => pool.sousId === 0)\n    const cakeAutoVault = { ...cakePool, isAutoVault: true }\n    return [cakeAutoVault, ...poolsWithoutAutoVault]\n  }, [poolsWithoutAutoVault])\n\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\n  const stakedOnlyFinishedPools = useMemo(\n    () =>\n      finishedPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [finishedPools, accountHasVaultShares],\n  )\n  const stakedOnlyOpenPools = useMemo(\n    () =>\n      openPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [openPools, accountHasVaultShares],\n  )\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\n\n  usePollFarmsData()\n  useFetchCakeVault()\n  useFetchPublicPoolsData()\n\n  useEffect(() => {\n    const showMorePools = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfPoolsVisible((poolsCurrentlyVisible) => {\n          if (poolsCurrentlyVisible <= chosenPoolsLength.current) {\n            return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE\n          }\n          return poolsCurrentlyVisible\n        })\n      }\n    }\n\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMorePools, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [observerIsSet])\n\n  const showFinishedPools = location.pathname.includes('history')\n\n  const handleChangeSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value)\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  const sortPools = (poolsToSort: Pool[]) => {\n    switch (sortOption) {\n      case 'apr':\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.apr ? getAprData(pool, performanceFeeAsDecimal).apr : 0),\n          'desc',\n        )\n      case 'earned':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => {\n            if (!pool.userData || !pool.earningTokenPrice) {\n              return 0\n            }\n            return pool.isAutoVault\n              ? getCakeVaultEarnings(\n                  account,\n                  cakeAtLastUserAction,\n                  userShares,\n                  pricePerFullShare,\n                  pool.earningTokenPrice,\n                ).autoUsdToDisplay\n              : pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\n          },\n          'desc',\n        )\n      case 'totalStaked':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.isAutoVault ? totalCakeInVault.toNumber() : pool.totalStaked.toNumber()),\n          'desc',\n        )\n      default:\n        return poolsToSort\n    }\n  }\n\n  let chosenPools\n  if (showFinishedPools) {\n    chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\n  } else {\n    chosenPools = stakedOnly ? stakedOnlyOpenPools : openPools\n  }\n\n  if (searchQuery) {\n    const lowercaseQuery = latinise(searchQuery.toLowerCase())\n    chosenPools = chosenPools.filter((pool) =>\n      latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\n    )\n  }\n\n  chosenPools = sortPools(chosenPools).slice(0, numberOfPoolsVisible)\n  chosenPoolsLength.current = chosenPools.length\n\n  // chosenPools = chosenPools.filter((pool) => \n  //   !pool.isAutoVault \n  // )\n  \n  const cardLayout = (\n    <CardLayout>\n      {chosenPools.map((pool) =>\n        pool.isAutoVault ? (\n          <CakeVaultCard key=\"auto-cake\" pool={pool} showStakedOnly={stakedOnly} />\n        ) : (\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\n        ),\n      )}\n    </CardLayout>\n  )\n\n  const tableLayout = <PoolsTable pools={chosenPools} account={account} userDataLoaded={userDataLoaded} />\n\n  return (\n    <>\n      <PageHeader>\n        <Flex justifyContent=\"space-between\" flexDirection={['column', null, null, 'row']}>\n          <Flex flex=\"1\" flexDirection=\"column\" mr={['8px', 0]}>\n            <StyledHeading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\n              {t('Pools')}\n            </StyledHeading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('Just stake some tokens to earn.')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('High APR, low risk.')}\n            </Heading>\n          </Flex>\n          <Flex flex=\"1\" height=\"fit-content\" justifyContent=\"center\" alignItems=\"center\" mt={['24px', null, '0']}>\n            <HelpButton />\n            <BountyCard />\n          </Flex>\n        </Flex>\n      </PageHeader>\n      <Page>\n        <PoolControls>\n          <PoolTabButtons\n            stakedOnly={stakedOnly}\n            setStakedOnly={setStakedOnly}\n            hasStakeInFinishedPools={hasStakeInFinishedPools}\n            viewMode={viewMode}\n            setViewMode={setViewMode}\n          />\n          <FilterContainer>\n            <LabelWrapper>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Sort by')}\n              </Text>\n              <ControlStretch>\n                <Select\n                  options={[\n                    {\n                      label: t('Hot'),\n                      value: 'hot',\n                    },\n                    {\n                      label: t('APR'),\n                      value: 'apr',\n                    },\n                    {\n                      label: t('Earned'),\n                      value: 'earned',\n                    },\n                    {\n                      label: t('Total staked'),\n                      value: 'totalStaked',\n                    },\n                  ]}\n                  onChange={handleSortOptionChange}\n                />\n              </ControlStretch>\n            </LabelWrapper>\n            <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Search')}\n              </Text>\n              <SearchInput onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\n            </LabelWrapper>\n          </FilterContainer>\n        </PoolControls>\n        {showFinishedPools && (\n          <Text fontSize=\"20px\" color=\"failure\" pb=\"32px\">\n            {t('These pools are no longer distributing rewards. Please unstake your tokens.')}\n          </Text>\n        )}\n        {account && !userDataLoaded && stakedOnly && (\n          <Flex justifyContent=\"center\" mb=\"4px\">\n            <Loading />\n          </Flex>\n        )}\n        {viewMode === ViewMode.CARD ? cardLayout : tableLayout}\n        <div ref={loadMoreRef} />\n        <Image\n          mx=\"auto\"\n          mt=\"12px\"\n          src=\"/images/decorations/bluemochi.svg\"\n          alt=\"Mochi illustration\"\n          width={192}\n          height={184.5}\n        />\n      </Page>\n    </>\n  )\n}\n\nexport default Pools\n","// import tokens from 'config/constants/tokens'\nimport { Address } from './types'\n\n// const { bondly, safemoon } = tokens\n\ninterface WarningToken {\n  symbol: string\n  address: Address\n}\n\ninterface WarningTokenList {\n  [key: string]: WarningToken\n}\n\nconst SwapWarningTokens = <WarningTokenList>{\n  // safemoon,\n  // bondly,\n}\n\nexport default SwapWarningTokens\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Text, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useENS from '../../../hooks/ENS/useENS'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { AutoColumn } from '../../../components/Layout/Column'\nimport { RowBetween } from '../../../components/Layout/Row'\nimport { getBscScanLink } from '../../../utils'\n\nconst InputPanel = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  z-index: 1;\n  width: 100%;\n`\n\nconst ContainerRow = styled.div<{ error: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.background)};\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`\n\nconst Input = styled.input<{ error?: boolean }>`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  width: 0;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n`\n\nexport default function AddressInputPanel({\n  id,\n  value,\n  onChange,\n}: {\n  id?: string\n  // the typed string value\n  value: string\n  // triggers whenever the typed value changes\n  onChange: (value: string) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const { address, loading, name } = useENS(value)\n\n  const handleInput = useCallback(\n    (event) => {\n      const input = event.target.value\n      const withoutSpaces = input.replace(/\\s+/g, '')\n      onChange(withoutSpaces)\n    },\n    [onChange],\n  )\n\n  const error = Boolean(value.length > 0 && !loading && !address)\n\n  return (\n    <InputPanel id={id}>\n      <ContainerRow error={error}>\n        <InputContainer>\n          <AutoColumn gap=\"md\">\n            <RowBetween>\n              <Text>{t('Recipient')}</Text>\n              {address && chainId && (\n                <Link external small href={getBscScanLink(name ?? address, 'address', chainId)}>\n                  ({t('View on Explorer')})\n                </Link>\n              )}\n            </RowBetween>\n            <Input\n              className=\"recipient-address-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder={t('Wallet Address or ENS name')}\n              error={error}\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\n              onChange={handleInput}\n              value={value}\n            />\n          </AutoColumn>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport { Text, ErrorIcon } from '@pancakeswap/uikit'\nimport styled, { css } from 'styled-components'\nimport { AutoColumn } from 'components/Layout/Column'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 1rem;\n`\n\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\n  padding: 2px;\n\n  ${({ clickable }) =>\n    clickable\n      ? css`\n          :hover {\n            cursor: pointer;\n            opacity: 0.8;\n          }\n        `\n      : null}\n`\n\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\n  color: ${({ theme, severity }) =>\n    severity === 3 || severity === 4\n      ? theme.colors.failure\n      : severity === 2\n      ? theme.colors.warning\n      : severity === 1\n      ? theme.colors.text\n      : theme.colors.success};\n`\n\nexport const StyledBalanceMaxMini = styled.button`\n  height: 22px;\n  width: 22px;\n  background-color: ${({ theme }) => theme.colors.background};\n  border: none;\n  border-radius: 50%;\n  padding: 0.2rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n  }\n  :focus {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n    outline: none;\n  }\n`\n\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true })`\n  width: 220px;\n`\n\nconst SwapCallbackErrorInner = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  font-size: 0.825rem;\n  width: 100%;\n  padding: 3rem 1.25rem 1rem 1rem;\n  margin-top: -2rem;\n  color: ${({ theme }) => theme.colors.failure};\n  z-index: -1;\n  p {\n    padding: 0;\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  border-radius: 12px;\n  min-width: 48px;\n  height: 48px;\n`\n\nexport function SwapCallbackError({ error }: { error: string }) {\n  return (\n    <SwapCallbackErrorInner>\n      <SwapCallbackErrorInnerAlertTriangle>\n        <ErrorIcon width=\"24px\" />\n      </SwapCallbackErrorInnerAlertTriangle>\n      <p>{error}</p>\n    </SwapCallbackErrorInner>\n  )\n}\n\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\n  background-color: ${({ theme }) => `${theme.colors.warning}33`};\n  padding: 0.5rem;\n  border-radius: 12px;\n  margin-top: 8px;\n`\n","import { Percent } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { warningSeverity } from 'utils/prices'\nimport { ONE_BIPS } from '../../../config/constants'\nimport { ErrorText } from './styleds'\n\n/**\n * Formatted version of price impact text with warning colors\n */\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\n  return (\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\n    </ErrorText>\n  )\n}\n","import React, { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Button, Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport {\n  computeSlippageAdjustedAmounts,\n  computeTradePriceBreakdown,\n  formatExecutionPrice,\n  warningSeverity,\n} from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\n\nconst SwapModalFooterContainer = styled(AutoColumn)`\n  margin-top: 24px;\n  padding: 16px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  disabledConfirm: boolean\n}) {\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [allowedSlippage, trade],\n  )\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <>\n      <SwapModalFooterContainer>\n        <RowBetween align=\"center\">\n          <Text fontSize=\"14px\">Price</Text>\n          <Text\n            fontSize=\"14px\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '10px',\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <AutoRenewIcon width=\"14px\" />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT ? 'Minimum received' : 'Maximum sold'}\n            </Text>\n            <QuestionHelper\n              text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Price Impact</Text>\n            <QuestionHelper text=\"The difference between the market price and your price due to trade size.\" ml=\"4px\" />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Liquidity Provider Fee</Text>\n            <QuestionHelper\n              text={\n                <>\n                  <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                  <Text>- 0.17% to LP token holders</Text>\n                  <Text>- 0.03% to the Treasury</Text>\n                  <Text>- 0.05% towards hMOCHI buyback and burn</Text>\n                </>\n              }\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <Text fontSize=\"14px\">\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </SwapModalFooterContainer>\n\n      <AutoRow>\n        <Button\n          variant={severity > 2 ? 'danger' : 'primary'}\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          mt=\"12px\"\n          id=\"confirm-swap-or-send\"\n          width=\"100%\"\n        >\n          {severity > 2 ? 'Swap Anyway' : 'Confirm Swap'}\n        </Button>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { isAddress, shortenAddress } from 'utils'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds'\n\nexport default function SwapModalHeader({\n  trade,\n  allowedSlippage,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n}) {\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [trade, allowedSlippage],\n  )\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <AutoColumn gap=\"md\">\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? 'primary' : 'text'}\n          >\n            {trade.inputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDownIcon width=\"16px\" ml=\"4px\" />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={\n              priceImpactSeverity > 2\n                ? 'failure'\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n                ? 'primary'\n                : 'text'\n            }\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\n          <RowBetween>\n            <RowFixed>\n              <ErrorIcon mr=\"8px\" />\n              <Text bold> Price Updated</Text>\n            </RowFixed>\n            <Button onClick={onAcceptChanges}>Accept</Button>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\n        {trade.tradeType === TradeType.EXACT_INPUT ? (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Output is estimated. You will receive at least `}\n            <b>\n              {slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)} {trade.outputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        ) : (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Input is estimated. You will sell at most `}\n            <b>\n              {slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)} {trade.inputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        )}\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n          <Text color=\"textSubtle\">\n            Output will be sent to{' '}\n            <b title={recipient}>{isAddress(recipient) ? shortenAddress(recipient) : recipient}</b>\n          </Text>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n","import React, { useCallback, useMemo } from 'react'\nimport { currencyEquals, Trade } from '@pancakeswap/sdk'\nimport { InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from 'components/TransactionConfirmationModal'\nimport SwapModalFooter from './SwapModalFooter'\nimport SwapModalHeader from './SwapModalHeader'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\ninterface ConfirmSwapModalProps {\n  trade?: Trade\n  originalTrade?: Trade\n  attemptingTxn: boolean\n  txHash?: string\n  recipient: string | null\n  allowedSlippage: number\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage?: string\n  customOnDismiss?: () => void\n}\n\nconst ConfirmSwapModal: React.FC<InjectedModalProps & ConfirmSwapModalProps> = ({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  customOnDismiss,\n  recipient,\n  swapErrorMessage,\n  attemptingTxn,\n  txHash,\n}) => {\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade],\n  )\n\n  const { t } = useTranslation()\n\n  const modalHeader = useCallback(() => {\n    return trade ? (\n      <SwapModalHeader\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\n\n  const modalBottom = useCallback(() => {\n    return trade ? (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        swapErrorMessage={swapErrorMessage}\n        allowedSlippage={allowedSlippage}\n      />\n    ) : null\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\n\n  // text to show while loading\n  const pendingText = t('Swapping %amountA% %symbolA% for %amountB% %symbolB%', {\n    amountA: trade?.inputAmount?.toSignificant(6) ?? '',\n    symbolA: trade?.inputAmount?.currency?.symbol ?? '',\n    amountB: trade?.outputAmount?.toSignificant(6) ?? '',\n    symbolB: trade?.outputAmount?.currency?.symbol ?? '',\n  })\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\n      ) : (\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\n      ),\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage],\n  )\n\n  return (\n    <TransactionConfirmationModal\n      title={t('Confirm Swap')}\n      onDismiss={onDismiss}\n      customOnDismiss={customOnDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={confirmationContent}\n      pendingText={pendingText}\n      currencyToAdd={trade?.outputAmount.currency}\n    />\n  )\n}\n\nexport default ConfirmSwapModal\n","import { useEffect, useState } from 'react'\n\n/**\n * Returns the last value of type T that passes a filter function\n * @param value changing value\n * @param filterFn function that determines whether a given value should be considered for the last value\n */\nfunction useLast<T>(\n  value: T | undefined | null,\n  filterFn?: (value: T | null | undefined) => boolean,\n): T | null | undefined {\n  const [last, setLast] = useState<T | null | undefined>(filterFn && filterFn(value) ? value : undefined)\n  useEffect(() => {\n    setLast((prev) => {\n      const shouldUse: boolean = filterFn ? filterFn(value) : true\n      if (shouldUse) return value\n      return prev\n    })\n  }, [filterFn, value])\n  return last\n}\n\nfunction isDefined<T>(x: T | null | undefined): x is T {\n  return x !== null && x !== undefined\n}\n\n/**\n * Returns the last truthy value of type T\n * @param value changing value\n */\nfunction useLastTruthy<T>(value: T | undefined | null): T | null | undefined {\n  return useLast(value, isDefined)\n}\n\nexport default useLastTruthy\n","import React, { Fragment, memo } from 'react'\nimport { Trade } from '@pancakeswap/sdk'\nimport { Text, Flex, ChevronRightIcon } from '@pancakeswap/uikit'\nimport { unwrappedToken } from 'utils/wrappedCurrency'\n\nexport default memo(function SwapRoute({ trade }: { trade: Trade }) {\n  return (\n    <Flex flexWrap=\"wrap\" width=\"100%\" justifyContent=\"flex-end\" alignItems=\"center\">\n      {trade.route.path.map((token, i, path) => {\n        const isLastItem: boolean = i === path.length - 1\n        const currency = unwrappedToken(token)\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <Fragment key={i}>\n            <Flex alignItems=\"end\">\n              <Text fontSize=\"14px\" ml=\"0.125rem\" mr=\"0.125rem\">\n                {currency.symbol}\n              </Text>\n            </Flex>\n            {!isLastItem && <ChevronRightIcon width=\"12px\" />}\n          </Fragment>\n        )\n      })}\n    </Flex>\n  )\n})\n","import React from 'react'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useUserSlippageTolerance } from 'state/user/hooks'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport SwapRoute from './SwapRoute'\n\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\n\n  return (\n    <AutoColumn style={{ padding: '0 16px' }}>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {isExactIn ? 'Minimum received' : 'Maximum sold'}\n          </Text>\n          <QuestionHelper\n            text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <RowFixed>\n          <Text fontSize=\"14px\">\n            {isExactIn\n              ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\n                '-'\n              : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ?? '-'}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Price Impact\n          </Text>\n          <QuestionHelper\n            text=\"The difference between the market price and estimated price due to trade size.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n      </RowBetween>\n\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Liquidity Provider Fee\n          </Text>\n          <QuestionHelper\n            text={\n              <>\n                <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                <Text>- 0.17% to LP token holders</Text>\n                <Text>- 0.03% to the Treasury</Text>\n                <Text>- 0.05% towards hMOCHI buyback and burn</Text>\n              </>\n            }\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Text fontSize=\"14px\">\n          {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\n        </Text>\n      </RowBetween>\n    </AutoColumn>\n  )\n}\n\nexport interface AdvancedSwapDetailsProps {\n  trade?: Trade\n}\n\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\n\n  return (\n    <AutoColumn gap=\"0px\">\n      {trade && (\n        <>\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\n          {showRoute && (\n            <>\n              <RowBetween style={{ padding: '0 16px' }}>\n                <span style={{ display: 'flex', alignItems: 'center' }}>\n                  <Text fontSize=\"14px\" color=\"textSubtle\">\n                    Route\n                  </Text>\n                  <QuestionHelper\n                    text=\"Routing through these tokens resulted in the best price for your trade.\"\n                    ml=\"4px\"\n                  />\n                </span>\n                <SwapRoute trade={trade} />\n              </RowBetween>\n            </>\n          )}\n        </>\n      )}\n    </AutoColumn>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useLastTruthy from 'hooks/useLast'\nimport { AdvancedSwapDetails, AdvancedSwapDetailsProps } from './AdvancedSwapDetails'\n\nconst AdvancedDetailsFooter = styled.div<{ show: boolean }>`\n  margin-top: ${({ show }) => (show ? '16px' : 0)};\n  padding-top: 16px;\n  padding-bottom: 16px;\n  width: 100%;\n  max-width: 400px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\n  transition: transform 300ms ease-in-out;\n`\n\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }: AdvancedSwapDetailsProps) {\n  const lastTrade = useLastTruthy(trade)\n\n  return (\n    <AdvancedDetailsFooter show={Boolean(trade)}>\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\n    </AdvancedDetailsFooter>\n  )\n}\n","import React from 'react'\nimport { Price } from '@pancakeswap/sdk'\nimport { Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { StyledBalanceMaxMini } from './styleds'\n\ninterface TradePriceProps {\n  price?: Price\n  showInverted: boolean\n  setShowInverted: (showInverted: boolean) => void\n}\n\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\n\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\n  const label = showInverted\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\n\n  return (\n    <Text style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\n      {show ? (\n        <>\n          {formattedPrice ?? '-'} {label}\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n            <AutoRenewIcon width=\"14px\" />\n          </StyledBalanceMaxMini>\n        </>\n      ) : (\n        '-'\n      )}\n    </Text>\n  )\n}\n","import React from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Modal, InjectedModalProps } from '@pancakeswap/uikit'\nimport ImportToken from 'components/SearchModal/ImportToken'\n\ninterface Props extends InjectedModalProps {\n  tokens: Token[]\n  onCancel: () => void\n}\n\nconst ImportTokenWarningModal: React.FC<Props> = ({ tokens, onDismiss, onCancel }) => {\n  return (\n    <Modal\n      title=\"Import Token\"\n      onDismiss={() => {\n        if (onDismiss) {\n          onDismiss()\n        }\n        onCancel()\n      }}\n      style={{ maxWidth: '420px' }}\n    >\n      <ImportToken tokens={tokens} handleCurrencySelect={onDismiss} />\n    </Modal>\n  )\n}\n\nexport default ImportTokenWarningModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RowBetween } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\n\nconst Grouping = styled(RowBetween)`\n  width: 50%;\n`\n\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\n  min-width: 20px;\n  min-height: 20px;\n  background-color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\n  border-radius: 50%;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 12px;\n`\n\nconst CircleRow = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  align-items: center;\n`\n\nconst Connector = styled.div<{ prevConfirmed?: boolean; disabled?: boolean }>`\n  width: 100%;\n  height: 2px;\n  background: linear-gradient(\n    90deg,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled ? theme.colors.backgroundDisabled : prevConfirmed ? theme.colors.success : theme.colors.primary}\n      0%,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled\n          ? theme.colors.backgroundDisabled\n          : prevConfirmed\n          ? theme.colors.primary\n          : theme.colors.backgroundDisabled}\n      80%\n  );\n  opacity: 0.6;\n`\n\ninterface ProgressCirclesProps {\n  steps: boolean[]\n  disabled?: boolean\n}\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\n  return (\n    <AutoColumn justify=\"center\" {...rest}>\n      <Grouping>\n        {steps.map((step, i) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <CircleRow key={i}>\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\n                {step ? '✓' : i + 1}\n              </Circle>\n              <Connector prevConfirmed={step} disabled={disabled} />\n            </CircleRow>\n          )\n        })}\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\n      </Grouping>\n    </AutoColumn>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useGasPrice } from 'state/user/hooks'\nimport { BIPS_BASE, INITIAL_ALLOWED_SLIPPAGE } from '../config/constants'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { calculateGasMargin, getRouterContract, isAddress, shortenAddress } from '../utils'\nimport isZero from '../utils/isZero'\nimport useTransactionDeadline from './useTransactionDeadline'\nimport useENS from './ENS/useENS'\n\nexport enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\ninterface SwapCall {\n  contract: Contract\n  parameters: SwapParameters\n}\n\ninterface SuccessfulCall {\n  call: SwapCall\n  gasEstimate: BigNumber\n}\n\ninterface FailedCall {\n  call: SwapCall\n  error: Error\n}\n\ntype EstimatedSwapCall = SuccessfulCall | FailedCall\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param recipientAddressOrName\n */\nfunction useSwapCallArguments(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): SwapCall[] {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n  const deadline = useTransactionDeadline()\n\n  return useMemo(() => {\n    if (!trade || !recipient || !library || !account || !chainId || !deadline) return []\n\n    const contract: Contract | null = getRouterContract(chainId, library, account)\n    if (!contract) {\n      return []\n    }\n\n    const swapMethods = []\n\n    swapMethods.push(\n      Router.swapCallParameters(trade, {\n        feeOnTransfer: false,\n        allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n        recipient,\n        deadline: deadline.toNumber(),\n      }),\n    )\n\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\n      swapMethods.push(\n        Router.swapCallParameters(trade, {\n          feeOnTransfer: true,\n          allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n          recipient,\n          deadline: deadline.toNumber(),\n        }),\n      )\n    }\n\n    return swapMethods.map((parameters) => ({ parameters, contract }))\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\n  const { account, chainId, library } = useActiveWeb3React()\n  const gasPrice = useGasPrice()\n\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName)\n\n  const addTransaction = useTransactionAdder()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  return useMemo(() => {\n    if (!trade || !library || !account || !chainId) {\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\n    }\n    if (!recipient) {\n      if (recipientAddressOrName !== null) {\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\n      }\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\n    }\n\n    return {\n      state: SwapCallbackState.VALID,\n      callback: async function onSwap(): Promise<string> {\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\n          swapCalls.map((call) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = call\n            const options = !value || isZero(value) ? {} : { value }\n\n            return contract.estimateGas[methodName](...args, options)\n              .then((gasEstimate) => {\n                return {\n                  call,\n                  gasEstimate,\n                }\n              })\n              .catch((gasError) => {\n                console.error('Gas estimate failed, trying eth_call to extract error', call)\n\n                return contract.callStatic[methodName](...args, options)\n                  .then((result) => {\n                    console.error('Unexpected successful call after failed estimate gas', call, gasError, result)\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') }\n                  })\n                  .catch((callError) => {\n                    console.error('Call threw error', call, callError)\n                    const reason: string = callError.reason || callError.data?.message || callError.message\n                    const errorMessage = `The transaction cannot succeed due to error: ${\n                      reason ?? 'Unknown error, check the logs'\n                    }.`\n\n                    return { call, error: new Error(errorMessage) }\n                  })\n              })\n          }),\n        )\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        const successfulEstimation = estimatedCalls.find(\n          (el, ix, list): el is SuccessfulCall =>\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\n        )\n\n        if (!successfulEstimation) {\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\n        }\n\n        const {\n          call: {\n            contract,\n            parameters: { methodName, args, value },\n          },\n          gasEstimate,\n        } = successfulEstimation\n\n        return contract[methodName](...args, {\n          gasLimit: calculateGasMargin(gasEstimate),\n          gasPrice,\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\n        })\n          .then((response: any) => {\n            const inputSymbol = trade.inputAmount.currency.symbol\n            const outputSymbol = trade.outputAmount.currency.symbol\n            const inputAmount = trade.inputAmount.toSignificant(3)\n            const outputAmount = trade.outputAmount.toSignificant(3)\n\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\n            const withRecipient =\n              recipient === account\n                ? base\n                : `${base} to ${\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\n                      ? shortenAddress(recipientAddressOrName)\n                      : recipientAddressOrName\n                  }`\n\n            addTransaction(response, {\n              summary: withRecipient,\n            })\n\n            return response.hash\n          })\n          .catch((error: any) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error('Transaction rejected.')\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, error, methodName, args, value)\n              throw new Error(`Swap failed: ${error.message}`)\n            }\n          })\n      },\n      error: null,\n    }\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction, gasPrice])\n}\n","import { Currency, currencyEquals, ETHER, WETH } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { tryParseAmount } from '../state/swap/hooks'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { useCurrencyBalance } from '../state/wallet/hooks'\nimport { useWETHContract } from './useContract'\nimport { useCallWithGasPrice } from './useCallWithGasPrice'\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP,\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\n/**\n * Given the selected input and output currency, return a wrap callback\n * @param inputCurrency the selected input currency\n * @param outputCurrency the selected output currency\n * @param typedValue the user input value\n */\nexport default function useWrapCallback(\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n  typedValue: string | undefined,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\n  const { chainId, account } = useActiveWeb3React()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const wethContract = useWETHContract()\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\n  const addTransaction = useTransactionAdder()\n\n  return useMemo(() => {\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n\n    if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\n      return {\n        wrapType: WrapType.WRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await callWithGasPrice(wethContract, 'deposit', undefined, {\n                    value: `0x${inputAmount.raw.toString(16)}`,\n                  })\n                  addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} BNB to WBNB` })\n                } catch (error) {\n                  console.error('Could not deposit', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient BNB balance',\n      }\n    }\n    if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\n      return {\n        wrapType: WrapType.UNWRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await callWithGasPrice(wethContract, 'withdraw', [\n                    `0x${inputAmount.raw.toString(16)}`,\n                  ])\n                  addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WBNB to BNB` })\n                } catch (error) {\n                  console.error('Could not withdraw', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient WBNB balance',\n      }\n    }\n    return NOT_APPLICABLE\n  }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction, callWithGasPrice])\n}\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from '@pancakeswap/uikit'\n\nconst SafemoonWarning = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text>{t('To trade SAFEMOON, you must:')} </Text>\n      <Text>• {t('Click on the settings icon')}</Text>\n      <Text mb=\"24px\">• {t('Set your slippage tolerance to 12%+')}</Text>\n      <Text>{t('This is because SafeMoon taxes a 10% fee on each transaction:')}</Text>\n      <Text>• {t('5% fee = redistributed to all existing holders')}</Text>\n      <Text>• {t('5% fee = used to add liquidity')}</Text>\n    </>\n  )\n}\n\nexport default SafemoonWarning\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst BondlyWarning = () => {\n  const { t } = useTranslation()\n\n  return <Text>{t('Warning: BONDLY has been compromised. Please remove liqudity until further notice.')}</Text>\n}\n\nexport default BondlyWarning\n","import React, { useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text, Flex, Checkbox, Button } from '@pancakeswap/uikit'\n\ninterface AcknowledgementProps {\n  handleContinueClick: () => void\n}\n\nconst Acknowledgement: React.FC<AcknowledgementProps> = ({ handleContinueClick }) => {\n  const { t } = useTranslation()\n  const [isConfirmed, setIsConfirmed] = useState(false)\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\">\n        <Flex alignItems=\"center\">\n          <Checkbox\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={isConfirmed}\n            onChange={() => setIsConfirmed(!isConfirmed)}\n            scale=\"sm\"\n          />\n          <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n\n        <Button disabled={!isConfirmed} onClick={handleContinueClick}>\n          {t('Continue')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default Acknowledgement\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ModalBody, ModalContainer, Message, ModalHeader, Box, Heading } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { WrappedTokenInfo } from 'state/lists/hooks'\nimport SwapWarningTokensConfig from 'config/constants/swapWarningTokens'\nimport SafemoonWarning from './SafemoonWarning'\nimport BondlyWarning from './BondlyWarning'\nimport Acknowledgement from './Acknowledgement'\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 440px;\n`\n\nconst MessageContainer = styled(Message)`\n  align-items: flex-start;\n  justify-content: flex-start;\n`\n\ninterface SwapWarningModalProps {\n  swapCurrency: WrappedTokenInfo\n  onDismiss?: () => void\n}\n\n// Modal is fired by a useEffect and doesn't respond to closeOnOverlayClick prop being set to false\nconst usePreventModalOverlayClick = () => {\n  useEffect(() => {\n    const preventClickHandler = (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      return false\n    }\n\n    document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n      el.addEventListener('click', preventClickHandler, true)\n    })\n\n    return () => {\n      document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n        el.removeEventListener('click', preventClickHandler, true)\n      })\n    }\n  }, [])\n}\n\nconst SwapWarningModal: React.FC<SwapWarningModalProps> = ({ swapCurrency, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  usePreventModalOverlayClick()\n\n  const TOKEN_WARNINGS = {\n    [getAddress(SwapWarningTokensConfig.safemoon.address)]: {\n      symbol: SwapWarningTokensConfig.safemoon.symbol,\n      component: <SafemoonWarning />,\n    },\n    [getAddress(SwapWarningTokensConfig.bondly.address)]: {\n      symbol: SwapWarningTokensConfig.bondly.symbol,\n      component: <BondlyWarning />,\n    },\n  }\n\n  const SWAP_WARNING = TOKEN_WARNINGS[swapCurrency.address]\n\n  return (\n    <StyledModalContainer minWidth=\"280px\">\n      <ModalHeader background={theme.colors.gradients.cardHeader}>\n        <Heading p=\"12px 24px\">{t('Notice for trading %symbol%', { symbol: SWAP_WARNING.symbol })}</Heading>\n      </ModalHeader>\n      <ModalBody p=\"24px\">\n        <MessageContainer variant=\"warning\" mb=\"24px\">\n          <Box>{SWAP_WARNING.component}</Box>\n        </MessageContainer>\n        <Acknowledgement handleContinueClick={onDismiss} />\n      </ModalBody>\n    </StyledModalContainer>\n  )\n}\n\nexport default SwapWarningModal\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { CurrencyAmount, JSBI, Token, Trade } from '@pancakeswap/sdk'\nimport { Button, Text, ArrowDownIcon, Box, useModal } from '@pancakeswap/uikit'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { useTranslation } from 'contexts/Localization'\nimport SwapWarningTokens from 'config/constants/swapWarningTokens'\nimport { getAddress } from 'utils/addressHelpers'\nimport AddressInputPanel from './components/AddressInputPanel'\nimport { GreyCard } from '../../components/Card'\nimport Column, { AutoColumn } from '../../components/Layout/Column'\nimport ConfirmSwapModal from './components/ConfirmSwapModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { AutoRow, RowBetween } from '../../components/Layout/Row'\nimport AdvancedSwapDetailsDropdown from './components/AdvancedSwapDetailsDropdown'\nimport confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee'\nimport { ArrowWrapper, SwapCallbackError, Wrapper } from './components/styleds'\nimport TradePrice from './components/TradePrice'\nimport ImportTokenWarningModal from './components/ImportTokenWarningModal'\nimport ProgressSteps from './components/ProgressSteps'\nimport { AppHeader, AppBody } from '../../components/App'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback'\nimport { useSwapCallback } from '../../hooks/useSwapCallback'\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback'\nimport { Field } from '../../state/swap/actions'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n} from '../../state/swap/hooks'\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices'\nimport CircleLoader from '../../components/Loader/CircleLoader'\nimport Page from '../Page'\nimport SwapWarningModal from './components/SwapWarningModal'\n\nconst Label = styled(Text)`\n  font-size: 12px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.secondary};\n`\n\nexport default function Swap({ history }: RouteComponentProps) {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n\n  const { t } = useTranslation()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency],\n  )\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token: Token) => {\n      return !(token.address in defaultTokens)\n    })\n\n  const { account } = useActiveWeb3React()\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput],\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput],\n  )\n\n  // modal and loading\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then((hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\n  }, [attemptingTxn, swapErrorMessage, trade, txHash])\n\n  // swap warning state\n  const [swapWarningCurrency, setSwapWarningCurrency] = useState(null)\n  const [onPresentSwapWarningModal] = useModal(<SwapWarningModal swapCurrency={swapWarningCurrency} />)\n\n  const shouldShowSwapWarning = (swapCurrency) => {\n    const isWarningToken = Object.entries(SwapWarningTokens).find((warningTokenConfig) => {\n      const warningTokenData = warningTokenConfig[1]\n      const warningTokenAddress = getAddress(warningTokenData.address)\n      return swapCurrency.address === warningTokenAddress\n    })\n    return Boolean(isWarningToken)\n  }\n\n  useEffect(() => {\n    if (swapWarningCurrency) {\n      onPresentSwapWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [swapWarningCurrency])\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(inputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(inputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n    [onCurrencySelection],\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => {\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(outputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(outputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n\n    [onCurrencySelection],\n  )\n\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\n\n  const [onPresentImportTokenWarningModal] = useModal(\n    <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => history.push('/swap/')} />,\n  )\n\n  useEffect(() => {\n    if (importTokensNotInDefault.length > 0) {\n      onPresentImportTokenWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importTokensNotInDefault.length])\n\n  const [onPresentConfirmModal] = useModal(\n    <ConfirmSwapModal\n      trade={trade}\n      originalTrade={tradeToConfirm}\n      onAcceptChanges={handleAcceptChanges}\n      attemptingTxn={attemptingTxn}\n      txHash={txHash}\n      recipient={recipient}\n      allowedSlippage={allowedSlippage}\n      onConfirm={handleSwap}\n      swapErrorMessage={swapErrorMessage}\n      customOnDismiss={handleConfirmDismiss}\n    />,\n    true,\n    true,\n    'confirmSwapModal',\n  )\n\n  const rnd = Math.floor(Math.random() * 4);\n\n  const quotes = [\n    'ONEMOON MOOOOONIIIING!',\n    'Stay calm and stack errday gangz!',    \n    'Wen DJJ listing??',\n    'Check out @Onemooner on Twitter!',\n  ]\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader title={t('Exchange')} subtitle={t(quotes[rnd])} />\n        <Wrapper id=\"swap-page\">\n          <AutoColumn gap=\"md\">\n            <CurrencyInputPanel\n              label={independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From')}\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={!atMaxAmountInput}\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onMax={handleMaxInput}\n              onCurrencySelect={handleInputSelect}\n              otherCurrency={currencies[Field.OUTPUT]}\n              id=\"swap-currency-input\"\n            />\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                <ArrowWrapper clickable>\n                  <ArrowDownIcon\n                    width=\"16px\"\n                    onClick={() => {\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\n                      onSwitchTokens()\n                    }}\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\n                  />\n                </ArrowWrapper>\n                {recipient === null && !showWrap && isExpertMode ? (\n                  <Button variant=\"text\" id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                    {t('+ Add a send (optional)')}\n                  </Button>\n                ) : null}\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To')}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={handleOutputSelect}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n            />\n\n            {isExpertMode && recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDownIcon width=\"16px\" />\n                  </ArrowWrapper>\n                  <Button variant=\"text\" id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    {t('- Remove send')}\n                  </Button>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n\n            {showWrap ? null : (\n              <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\n                {Boolean(trade) && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Price')}</Label>\n                    <TradePrice\n                      price={trade?.executionPrice}\n                      showInverted={showInverted}\n                      setShowInverted={setShowInverted}\n                    />\n                  </RowBetween>\n                )}\n                {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                  <RowBetween color=\"primary\" align=\"center\">\n                    <Label color=\"primary\">{t('Slippage Tolerance')}</Label>\n                    <Text bold color=\"primary\">\n                      {allowedSlippage / 100}%\n                    </Text>\n                  </RowBetween>\n                )}\n              </AutoColumn>\n            )}\n          </AutoColumn>\n          <Box mt=\"1rem\">\n            {swapIsUnsupported ? (\n              <Button width=\"100%\" disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton width=\"100%\" />\n            ) : showWrap ? (\n              <Button width=\"100%\" disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                {wrapInputError ??\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n              </Button>\n            ) : noRoute && userHasSpecifiedInputOutput ? (\n              <GreyCard style={{ textAlign: 'center' }}>\n                <Text color=\"textSubtle\" mb=\"4px\">\n                  {t('Insufficient liquidity for this trade.')}\n                </Text>\n                {singleHopOnly && (\n                  <Text color=\"textSubtle\" mb=\"4px\">\n                    {t('Try enabling multi-hop trades.')}\n                  </Text>\n                )}\n              </GreyCard>\n            ) : showApproveFlow ? (\n              <RowBetween>\n                <Button\n                  variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n                  onClick={approveCallback}\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                  width=\"48%\"\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <AutoRow gap=\"6px\" justify=\"center\">\n                      {t('Enabling')} <CircleLoader stroke=\"white\" />\n                    </AutoRow>\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                    t('Enabled')\n                  ) : (\n                    t('Enable %asset%', { asset: currencies[Field.INPUT]?.symbol ?? '' })\n                  )}\n                </Button>\n                <Button\n                  variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        txHash: undefined,\n                      })\n                      onPresentConfirmModal()\n                    }\n                  }}\n                  width=\"48%\"\n                  id=\"swap-button\"\n                  disabled={\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                  }\n                >\n                  {priceImpactSeverity > 3 && !isExpertMode\n                    ? t('Price Impact High')\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap')}\n                </Button>\n              </RowBetween>\n            ) : (\n              <Button\n                variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n                onClick={() => {\n                  if (isExpertMode) {\n                    handleSwap()\n                  } else {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      txHash: undefined,\n                    })\n                    onPresentConfirmModal()\n                  }\n                }}\n                id=\"swap-button\"\n                width=\"100%\"\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n              >\n                {swapInputError ||\n                  (priceImpactSeverity > 3 && !isExpertMode\n                    ? `Price Impact Too High`\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap'))}\n              </Button>\n            )}\n            {showApproveFlow && (\n              <Column style={{ marginTop: '1rem' }}>\n                <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\n              </Column>\n            )}\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n          </Box>\n        </Wrapper>\n      </AppBody>\n      {!swapIsUnsupported ? (\n        <AdvancedSwapDetailsDropdown trade={trade} />\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.INPUT, currencies.OUTPUT]} />\n      )}\n    </Page>\n  )\n}\n","import { Percent } from '@pancakeswap/sdk'\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../../config/constants'\n\n/**\n * Given the price impact, get user confirmation.\n *\n * @param priceImpactWithoutFee price impact of the trade without the fee.\n */\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent): boolean {\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\n    return (\n      // eslint-disable-next-line no-alert\n      window.prompt(\n        `This swap has a price impact of at least ${PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(\n          0,\n        )}%. Please type the word \"confirm\" to continue with this swap.`,\n      ) === 'confirm'\n    )\n  }\n  if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\n    // eslint-disable-next-line no-alert\n    return window.confirm(\n      `This swap has a price impact of at least ${ALLOWED_PRICE_IMPACT_HIGH.toFixed(\n        0,\n      )}%. Please confirm that you would like to continue with this swap.`,\n    )\n  }\n  return true\n}\n","import React from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\nimport AddLiquidity from './index'\n\nexport function RedirectToAddLiquidity() {\n  return <Redirect to=\"/add/\" />\n}\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40}|BNB)-(0x[a-fA-F0-9]{40}|BNB)$/\nexport function RedirectOldAddLiquidityPathStructure(props: RouteComponentProps<{ currencyIdA: string }>) {\n  const {\n    match: {\n      params: { currencyIdA },\n    },\n  } = props\n  const match = currencyIdA.match(OLD_PATH_STRUCTURE)\n  if (match?.length) {\n    return <Redirect to={`/add/${match[1]}/${match[2]}`} />\n  }\n\n  return <AddLiquidity {...props} />\n}\n\nexport function RedirectDuplicateTokenIds(props: RouteComponentProps<{ currencyIdA: string; currencyIdB: string }>) {\n  const {\n    match: {\n      params: { currencyIdA, currencyIdB },\n    },\n  } = props\n  if (currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\n    return <Redirect to={`/add/${currencyIdA}`} />\n  }\n  return <AddLiquidity {...props} />\n}\n","import React from 'react'\nimport { RouteComponentProps, Redirect } from 'react-router-dom'\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40})-(0x[a-fA-F0-9]{40})$/\n\nfunction RedirectOldRemoveLiquidityPathStructure({\n  match: {\n    params: { tokens },\n  },\n}: RouteComponentProps<{ tokens: string }>) {\n  if (!OLD_PATH_STRUCTURE.test(tokens)) {\n    return <Redirect to=\"/pool\" />\n  }\n  const [currency0, currency1] = tokens.split('-')\n\n  return <Redirect to={`/remove/${currency0}/${currency1}`} />\n}\nexport default RedirectOldRemoveLiquidityPathStructure\n","import React from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\n\n// Redirects to swap but only replace the pathname\nexport function RedirectPathToSwapOnly({ location }: RouteComponentProps) {\n  return <Redirect to={{ ...location, pathname: '/swap' }} />\n}\n\n// Redirects from the /swap/:outputCurrency path to the /swap?outputCurrency=:outputCurrency format\nexport function RedirectToSwap(props: RouteComponentProps<{ outputCurrency: string }>) {\n  const {\n    location,\n    location: { search },\n    match: {\n      params: { outputCurrency },\n    },\n  } = props\n\n  return (\n    <Redirect\n      to={{\n        ...location,\n        pathname: '/swap',\n        search:\n          search && search.length > 1\n            ? `${search}&outputCurrency=${outputCurrency}`\n            : `?outputCurrency=${outputCurrency}`,\n      }}\n    />\n  )\n}\n","import React, { lazy } from 'react'\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { ResetCSS } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport { usePollBlockNumber } from 'state/block/hooks'\nimport { usePollCoreFarmData } from 'state/farms/hooks'\nimport { useFetchProfile } from 'state/profile/hooks'\nimport { DatePickerPortal } from 'components/DatePicker'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport { ToastListener } from './contexts/ToastsContext'\nimport PageLoader from './components/Loader/PageLoader'\n// import EasterEgg from './components/EasterEgg'\nimport history from './routerHistory'\n// Views included in the main bundle\nimport Pools from './views/Pools'\nimport Swap from './views/Swap'\nimport {\n  RedirectDuplicateTokenIds,\n  RedirectOldAddLiquidityPathStructure,\n  RedirectToAddLiquidity,\n} from './views/AddLiquidity/redirects'\nimport RedirectOldRemoveLiquidityPathStructure from './views/RemoveLiquidity/redirects'\nimport { RedirectPathToSwapOnly, RedirectToSwap } from './views/Swap/redirects'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\n// const FarmAuction = lazy(() => import('./views/FarmAuction'))\nconst Lottery = lazy(() => import('./views/Lottery'))\nconst Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\nconst Collectibles = lazy(() => import('./views/Collectibles'))\nconst Teams = lazy(() => import('./views/Teams'))\nconst Team = lazy(() => import('./views/Teams/Team'))\nconst Profile = lazy(() => import('./views/Profile'))\nconst TradingCompetition = lazy(() => import('./views/TradingCompetition'))\nconst Predictions = lazy(() => import('./views/Predictions'))\nconst Voting = lazy(() => import('./views/Voting'))\nconst Proposal = lazy(() => import('./views/Voting/Proposal'))\nconst CreateProposal = lazy(() => import('./views/Voting/CreateProposal'))\nconst AddLiquidity = lazy(() => import('./views/AddLiquidity'))\nconst Liquidity = lazy(() => import('./views/Pool'))\nconst PoolFinder = lazy(() => import('./views/PoolFinder'))\nconst RemoveLiquidity = lazy(() => import('./views/RemoveLiquidity'))\nconst TokenMigration = lazy(() => import('./views/TokenMigration'))\n\n// This config is required for number formatting\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  usePollBlockNumber()\n  useEagerConnect()\n  useFetchProfile()\n  usePollCoreFarmData()\n\n  return (\n    <Router history={history}>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <SuspenseWithChunkError fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            {/* <Route exact path=\"/farms/auction\">\n              <FarmAuction />\n            </Route> */}\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            {/* <Route path=\"/lottery\">\n              <Lottery />\n            </Route> */}\n            <Route path=\"/ifo\">\n              <Ifos />\n            </Route>\n            <Route path=\"/migrate\">\n              <TokenMigration />\n            </Route>\n            {/* <Route path=\"/collectibles\">\n              <Collectibles />\n            </Route>\n            <Route exact path=\"/teams\">\n              <Teams />\n            </Route>\n            <Route path=\"/teams/:id\">\n              <Team />\n            </Route>\n            <Route path=\"/profile\">\n              <Profile />\n            </Route>\n            <Route path=\"/competition\">\n              <TradingCompetition />\n            </Route>\n            <Route path=\"/prediction\">\n              <Predictions />\n            </Route>\n            <Route exact path=\"/voting\">\n              <Voting />\n            </Route>\n            <Route exact path=\"/voting/proposal/create\">\n              <CreateProposal />\n            </Route>\n            <Route path=\"/voting/proposal/:id\">\n              <Proposal />\n            </Route> */}\n\n            {/* Using this format because these components use routes injected props. We need to rework them with hooks */}\n            <Route exact strict path=\"/swap\" component={Swap} />\n            <Route exact strict path=\"/swap/:outputCurrency\" component={RedirectToSwap} />\n            <Route exact strict path=\"/send\" component={RedirectPathToSwapOnly} />\n            <Route exact strict path=\"/find\" component={PoolFinder} />\n            <Route exact strict path=\"/liquidity\" component={Liquidity} />\n            <Route exact strict path=\"/create\" component={RedirectToAddLiquidity} />\n            <Route exact path=\"/add\" component={AddLiquidity} />\n            <Route exact path=\"/add/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n            <Route exact path=\"/add/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n            <Route exact path=\"/create\" component={AddLiquidity} />\n            <Route exact path=\"/create/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n            <Route exact path=\"/create/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n            <Route exact strict path=\"/remove/:tokens\" component={RedirectOldRemoveLiquidityPathStructure} />\n            <Route exact strict path=\"/remove/:currencyIdA/:currencyIdB\" component={RemoveLiquidity} />\n\n            {/* Redirect */}\n            <Route path=\"/pool\">\n              <Redirect to=\"/liquidity\" />\n            </Route>\n            <Route path=\"/staking\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/syrup\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/nft\">\n              <Redirect to=\"/collectibles\" />\n            </Route>\n\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </SuspenseWithChunkError>\n      </Menu>\n      {/* <EasterEgg iterations={2} /> */}\n      <ToastListener />\n      <DatePickerPortal />\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React from 'react'\nimport { ModalProvider, light, dark } from '@pancakeswap/uikit'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { Provider } from 'react-redux'\nimport { ThemeProvider } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\nimport { getLibrary } from 'utils/web3React'\nimport { LanguageProvider } from 'contexts/Localization'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport { ToastsProvider } from 'contexts/ToastsContext'\nimport store from 'state'\n\nconst ThemeProviderWrapper = (props) => {\n  const [isDark] = useThemeManager()\n  return <ThemeProvider theme={isDark ? dark : light} {...props} />\n}\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Provider store={store}>\n        <ToastsProvider>\n          <HelmetProvider>\n            <ThemeProviderWrapper>\n              <LanguageProvider>\n                <RefreshContextProvider>\n                  <ModalProvider>{children}</ModalProvider>\n                </RefreshContextProvider>\n              </LanguageProvider>\n            </ThemeProviderWrapper>\n          </HelmetProvider>\n        </ToastsProvider>\n      </Provider>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import React, { useMemo, ReactNode } from 'react'\nimport ReactDOM from 'react-dom'\nimport useActiveWeb3React from './hooks/useActiveWeb3React'\nimport { BLOCKED_ADDRESSES } from './config/constants'\nimport ApplicationUpdater from './state/application/updater'\nimport ListsUpdater from './state/lists/updater'\nimport MulticallUpdater from './state/multicall/updater'\nimport TransactionUpdater from './state/transactions/updater'\nimport App from './App'\nimport Providers from './Providers'\n\nfunction Updaters() {\n  return (\n    <>\n      <ListsUpdater />\n      <ApplicationUpdater />\n      <TransactionUpdater />\n      <MulticallUpdater />\n    </>\n  )\n}\n\nfunction Blocklist({ children }: { children: ReactNode }) {\n  const { account } = useActiveWeb3React()\n  const blocked: boolean = useMemo(() => Boolean(account && BLOCKED_ADDRESSES.indexOf(account) !== -1), [account])\n  if (blocked) {\n    return <div>Blocked address</div>\n  }\n  return <>{children}</>\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Blocklist>\n      <Providers>\n        <Updaters />\n        <App />\n      </Providers>\n    </Blocklist>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}